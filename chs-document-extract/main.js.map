{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/component-version/component-version.component.ts","./src/app/component-version/component-version.component.html","./src/app/document-list/document-list.component.ts","./src/app/document-list/document-list.component.html","./src/app/document-tracking/document-tracking.component.ts","./src/app/document-tracking/document-tracking.component.html","./src/app/patient-selection/patient-selection.component.ts","./src/app/patient-selection/patient-selection.component.html","./src/app/services/document-extract.service.ts","./src/app/system-configuration/nested-object-viewer.component.ts","./src/app/system-configuration/nested-object-viewer.component.html","./src/app/system-configuration/system-configuration.component.ts","./src/app/system-configuration/system-configuration.component.html","./src/environments/environment.ts","./src/main.ts","./src/app/version.js"],"sourcesContent":["import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {useHash: true})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from \"@angular/router\";\nimport { mPageService } from '@clinicaloffice/clinical-office-mpage-core';\nimport { CUSTOM_DATE_FORMATS } from './app.module';\nimport { DocumentExtractService, DmsMediaInstanceRequest } from './services/document-extract.service';\nimport { DocumentTrackingComponent } from './document-tracking/document-tracking.component';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  @ViewChild(DocumentTrackingComponent) documentTrackingComponent!: DocumentTrackingComponent;\n  \n  loading = true;\n  configLoaded = false;\n  configData: any = null;\n  showBackToTop = false;\n  patientInfo: any = null;\n\n  constructor(\n    public activatedRoute: ActivatedRoute, \n    public mPage: mPageService,\n    private documentService: DocumentExtractService\n  ) {}\n\n  ngOnInit(): void {\n    // Grab any parameters in the URL (Used in Cerner Components)\n    this.activatedRoute.queryParams.subscribe(params => {\n      this.mPage.personId = params['personId'] ? parseInt(params['personId']) : this.mPage.personId;\n      this.mPage.encntrId = params['encounterId'] ? parseInt(params['encounterId']) : this.mPage.encntrId;\n      this.mPage.prsnlId = params['userId'] ? parseInt(params['userId']) : this.mPage.prsnlId;\n    });\n\n    // Perform MPage Initialization\n    setTimeout((e: any) => {\n      this.mPage.setMaxInstances(4, true, 'ORG', false);\n      \n      // Wait for service to be ready before loading configuration\n      this.waitForServiceReady();\n    }, 0);\n\n    // Setup back to top functionality\n    this.setupBackToTop();\n  }\n\n  async waitForServiceReady(): Promise<void> {\n    while (!this.mPage.serviceReady) {\n      // Polling loop to wait for MPage service initialization\n      // Service readiness is required before making API calls to Cerner\n      await new Promise(resolve => setTimeout(resolve, 1000));\n    }\n    \n    // MPage service is now ready for API interactions\n    console.log('MPage service is ready, loading configuration...');\n    \n    // Load configuration data\n    this.loadConfiguration();\n  }\n\n  private loadConfiguration(): void {\n    this.documentService.getConfigData().subscribe({\n      next: (configData) => {\n        console.log('Configuration loaded successfully:', configData);\n        this.configData = configData;\n        this.configLoaded = true;\n        this.loading = false;\n      },\n      error: (error) => {\n        console.error('Failed to load configuration:', error);\n        this.loading = false;\n        // Continue without configuration for now\n      }\n    });\n  }\n\n  /**\n   * Setup back to top functionality\n   */\n  private setupBackToTop(): void {\n    window.addEventListener('scroll', () => {\n      this.showBackToTop = window.pageYOffset > 400;\n    });\n  }\n\n  /**\n   * Scroll to top of the page\n   */\n  scrollToTop(): void {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n  }\n\n  /**\n   * Handle patient selection from patient-selection component\n   * @param patientInfo The selected patient information\n   */\n  onPatientSelected(patientInfo: any): void {\n    this.patientInfo = patientInfo;\n  }\n\n  /**\n   * Handle download request from document-list component\n   * @param downloadData The download request data\n   */\n  onDownloadRequest(downloadData: {personId: number, encntrId: number, dmsMediaInstanceRequests: DmsMediaInstanceRequest[]}): void {\n    // Pass the download request to the document tracking component\n    if (this.documentTrackingComponent) {\n      this.documentTrackingComponent.handleDownloadRequest(downloadData);\n    }\n  }\n\n}\n","<div class=\"app-container\">\n  <app-component-version></app-component-version>\n  \n  <h1>CHS Document Extract</h1>\n  \n  <div class=\"loading-overlay\" *ngIf=\"loading\">\n    <div class=\"loading-content\">\n      <div class=\"loading-spinner\"></div>\n      <p>Initializing application...</p>\n    </div>\n  </div>\n  \n  <div class=\"main-content\" [class.loading]=\"loading\">\n    <app-patient-selection [configLoaded]=\"configLoaded\" (patientSelected)=\"onPatientSelected($event)\"></app-patient-selection>\n    \n    <app-document-list \n      [documents]=\"patientInfo?.documents || []\" \n      [loading]=\"loading\"\n      [patientInfo]=\"patientInfo\"\n      (downloadRequest)=\"onDownloadRequest($event)\">\n    </app-document-list>\n    \n    <app-document-tracking \n      [currentPatient]=\"patientInfo\"\n      (downloadRequest)=\"onDownloadRequest($event)\">\n    </app-document-tracking>\n    \n    <app-system-configuration [configData]=\"configData\"></app-system-configuration>\n  </div>\n\n  <!-- Back to Top Button -->\n  <div class=\"back-to-top\" \n       [class.visible]=\"showBackToTop\" \n       (click)=\"scrollToTop()\"\n       title=\"Back to top\">\n    <i class=\"back-to-top-icon\">↑</i>\n  </div>\n  \n  <mpage-log-component></mpage-log-component>\n</div>\n","import { NgModule, ErrorHandler, APP_INITIALIZER } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ClinicalOfficeMpageModule, MaterialModule, ErrorHandlerService, ConfigService } from '@clinicaloffice/clinical-office-mpage-core'\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MatLuxonDateModule, LuxonDateAdapter } from '@angular/material-luxon-adapter';\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from '@angular/material/form-field';\nimport { ComponentVersionComponent } from './component-version/component-version.component';\nimport { PatientSelectionComponent } from './patient-selection/patient-selection.component';\nimport { DocumentListComponent } from './document-list/document-list.component';\nimport { DocumentTrackingComponent } from './document-tracking/document-tracking.component';\nimport { SystemConfigurationComponent } from './system-configuration/system-configuration.component';\nimport { NestedObjectViewerComponent } from './system-configuration/nested-object-viewer.component';\nimport { NZ_I18N } from 'ng-zorro-antd/i18n';\nimport { en_US } from 'ng-zorro-antd/i18n';\nimport { registerLocaleData } from '@angular/common';\nimport en from '@angular/common/locales/en';\nimport { HttpClientModule } from '@angular/common/http';\n\nregisterLocaleData(en);\n\nexport const configFactory = (configService: ConfigService) => {\n  return () => configService.loadConfig();\n}\n\n// Custom date formats\nexport const CUSTOM_DATE_FORMATS = {\n  parse: {\n    dateInput: ['dd-MMM-yyyy'],\n  },\n  display: {\n    dateInput: 'dd-MMM-yyyy',\n    dateTimeLabel: 'dd-MMM-yyyy HH:mm',\n    monthYearLabel: 'MMM yyyy',\n    dateA11yLabel: 'LL',\n    monthYearA11yLabel: 'MMMM yyyy',\n  }\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ComponentVersionComponent,\n    PatientSelectionComponent,\n    DocumentListComponent,\n    DocumentTrackingComponent,\n    SystemConfigurationComponent,\n    NestedObjectViewerComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    ClinicalOfficeMpageModule,\n    MaterialModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatLuxonDateModule,\n    HttpClientModule\n    //    MatMomentDateModule\n  ],\n  providers: [\n    {\n      provide: APP_INITIALIZER,\n      useFactory: configFactory,\n      deps: [ConfigService],\n      multi: true\n    },\n    { provide: ErrorHandler, useClass: ErrorHandlerService },\n    { provide: DateAdapter, useClass: LuxonDateAdapter, deps: [MAT_DATE_LOCALE] },\n//    { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { appearance: 'outline' } },\n    {\n      provide: MAT_DATE_FORMATS, useValue: CUSTOM_DATE_FORMATS\n    },\n{ provide: NZ_I18N, useValue: en_US }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import { Component } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n\n@Component({\n  selector: 'app-component-version',\n  templateUrl: './component-version.component.html',\n  styleUrls: ['./component-version.component.scss']\n})\nexport class ComponentVersionComponent {\n\n  currentApplicationVersion = environment.appVersion;\n  packageVersion = environment.packageVersion;\n  gitBranch = environment.gitBranch;\n\n}\n","{{currentApplicationVersion}}","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { PatientDocument, PatientInfo, DmsMediaInstanceRequest } from '../services/document-extract.service';\n\n@Component({\n  selector: 'app-document-list',\n  templateUrl: './document-list.component.html',\n  styleUrls: ['./document-list.component.scss']\n})\nexport class DocumentListComponent implements OnInit {\n  @Input() documents: PatientDocument[] = [];\n  @Input() loading = false;\n  @Input() patientInfo: PatientInfo | null = null;\n  @Output() documentSelectionChange = new EventEmitter<PatientDocument[]>();\n  @Output() downloadRequest = new EventEmitter<{personId: number, encntrId: number, dmsMediaInstanceRequests: DmsMediaInstanceRequest[]}>();\n\n  selectedDocuments: PatientDocument[] = [];\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  /**\n   * Toggles selection of a document\n   * @param document The document to toggle\n   */\n  toggleDocumentSelection(document: PatientDocument): void {\n    const index = this.selectedDocuments.findIndex(doc => doc.id === document.id);\n    \n    if (index > -1) {\n      // Remove from selection\n      this.selectedDocuments.splice(index, 1);\n      document.selected = false;\n    } else {\n      // Add to selection\n      this.selectedDocuments.push(document);\n      document.selected = true;\n    }\n\n    this.documentSelectionChange.emit(this.selectedDocuments);\n  }\n\n  /**\n   * Selects all documents\n   */\n  selectAll(): void {\n    this.documents.forEach(doc => {\n      doc.selected = true;\n    });\n    this.selectedDocuments = [...this.documents];\n    this.documentSelectionChange.emit(this.selectedDocuments);\n  }\n\n  /**\n   * Deselects all documents\n   */\n  deselectAll(): void {\n    this.documents.forEach(doc => {\n      doc.selected = false;\n    });\n    this.selectedDocuments = [];\n    this.documentSelectionChange.emit(this.selectedDocuments);\n  }\n\n  /**\n   * Initiates download of selected documents\n   */\n  downloadSelected(): void {\n    if (this.selectedDocuments.length > 0 && this.patientInfo) {\n      const dmsMediaInstanceRequests: DmsMediaInstanceRequest[] = this.selectedDocuments.map(doc => ({\n        mediaInstanceId: parseInt(doc.id),\n        documentType: doc.contentTypeKey || 'PDF',\n        filename: `${doc.documentName || 'document'}_${doc.id}.${this.getFileExtension(doc.contentTypeKey)}`\n      }));\n      \n      this.downloadRequest.emit({\n        personId: this.patientInfo.personId,\n        encntrId: this.patientInfo.encntrId,\n        dmsMediaInstanceRequests: dmsMediaInstanceRequests\n      });\n    }\n  }\n\n  /**\n   * Gets file extension based on content type\n   * @param contentTypeKey The content type key\n   * @returns File extension\n   */\n  private getFileExtension(contentTypeKey: string): string {\n    switch (contentTypeKey?.toLowerCase()) {\n      case 'pdf':\n        return 'pdf';\n      case 'doc':\n      case 'docx':\n        return 'doc';\n      case 'txt':\n        return 'txt';\n      case 'jpg':\n      case 'jpeg':\n        return 'jpg';\n      case 'png':\n        return 'png';\n      default:\n        return 'pdf';\n    }\n  }\n\n  /**\n   * Checks if all documents are selected\n   */\n  get allSelected(): boolean {\n    return this.documents.length > 0 && this.selectedDocuments.length === this.documents.length;\n  }\n\n  /**\n   * Checks if some documents are selected\n   */\n  get someSelected(): boolean {\n    return this.selectedDocuments.length > 0 && this.selectedDocuments.length < this.documents.length;\n  }\n\n\n} ","<div class=\"document-list-container\">\n  <div class=\"list-header\">\n    <h3>Patient Documents</h3>\n    <div class=\"header-actions\" *ngIf=\"documents.length > 0\">\n      <button \n        class=\"btn btn-outline\"\n        (click)=\"selectAll()\"\n        [disabled]=\"allSelected\"\n      >\n        Select All\n      </button>\n      <button \n        class=\"btn btn-outline\"\n        (click)=\"deselectAll()\"\n        [disabled]=\"selectedDocuments.length === 0\"\n      >\n        Deselect All\n      </button>\n      <button \n        class=\"btn btn-primary\"\n        (click)=\"downloadSelected()\"\n        [disabled]=\"selectedDocuments.length === 0\"\n      >\n        Download Selected ({{ selectedDocuments.length }})\n      </button>\n    </div>\n  </div>\n\n  <div class=\"loading-container\" *ngIf=\"loading\">\n    <div class=\"loading-spinner\"></div>\n    <p>Loading documents...</p>\n  </div>\n\n  <div class=\"no-documents\" *ngIf=\"!loading && documents.length === 0\">\n    <p>No documents found for this patient.</p>\n  </div>\n\n  <div class=\"documents-table\" *ngIf=\"!loading && documents.length > 0\">\n    <table>\n      <thead>\n        <tr>\n          <th class=\"checkbox-column\">\n            <input \n              type=\"checkbox\" \n              [checked]=\"allSelected\"\n              [indeterminate]=\"someSelected\"\n              (change)=\"allSelected ? deselectAll() : selectAll()\"\n            />\n          </th>\n          <th>Document Name</th>\n          <th>Content Type</th>\n          <th>Date Created</th>\n          <th>Size</th>\n          <th>Media Type</th>\n          <th>Application</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr \n          *ngFor=\"let document of documents\"\n          [class.selected]=\"document.selected\"\n          (click)=\"toggleDocumentSelection(document)\"\n        >\n          <td class=\"checkbox-column\">\n            <input \n              type=\"checkbox\" \n              [checked]=\"document.selected\"\n              (click)=\"$event.stopPropagation()\"\n              (change)=\"toggleDocumentSelection(document)\"\n            />\n          </td>\n          <td class=\"document-name\">{{ document.documentName }}</td>\n          <td class=\"document-type\">{{ document.contentTypeDisplay }}</td>\n          <td class=\"document-date\">{{ document.documentDate | date:'MM/dd/yyyy' }}</td>\n          <td class=\"document-size\">{{ document.documentSize }}</td>\n          <td class=\"media-type\">{{ document.mediaType }}</td>\n          <td class=\"app-context\">{{ document.appCtx }}</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n\n  <div class=\"selection-summary\" *ngIf=\"selectedDocuments.length > 0\">\n    <p>{{ selectedDocuments.length }} document(s) selected</p>\n  </div>\n</div> ","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { DocumentExtractService, PatientInfo, DmsMediaInstanceRequest, DownloadDocumentsResponse } from '../services/document-extract.service';\n\nexport interface DownloadStatus {\n  documentId: string;\n  status: 'pending' | 'downloading' | 'completed' | 'failed';\n  progress?: number;\n  error?: string;\n  filename?: string;\n  documentType?: string;\n}\n\n@Component({\n  selector: 'app-document-tracking',\n  templateUrl: './document-tracking.component.html',\n  styleUrls: ['./document-tracking.component.scss']\n})\nexport class DocumentTrackingComponent implements OnInit {\n  @Input() currentPatient: PatientInfo | null = null;\n  @Output() downloadRequest = new EventEmitter<{personId: number, encntrId: number, dmsMediaInstanceRequests: DmsMediaInstanceRequest[]}>();\n  \n  downloadQueue: DownloadStatus[] = [];\n  completedDownloads: DownloadStatus[] = [];\n  failedDownloads: DownloadStatus[] = [];\n  isDownloading = false;\n\n  constructor(private documentService: DocumentExtractService) { }\n\n  ngOnInit(): void {\n  }\n\n  /**\n   * Handles download request from document list component\n   * @param downloadData The download request data\n   */\n  handleDownloadRequest(downloadData: {personId: number, encntrId: number, dmsMediaInstanceRequests: DmsMediaInstanceRequest[]}): void {\n    this.startDownload(downloadData.personId, downloadData.encntrId, downloadData.dmsMediaInstanceRequests);\n  }\n\n  /**\n   * Initiates download for selected documents\n   * @param personId The patient's person ID\n   * @param encntrId The patient's encounter ID\n   * @param dmsMediaInstanceRequests Array of document media instance requests to download\n   */\n  startDownload(personId: number, encntrId: number, dmsMediaInstanceRequests: DmsMediaInstanceRequest[]): void {\n    if (dmsMediaInstanceRequests.length === 0) {\n      return;\n    }\n\n    this.isDownloading = true;\n    \n    // Initialize download queue\n    this.downloadQueue = dmsMediaInstanceRequests.map(request => ({\n      documentId: request.mediaInstanceId.toString(),\n      status: 'pending' as const,\n      filename: request.filename,\n      documentType: request.documentType\n    }));\n\n    // Start the download process\n    this.documentService.downloadDocuments(personId, encntrId, dmsMediaInstanceRequests).subscribe({\n      next: (response: DownloadDocumentsResponse) => {\n        this.handleDownloadResponse(response);\n      },\n      error: (error) => {\n        this.handleDownloadError(error);\n      }\n    });\n  }\n\n  /**\n   * Handles successful download response\n   * @param response The download response from the service\n   */\n  private handleDownloadResponse(response: DownloadDocumentsResponse): void {\n    // Process each download result\n    response.downloadResults.forEach((result, index) => {\n      // Find corresponding item in download queue\n      const queueItem = this.downloadQueue.find(item => \n        item.documentId === result.mediaInstanceId.toString()\n      );\n\n      if (queueItem) {\n        if (result.status === 1) {\n          // Download successful\n          queueItem.status = 'completed';\n          queueItem.progress = 100;\n          this.moveToCompleted(queueItem);\n        } else {\n          // Download failed\n          queueItem.status = 'failed';\n          queueItem.error = result.message;\n          this.moveToFailed(queueItem);\n        }\n      }\n    });\n\n    // Clear download queue after processing\n    this.isDownloading = false;\n    this.downloadQueue = [];\n  }\n\n  /**\n   * Handles download errors\n   * @param error The error from the download service\n   */\n  private handleDownloadError(error: any): void {\n    console.error('Download error:', error);\n    \n    // Mark all pending items as failed\n    this.downloadQueue.forEach(item => {\n      if (item.status === 'pending' || item.status === 'downloading') {\n        item.status = 'failed';\n        item.error = 'Download failed';\n        this.moveToFailed(item);\n      }\n    });\n\n    this.isDownloading = false;\n    this.downloadQueue = [];\n  }\n\n  /**\n   * Moves a completed download to the completed list\n   * @param item The completed download item\n   */\n  private moveToCompleted(item: DownloadStatus): void {\n    this.completedDownloads.push(item);\n  }\n\n  /**\n   * Moves a failed download to the failed list\n   * @param item The failed download item\n   */\n  private moveToFailed(item: DownloadStatus): void {\n    this.failedDownloads.push(item);\n  }\n\n  /**\n   * Retries a failed download\n   * @param item The failed download item to retry\n   */\n  retryDownload(item: DownloadStatus): void {\n    if (!this.currentPatient) {\n      console.error('No current patient available for retry');\n      return;\n    }\n\n    // Remove from failed list\n    const index = this.failedDownloads.findIndex(failed => failed.documentId === item.documentId);\n    if (index > -1) {\n      this.failedDownloads.splice(index, 1);\n    }\n\n    // Add to download queue\n    this.downloadQueue.push({\n      documentId: item.documentId,\n      status: 'pending',\n      filename: item.filename,\n      documentType: item.documentType\n    });\n\n    // Create download request for this single item\n    const retryRequest: DmsMediaInstanceRequest = {\n      mediaInstanceId: parseInt(item.documentId),\n      documentType: item.documentType || 'PDF',\n      filename: item.filename || `document_${item.documentId}.pdf`\n    };\n\n    // Start download for this single item using current patient context\n    this.startDownload(this.currentPatient.personId, this.currentPatient.encntrId, [retryRequest]);\n  }\n\n  /**\n   * Clears completed downloads\n   */\n  clearCompleted(): void {\n    this.completedDownloads = [];\n  }\n\n  /**\n   * Clears failed downloads\n   */\n  clearFailed(): void {\n    this.failedDownloads = [];\n  }\n\n  /**\n   * Gets the status text for display\n   * @param status The download status\n   * @returns Status text\n   */\n  getStatusText(status: string): string {\n    switch (status) {\n      case 'pending': return 'Pending';\n      case 'downloading': return 'Downloading';\n      case 'completed': return 'Completed';\n      case 'failed': return 'Failed';\n      default: return 'Unknown';\n    }\n  }\n\n  /**\n   * Gets the status class for styling\n   * @param status The download status\n   * @returns CSS class name\n   */\n  getStatusClass(status: string): string {\n    switch (status) {\n      case 'pending': return 'status-pending';\n      case 'downloading': return 'status-downloading';\n      case 'completed': return 'status-completed';\n      case 'failed': return 'status-failed';\n      default: return 'status-unknown';\n    }\n  }\n} ","<div class=\"document-tracking-container\">\n  <div class=\"tracking-header\">\n    <h3>Document Download Tracking</h3>\n  </div>\n\n  <!-- Active Downloads -->\n  <div class=\"tracking-section\" *ngIf=\"downloadQueue.length > 0\">\n    <h4>Active Downloads</h4>\n    <div class=\"download-list\">\n      <div \n        *ngFor=\"let item of downloadQueue\" \n        class=\"download-item\"\n        [class]=\"getStatusClass(item.status)\"\n      >\n        <div class=\"download-info\">\n          <div class=\"document-id\">Document ID: {{ item.documentId }}</div>\n          <div class=\"status\">{{ getStatusText(item.status) }}</div>\n        </div>\n        \n        <div class=\"progress-container\" *ngIf=\"item.status === 'downloading'\">\n          <div class=\"progress-bar\">\n            <div \n              class=\"progress-fill\" \n              [style.width.%]=\"item.progress || 0\"\n            ></div>\n          </div>\n          <div class=\"progress-text\">{{ item.progress || 0 }}%</div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- Completed Downloads -->\n  <div class=\"tracking-section\" *ngIf=\"completedDownloads.length > 0\">\n    <div class=\"section-header\">\n      <h4>Completed Downloads</h4>\n      <button class=\"btn btn-outline\" (click)=\"clearCompleted()\">\n        Clear All\n      </button>\n    </div>\n    <div class=\"download-list\">\n      <div \n        *ngFor=\"let item of completedDownloads\" \n        class=\"download-item status-completed\"\n      >\n        <div class=\"download-info\">\n          <div class=\"document-id\">Document ID: {{ item.documentId }}</div>\n          <div class=\"status\">{{ getStatusText(item.status) }}</div>\n        </div>\n        <div class=\"completion-indicator\">\n          <span class=\"checkmark\">✓</span>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- Failed Downloads -->\n  <div class=\"tracking-section\" *ngIf=\"failedDownloads.length > 0\">\n    <div class=\"section-header\">\n      <h4>Failed Downloads</h4>\n      <button class=\"btn btn-outline\" (click)=\"clearFailed()\">\n        Clear All\n      </button>\n    </div>\n    <div class=\"download-list\">\n      <div \n        *ngFor=\"let item of failedDownloads\" \n        class=\"download-item status-failed\"\n      >\n        <div class=\"download-info\">\n          <div class=\"document-id\">Document ID: {{ item.documentId }}</div>\n          <div class=\"status\">{{ getStatusText(item.status) }}</div>\n          <div class=\"error-message\" *ngIf=\"item.error\">{{ item.error }}</div>\n        </div>\n        <button class=\"btn btn-retry\" (click)=\"retryDownload(item)\">\n          Retry\n        </button>\n      </div>\n    </div>\n  </div>\n\n  <!-- No Activity Message -->\n  <div class=\"no-activity\" *ngIf=\"downloadQueue.length === 0 && completedDownloads.length === 0 && failedDownloads.length === 0\">\n    <p>No download activity to track.</p>\n    <p>Select documents from the document list to start downloading.</p>\n  </div>\n</div> ","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { DocumentExtractService, PatientInfo, PatientSearchResult } from '../services/document-extract.service';\n\n@Component({\n  selector: 'app-patient-selection',\n  templateUrl: './patient-selection.component.html',\n  styleUrls: ['./patient-selection.component.scss']\n})\nexport class PatientSelectionComponent implements OnInit {\n  @Input() configLoaded = false;\n  @Output() patientSelected = new EventEmitter<PatientInfo>();\n  \n  patientForm: FormGroup;\n  loading = false;\n  patientInfo: PatientInfo | null = null;\n  patientSearchResults: PatientSearchResult[] = [];\n  showPatientSelection = false;\n  errorMessage = '';\n\n  constructor(\n    private fb: FormBuilder,\n    private documentService: DocumentExtractService\n  ) {\n    this.patientForm = this.fb.group({\n      fin: ['', [Validators.required, Validators.minLength(1)]]\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  /**\n   * Handles form submission to search for patients\n   */\n  onSubmit(): void {\n    if (this.patientForm.valid) {\n      this.loading = true;\n      this.errorMessage = '';\n      this.patientInfo = null;\n      this.showPatientSelection = false;\n\n      const fin = this.patientForm.get('fin')?.value;\n\n      this.documentService.searchPatients(fin).subscribe({\n        next: (patients: PatientSearchResult[]) => {\n          this.patientSearchResults = patients;\n          this.showPatientSelection = patients.length > 0;\n          this.loading = false;\n          \n          if (patients.length === 0) {\n            this.errorMessage = 'No patients found with the provided FIN.';\n          }\n        },\n        error: (error) => {\n          this.errorMessage = 'Error searching for patients. Please try again.';\n          this.loading = false;\n          console.error('Error searching for patients:', error);\n        }\n      });\n    }\n  }\n\n  /**\n   * Selects a patient and loads their documents\n   * @param patient The selected patient\n   */\n  selectPatient(patient: PatientSearchResult): void {\n    this.loading = true;\n    this.errorMessage = '';\n    this.showPatientSelection = false;\n\n    this.documentService.getPatientDocuments(patient.encntrId).subscribe({\n      next: (patientInfo: PatientInfo) => {\n        this.patientInfo = patientInfo;\n        this.loading = false;\n        // Emit the patient information to parent component\n        this.patientSelected.emit(patientInfo);\n      },\n      error: (error) => {\n        this.errorMessage = 'Error retrieving patient documents. Please try again.';\n        this.loading = false;\n        console.error('Error fetching patient documents:', error);\n      }\n    });\n  }\n\n  /**\n   * Resets the form and clears patient data\n   */\n  resetForm(): void {\n    this.patientForm.reset();\n    this.patientInfo = null;\n    this.patientSearchResults = [];\n    this.showPatientSelection = false;\n    this.errorMessage = '';\n  }\n} ","<div class=\"patient-selection-container\">\n  <div class=\"form-section\">\n    <h2>Patient Document Lookup</h2>\n    \n    <div class=\"config-status\" *ngIf=\"!configLoaded\">\n      <p>Loading configuration...</p>\n    </div>\n    \n    <form [formGroup]=\"patientForm\" (ngSubmit)=\"onSubmit()\" class=\"patient-form\" [class.disabled]=\"!configLoaded\">\n      <div class=\"form-field\">\n        <label for=\"fin\">Patient FIN (Financial Identification Number)</label>\n        <input \n          id=\"fin\"\n          type=\"text\" \n          formControlName=\"fin\"\n          placeholder=\"Enter patient FIN\"\n          class=\"form-input\"\n          [class.error]=\"patientForm.get('fin')?.invalid && patientForm.get('fin')?.touched\"\n          [disabled]=\"!configLoaded\"\n        />\n        <div class=\"error-message\" *ngIf=\"patientForm.get('fin')?.invalid && patientForm.get('fin')?.touched\">\n          <span *ngIf=\"patientForm.get('fin')?.errors?.['required']\">FIN is required</span>\n          <span *ngIf=\"patientForm.get('fin')?.errors?.['minlength']\">FIN must be at least 1 character</span>\n        </div>\n      </div>\n\n      <div class=\"form-actions\">\n        <button \n          type=\"submit\" \n          class=\"btn btn-primary\"\n          [disabled]=\"patientForm.invalid || loading || !configLoaded\"\n        >\n          <span *ngIf=\"loading\">Searching...</span>\n          <span *ngIf=\"!loading\">Search Patients</span>\n        </button>\n        \n        <button \n          type=\"button\" \n          class=\"btn btn-secondary\"\n          (click)=\"resetForm()\"\n          [disabled]=\"loading\"\n        >\n          Reset\n        </button>\n      </div>\n    </form>\n\n    <div class=\"error-message\" *ngIf=\"errorMessage\">\n      {{ errorMessage }}\n    </div>\n  </div>\n\n  <!-- Patient Search Results -->\n  <div class=\"patient-search-results\" *ngIf=\"showPatientSelection && patientSearchResults.length > 0\">\n    <h3>Select a Patient</h3>\n    <div class=\"patient-list\">\n      <div \n        *ngFor=\"let patient of patientSearchResults\" \n        class=\"patient-item\"\n        (click)=\"selectPatient(patient)\"\n      >\n        <div class=\"patient-info\">\n          <div class=\"patient-name\">{{ patient.name }}</div>\n          <div class=\"patient-details\">\n            <span class=\"fin\">FIN: {{ patient.fin }}</span>\n            <span class=\"mrn\">MRN: {{ patient.mrn }}</span>\n            <span class=\"dob\">DOB: {{ patient.dateOfBirth | date:'MM/dd/yyyy' }}</span>\n            <span class=\"sex\">Sex: {{ patient.sex }}</span>\n          </div>\n          <div class=\"encounter-details\">\n            <span class=\"facility\">Facility: {{ patient.facility }}</span>\n            <span class=\"unit\">Unit: {{ patient.unit }}</span>\n            <span class=\"encntr-type\">Type: {{ patient.encntrType }}</span>\n            <span class=\"med-service\">Service: {{ patient.medService }}</span>\n          </div>\n          <div class=\"date-details\">\n            <span class=\"reg-date\">Registration: {{ patient.regDtTm | date:'MM/dd/yyyy' }}</span>\n            <span class=\"arrival-date\">Arrival: {{ patient.arrivalDtTm | date:'MM/dd/yyyy' }}</span>\n            <span class=\"discharge-date\" *ngIf=\"patient.dischDtTm.getTime() > 0\">Discharge: {{ patient.dischDtTm | date:'MM/dd/yyyy' }}</span>\n          </div>\n        </div>\n        <div class=\"select-indicator\">→</div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"patient-info\" *ngIf=\"patientInfo\">\n    <h3>Patient Information</h3>\n    <div class=\"info-grid\">\n      <div class=\"info-item\">\n        <label>FIN:</label>\n        <span>{{ patientInfo.fin }}</span>\n      </div>\n      <div class=\"info-item\">\n        <label>Name:</label>\n        <span>{{ patientInfo.name }}</span>\n      </div>\n      <div class=\"info-item\">\n        <label>MRN:</label>\n        <span>{{ patientInfo.mrn }}</span>\n      </div>\n      <div class=\"info-item\">\n        <label>Date of Birth:</label>\n        <span>{{ patientInfo.dateOfBirth | date:'MM/dd/yyyy' }}</span>\n      </div>\n      <div class=\"info-item\">\n        <label>Sex:</label>\n        <span>{{ patientInfo.sex }}</span>\n      </div>\n      <div class=\"info-item\">\n        <label>Facility:</label>\n        <span>{{ patientInfo.facility }}</span>\n      </div>\n      <div class=\"info-item\">\n        <label>Unit:</label>\n        <span>{{ patientInfo.unit }}</span>\n      </div>\n      <div class=\"info-item\">\n        <label>Encounter Type:</label>\n        <span>{{ patientInfo.encntrType }}</span>\n      </div>\n      <div class=\"info-item\">\n        <label>Medical Service:</label>\n        <span>{{ patientInfo.medService }}</span>\n      </div>\n      <div class=\"info-item\">\n        <label>Registration Date:</label>\n        <span>{{ patientInfo.regDtTm | date:'MM/dd/yyyy' }}</span>\n      </div>\n      <div class=\"info-item\">\n        <label>Arrival Date:</label>\n        <span>{{ patientInfo.arrivalDtTm | date:'MM/dd/yyyy' }}</span>\n      </div>\n      <div class=\"info-item\" *ngIf=\"patientInfo.dischDtTm.getTime() > 0\">\n        <label>Discharge Date:</label>\n        <span>{{ patientInfo.dischDtTm | date:'MM/dd/yyyy' }}</span>\n      </div>\n      <div class=\"info-item\">\n        <label>Documents Found:</label>\n        <span>{{ patientInfo.documents.length }} {{ patientInfo.documents.length === 1 ? 'document' : 'documents' }}</span>\n      </div>\n      <div class=\"info-item\" *ngIf=\"patientInfo.documents.length === 0\">\n        <label>Status:</label>\n        <span class=\"no-documents\">No documents found for this patient</span>\n      </div>\n    </div>\n  </div>\n</div> ","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { CustomService } from '@clinicaloffice/clinical-office-mpage-core';\n\nexport interface PatientDocument {\n  id: string;\n  documentName: string;\n  documentType: string;\n  documentDate: Date;\n  documentSize: string;\n  selected: boolean;\n  contentTypeKey: string;\n  contentTypeDisplay: string;\n  contentTypeDescription: string;\n  identifier: string;\n  contentUid: string;\n  mediaType: string;\n  appCtx: string;\n  mediaObjectIdentifier: string;\n  parentEntityName: string;\n  parentEntityId: number;\n}\n\nexport interface PatientInfo {\n  fin: string;\n  name: string;\n  dateOfBirth: Date;\n  documents: PatientDocument[];\n  personId: number;\n  encntrId: number;\n  facility: string;\n  unit: string;\n  encntrType: string;\n  medService: string;\n  regDtTm: Date;\n  arrivalDtTm: Date;\n  dischDtTm: Date;\n  sex: string;\n  mrn: string;\n}\n\nexport interface PatientSearchResult {\n  fin: string;\n  name: string;\n  dateOfBirth: Date;\n  encntrId: number;\n  personId: number;\n  mrn: string;\n  facility: string;\n  unit: string;\n  encntrType: string;\n  medService: string;\n  regDtTm: Date;\n  arrivalDtTm: Date;\n  dischDtTm: Date;\n  sex: string;\n  selected?: boolean;\n}\n\nexport interface ConfigData {\n  // Configuration object structure will be defined based on actual response\n  [key: string]: any;\n}\n\nexport interface DmsMediaInstanceRequest {\n  mediaInstanceId: number;\n  documentType: string;\n  filename: string;\n}\n\nexport interface DownloadResult {\n  mediaInstanceId: number;\n  documentType: string;\n  filename: string;\n  status: number;\n  fullpath: string;\n  message: string;\n  documentName: string;\n  contentType: string;\n}\n\nexport interface DownloadDocumentsResponse {\n  downloadResults: DownloadResult[];\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DocumentExtractService {\n\n  private configData: ConfigData | null = null;\n\n  constructor(private customService: CustomService) { }\n\n  /**\n   * Loads configuration data from the service\n   * @returns Observable of ConfigData\n   */\n  getConfigData(): Observable<ConfigData> {\n    return new Observable<ConfigData>(observer => {\n      this.customService.load(\n        {\n          customScript: {\n            script: [\n              {\n                name: 'chs_document_extract_svc',\n                run: 'pre',\n                id: 'configData',\n                parameters: { \n                  requestType: 'getConfigData', \n                  requestData: {}\n                }\n              }\n            ],\n            clearPatientSource: true\n          }\n        },\n        [{ personId: 0, encntrId: 0 }],\n        () => {\n          try {\n            const raw = this.customService.get('configData');\n            \n            if (!raw) {\n              observer.error('No configuration data received');\n              return;\n            }\n\n            this.configData = raw;\n            observer.next(raw);\n            observer.complete();\n          } catch (error) {\n            observer.error(error);\n          }\n        }\n      );\n    });\n  }\n\n  /**\n   * Searches for patients by FIN\n   * @param fin The patient's FIN (Financial Identification Number)\n   * @returns Observable of PatientSearchResult array\n   */\n  searchPatients(fin: string): Observable<PatientSearchResult[]> {\n    return new Observable<PatientSearchResult[]>(observer => {\n      this.customService.load(\n        {\n          customScript: {\n            script: [\n              {\n                name: 'chs_document_extract_svc',\n                run: 'pre',\n                id: 'patientSearch',\n                parameters: { \n                  requestType: 'searchPatients', \n                  requestData: JSON.stringify({chs_document_extract_svc_request: { fin: fin }})\n                }\n              }\n            ],\n            clearPatientSource: true\n          }\n        },\n        [{ personId: 0, encntrId: 0 }],\n        () => {\n          try {\n            const raw = this.customService.get('patientSearch');\n            \n            if (!raw) {\n              observer.error('No patient search results received');\n              return;\n            }\n\n            // Map the raw response to PatientSearchResult array\n            const patients: PatientSearchResult[] = this.mapToPatientSearchResults(raw);\n            observer.next(patients);\n            observer.complete();\n          } catch (error) {\n            observer.error(error);\n          }\n        }\n      );\n    });\n  }\n\n  /**\n   * Searches for patient documents by Encounter ID\n   * @param encntrId The patient's Encounter ID\n   * @returns Observable of PatientInfo with documents\n   */\n  getPatientDocuments(encntrId: number): Observable<PatientInfo> {\n    return new Observable<PatientInfo>(observer => {\n      this.customService.load(\n        {\n          customScript: {\n            script: [\n              {\n                name: 'chs_document_extract_svc',\n                run: 'pre',\n                id: 'patientDocuments',\n                parameters: { \n                  requestType: 'getPatientDocuments', \n                  requestData: JSON.stringify({chs_document_extract_svc_request: { encntrId: encntrId }})\n                }\n              }\n            ],\n            clearPatientSource: true\n          }\n        },\n        [{ personId: 0, encntrId: 0 }],\n        () => {\n          try {\n            const raw = this.customService.get('patientDocuments');\n            \n            if (!raw) {\n              observer.error('No response from document service');\n              return;\n            }\n\n            // Map the raw response to PatientInfo structure\n            const patientInfo: PatientInfo = this.mapToPatientInfo(raw);\n            observer.next(patientInfo);\n            observer.complete();\n          } catch (error) {\n            observer.error(error);\n          }\n        }\n      );\n    });\n  }\n\n  /**\n   * Initiates document download for selected documents\n   * @param personId The patient's person ID\n   * @param encntrId The patient's encounter ID\n   * @param dmsMediaInstanceRequests Array of document media instance requests to download\n   * @returns Observable of download status\n   */\n  downloadDocuments(personId: number, encntrId: number, dmsMediaInstanceRequests: DmsMediaInstanceRequest[]): Observable<DownloadDocumentsResponse> {\n    return new Observable<DownloadDocumentsResponse>(observer => {\n      this.customService.load(\n        {\n          customScript: {\n            script: [\n              {\n                name: 'chs_document_extract_svc',\n                run: 'pre',\n                id: 'downloadDocuments',\n                parameters: { \n                  requestType: 'downloadDocuments', \n                  requestData: JSON.stringify({\n                    chs_document_extract_svc_request: {\n                      dmsMediaInstanceIds: dmsMediaInstanceRequests\n                    }\n                  })\n                }\n              }\n            ],\n            clearPatientSource: true\n          }\n        },\n        [{ personId: personId, encntrId: encntrId }],\n        () => {\n          try {\n            const raw = this.customService.get('downloadDocuments');\n            \n            if (!raw) {\n              observer.error('No response from download service');\n              return;\n            }\n\n            // Parse the response to get download results\n            const downloadResponse: DownloadDocumentsResponse = this.parseDownloadResponse(raw);\n            observer.next(downloadResponse);\n            observer.complete();\n          } catch (error) {\n            observer.error(error);\n          }\n        }\n      );\n    });\n  }\n\n  /**\n   * Maps raw service response to PatientSearchResult array\n   * @param raw Raw response from the service\n   * @returns PatientSearchResult array\n   */\n  private mapToPatientSearchResults(raw: any): PatientSearchResult[] {\n    // Map the qual array from the response to PatientSearchResult objects\n    if (raw.qual && Array.isArray(raw.qual)) {\n      return raw.qual.map((patient: any) => ({\n        fin: patient.fin || '',\n        name: patient.nameFullFormatted || '',\n        dateOfBirth: patient.dob ? this.parseDate(patient.dob) : new Date(),\n        encntrId: patient.encntrId || 0,\n        personId: patient.personId || 0,\n        mrn: patient.mrn || '',\n        facility: patient.facility || '',\n        unit: patient.unit || '',\n        encntrType: patient.encntrType || '',\n        medService: patient.medService || '',\n        regDtTm: patient.regDtTm ? new Date(patient.regDtTm) : new Date(),\n        arrivalDtTm: patient.arrivalDtTm ? new Date(patient.arrivalDtTm) : new Date(),\n        dischDtTm: patient.dischDtTm ? new Date(patient.dischDtTm) : new Date(),\n        sex: patient.sex || '',\n        selected: false\n      }));\n    }\n    return [];\n  }\n\n  /**\n   * Parses date strings in format \"DD-MMM-YYYY\" to Date object\n   * @param dateStr Date string in format \"DD-MMM-YYYY\"\n   * @returns Date object\n   */\n  private parseDate(dateStr: string): Date {\n    if (!dateStr || dateStr === '0000-00-00T00:00:00.000+00:00') {\n      return new Date();\n    }\n    \n    // Handle the \"DD-MMM-YYYY\" format from the sample\n    const months: { [key: string]: number } = {\n      'JAN': 0, 'FEB': 1, 'MAR': 2, 'APR': 3, 'MAY': 4, 'JUN': 5,\n      'JUL': 6, 'AUG': 7, 'SEP': 8, 'OCT': 9, 'NOV': 10, 'DEC': 11\n    };\n    \n    const parts = dateStr.split('-');\n    if (parts.length === 3) {\n      const day = parseInt(parts[0]);\n      const month = months[parts[1]];\n      const year = parseInt(parts[2]);\n      \n      if (!isNaN(day) && month !== undefined && !isNaN(year)) {\n        return new Date(year, month, day);\n      }\n    }\n    \n    // Fallback to standard Date parsing\n    return new Date(dateStr);\n  }\n\n  /**\n   * Maps raw service response to PatientInfo structure\n   * @param raw Raw response from the service\n   * @returns PatientInfo object\n   */\n  private mapToPatientInfo(raw: any): PatientInfo {\n    // Extract patient information from the first qual entry\n    const patientQual = raw.qual && raw.qual.length > 0 ? raw.qual[0] : {};\n    \n    // Map documents from dmsQual array\n    const documents: PatientDocument[] = patientQual.dmsQual ? patientQual.dmsQual.map((doc: any) => ({\n      id: doc.dmsMediaInstanceId?.toString() || '',\n      documentName: doc.name || '',\n      documentType: doc.contentTypeDisplay || '',\n      documentDate: doc.createdDtTm ? new Date(doc.createdDtTm) : new Date(),\n      documentSize: this.formatFileSize(doc.contentSize || 0),\n      selected: false,\n      contentTypeKey: doc.contentTypeKey || '',\n      contentTypeDisplay: doc.contentTypeDisplay || '',\n      contentTypeDescription: doc.contentTypeDescription || '',\n      identifier: doc.identifier || '',\n      contentUid: doc.contentUid || '',\n      mediaType: doc.mediaType || '',\n      appCtx: doc.appCtx || '',\n      mediaObjectIdentifier: doc.mediaObjectIdentifier || '',\n      parentEntityName: doc.parentEntityName || '',\n      parentEntityId: doc.parentEntityId || 0\n    })) : [];\n\n    return {\n      fin: patientQual.fin || '',\n      name: patientQual.nameFullFormatted || '',\n      dateOfBirth: patientQual.dob ? this.parseDate(patientQual.dob) : new Date(),\n      documents: documents,\n      personId: patientQual.personId || 0,\n      encntrId: patientQual.encntrId || 0,\n      facility: patientQual.facility || '',\n      unit: patientQual.unit || '',\n      encntrType: patientQual.encntrType || '',\n      medService: patientQual.medService || '',\n      regDtTm: patientQual.regDtTm ? new Date(patientQual.regDtTm) : new Date(),\n      arrivalDtTm: patientQual.arrivalDtTm ? new Date(patientQual.arrivalDtTm) : new Date(),\n      dischDtTm: patientQual.dischDtTm ? new Date(patientQual.dischDtTm) : new Date(),\n      sex: patientQual.sex || '',\n      mrn: patientQual.mrn || ''\n    };\n  }\n\n  /**\n   * Formats file size in bytes to human readable format\n   * @param bytes File size in bytes\n   * @returns Formatted file size string\n   */\n  private formatFileSize(bytes: number): string {\n    if (bytes === 0) return '0 Bytes';\n    \n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    \n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  }\n\n  /**\n   * Parses the download response from the service\n   * @param raw Raw response from the service\n   * @returns DownloadDocumentsResponse object\n   */\n  private parseDownloadResponse(raw: any): DownloadDocumentsResponse {\n    if (raw.downloadDocuments_reply && raw.downloadDocuments_reply.downloadResults) {\n      return {\n        downloadResults: raw.downloadDocuments_reply.downloadResults.map((result: any) => ({\n          mediaInstanceId: result.mediaInstanceId || 0,\n          documentType: result.documentType || '',\n          filename: result.filename || '',\n          status: result.status || 0,\n          fullpath: result.fullpath || '',\n          message: result.message || '',\n          documentName: result.documentName || '',\n          contentType: result.contentType || ''\n        }))\n      };\n    }\n    \n    // Return empty response if structure is not as expected\n    return {\n      downloadResults: []\n    };\n  }\n\n  /**\n   * Gets the loaded configuration data\n   * @returns ConfigData or null if not loaded\n   */\n  getLoadedConfigData(): ConfigData | null {\n    return this.configData;\n  }\n} ","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-nested-object-viewer',\n  templateUrl: './nested-object-viewer.component.html',\n  styleUrls: ['./nested-object-viewer.component.scss']\n})\nexport class NestedObjectViewerComponent {\n  @Input() data: any = null;\n  @Input() path: string = '';\n  @Input() expandedSections: Set<string> = new Set();\n  @Input() onTogglePath: (path: string) => void = () => {};\n\n  Array = Array;\n  JSON = JSON;\n\n  /**\n   * Gets the type of a value for display purposes\n   */\n  getValueType(value: any): string {\n    if (value === null) return 'null';\n    if (value === undefined) return 'undefined';\n    if (Array.isArray(value)) return 'array';\n    if (typeof value === 'object') return 'object';\n    return typeof value;\n  }\n\n  /**\n   * Checks if a value is expandable (object or array)\n   */\n  isExpandable(value: any): boolean {\n    return value !== null && \n           value !== undefined && \n           (typeof value === 'object' || Array.isArray(value));\n  }\n\n  /**\n   * Gets the display value for a primitive type\n   */\n  getDisplayValue(value: any): string {\n    if (value === null) return 'null';\n    if (value === undefined) return 'undefined';\n    if (typeof value === 'string') return `\"${value}\"`;\n    if (typeof value === 'boolean') return value.toString();\n    if (typeof value === 'number') return value.toString();\n    return JSON.stringify(value);\n  }\n\n  /**\n   * Gets the object keys for iteration\n   */\n  getObjectKeys(obj: any): string[] {\n    if (!obj || typeof obj !== 'object') return [];\n    return Object.keys(obj);\n  }\n\n  /**\n   * Gets the array length for display\n   */\n  getArrayLength(arr: any[]): number {\n    return Array.isArray(arr) ? arr.length : 0;\n  }\n\n  /**\n   * Checks if a value is an object (not array)\n   */\n  isObject(value: any): boolean {\n    return value !== null && typeof value === 'object' && !Array.isArray(value);\n  }\n\n  /**\n   * Checks if a value is an array\n   */\n  isArray(value: any): boolean {\n    return Array.isArray(value);\n  }\n\n  /**\n   * Formats a key for display\n   */\n  formatKey(key: string): string {\n    return key.replace(/([A-Z])/g, ' $1')\n              .replace(/^./, str => str.toUpperCase())\n              .trim();\n  }\n\n  /**\n   * Gets the full path for a nested key\n   */\n  getFullPath(key: string): string {\n    return this.path ? `${this.path}.${key}` : key;\n  }\n\n  /**\n   * Checks if a path is expanded\n   */\n  isPathExpanded(path: string): boolean {\n    return this.expandedSections.has(path);\n  }\n\n  /**\n   * Toggles a path's expanded state\n   */\n  togglePath(path: string): void {\n    this.onTogglePath(path);\n  }\n} ","<div class=\"nested-object-viewer\">\n  <div \n    *ngFor=\"let key of getObjectKeys(data)\"\n    class=\"nested-item\"\n  >\n    <!-- Section Header -->\n    <div \n      class=\"section-header\"\n      [class.expanded]=\"isPathExpanded(getFullPath(key))\"\n      (click)=\"togglePath(getFullPath(key))\"\n    >\n      <div class=\"section-info\">\n        <span class=\"expand-icon\">{{ isPathExpanded(getFullPath(key)) ? '▼' : '▶' }}</span>\n        <span class=\"section-key\">{{ formatKey(key) }}</span>\n        <span class=\"section-type\">({{ getValueType(data[key]) }})</span>\n        <span class=\"section-count\" *ngIf=\"isArray(data[key])\">\n          [{{ getArrayLength(data[key]) }} items]\n        </span>\n        <span class=\"section-count\" *ngIf=\"isObject(data[key])\">\n          [{{ getObjectKeys(data[key]).length }} keys]\n        </span>\n      </div>\n    </div>\n\n    <!-- Section Content -->\n    <div \n      class=\"section-content\"\n      *ngIf=\"isPathExpanded(getFullPath(key))\"\n    >\n      <div class=\"content-wrapper\">\n        <!-- Object Content -->\n        <div \n          *ngIf=\"isObject(data[key])\"\n          class=\"object-content\"\n        >\n          <div \n            *ngFor=\"let subKey of getObjectKeys(data[key])\"\n            class=\"sub-item\"\n          >\n            <div class=\"sub-key\">{{ subKey }}:</div>\n            <div class=\"sub-value\">\n              <span \n                *ngIf=\"!isExpandable(data[key][subKey])\"\n                class=\"primitive-value\"\n              >\n                {{ getDisplayValue(data[key][subKey]) }}\n              </span>\n              <span \n                *ngIf=\"isExpandable(data[key][subKey])\"\n                class=\"expandable-value\"\n              >\n                {{ getValueType(data[key][subKey]) }}\n                <span *ngIf=\"isArray(data[key][subKey])\">\n                  [{{ getArrayLength(data[key][subKey]) }}]\n                </span>\n                <span *ngIf=\"isObject(data[key][subKey])\">\n                  [{{ getObjectKeys(data[key][subKey]).length }}]\n                </span>\n              </span>\n            </div>\n          </div>\n        </div>\n\n        <!-- Array Content -->\n        <div \n          *ngIf=\"isArray(data[key])\"\n          class=\"array-content\"\n        >\n          <div \n            *ngFor=\"let item of data[key]; let i = index\"\n            class=\"array-item\"\n          >\n            <div class=\"array-index\">[{{ i }}]:</div>\n            <div class=\"array-value\">\n              <span \n                *ngIf=\"!isExpandable(item)\"\n                class=\"primitive-value\"\n              >\n                {{ getDisplayValue(item) }}\n              </span>\n              <span \n                *ngIf=\"isExpandable(item)\"\n                class=\"expandable-value\"\n              >\n                {{ getValueType(item) }}\n                <span *ngIf=\"isArray(item)\">\n                  [{{ getArrayLength(item) }}]\n                </span>\n                <span *ngIf=\"isObject(item)\">\n                  [{{ getObjectKeys(item).length }}]\n                </span>\n              </span>\n            </div>\n          </div>\n        </div>\n\n        <!-- Primitive Content -->\n        <div \n          *ngIf=\"!isExpandable(data[key])\"\n          class=\"primitive-content\"\n        >\n          <span class=\"primitive-value\">\n            {{ getDisplayValue(data[key]) }}\n          </span>\n        </div>\n\n        <!-- Recursive Nested Objects -->\n        <div \n          *ngIf=\"isExpandable(data[key])\"\n          class=\"nested-content\"\n        >\n          <app-nested-object-viewer\n            [data]=\"data[key]\"\n            [path]=\"getFullPath(key)\"\n            [expandedSections]=\"expandedSections\"\n            [onTogglePath]=\"onTogglePath\"\n          ></app-nested-object-viewer>\n        </div>\n      </div>\n    </div>\n  </div>\n</div> ","import { Component, OnInit, Input } from '@angular/core';\nimport { ConfigData } from '../services/document-extract.service';\n\n@Component({\n  selector: 'app-system-configuration',\n  templateUrl: './system-configuration.component.html',\n  styleUrls: ['./system-configuration.component.scss']\n})\nexport class SystemConfigurationComponent implements OnInit {\n  @Input() configData: ConfigData | null = null;\n  \n  loading = false;\n  error: string | null = null;\n  expandedSections: Set<string> = new Set();\n  Array = Array; // Make Array available in template\n  JSON = JSON; // Make JSON available in template\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  /**\n   * Toggles the expanded state of a section\n   * @param sectionKey The key of the section to toggle\n   */\n  toggleSection(sectionKey: string): void {\n    this.togglePath(sectionKey);\n  }\n\n  /**\n   * Checks if a section is expanded\n   * @param sectionKey The key of the section to check\n   * @returns True if the section is expanded\n   */\n  isSectionExpanded(sectionKey: string): boolean {\n    return this.isPathExpanded(sectionKey);\n  }\n\n  /**\n   * Gets the type of a value for display purposes\n   * @param value The value to check\n   * @returns The type string\n   */\n  getValueType(value: any): string {\n    if (value === null) return 'null';\n    if (value === undefined) return 'undefined';\n    if (Array.isArray(value)) return 'array';\n    if (typeof value === 'object') return 'object';\n    return typeof value;\n  }\n\n  /**\n   * Checks if a value is expandable (object or array)\n   * @param value The value to check\n   * @returns True if the value is expandable\n   */\n  isExpandable(value: any): boolean {\n    return value !== null && \n           value !== undefined && \n           (typeof value === 'object' || Array.isArray(value));\n  }\n\n  /**\n   * Gets the display value for a primitive type\n   * @param value The value to format\n   * @returns Formatted string\n   */\n  getDisplayValue(value: any): string {\n    if (value === null) return 'null';\n    if (value === undefined) return 'undefined';\n    if (typeof value === 'string') return `\"${value}\"`;\n    if (typeof value === 'boolean') return value.toString();\n    if (typeof value === 'number') return value.toString();\n    return JSON.stringify(value);\n  }\n\n  /**\n   * Gets the object keys for iteration\n   * @param obj The object to get keys from\n   * @returns Array of keys\n   */\n  getObjectKeys(obj: any): string[] {\n    if (!obj || typeof obj !== 'object') return [];\n    return Object.keys(obj);\n  }\n\n  /**\n   * Gets the array length for display\n   * @param arr The array to check\n   * @returns The length of the array\n   */\n  getArrayLength(arr: any[]): number {\n    return Array.isArray(arr) ? arr.length : 0;\n  }\n\n  /**\n   * Formats a key for display\n   * @param key The key to format\n   * @returns Formatted key string\n   */\n  formatKey(key: string): string {\n    return key.replace(/([A-Z])/g, ' $1')\n              .replace(/^./, str => str.toUpperCase())\n              .trim();\n  }\n\n  /**\n   * Checks if a value is an object (not array)\n   * @param value The value to check\n   * @returns True if the value is an object\n   */\n  isObject(value: any): boolean {\n    return value !== null && typeof value === 'object' && !Array.isArray(value);\n  }\n\n  /**\n   * Checks if a value is an array\n   * @param value The value to check\n   * @returns True if the value is an array\n   */\n  isArray(value: any): boolean {\n    return Array.isArray(value);\n  }\n\n  /**\n   * Expands all sections\n   */\n  expandAll(): void {\n    if (this.configData) {\n      this.expandedSections.clear();\n      this.expandAllRecursive(this.configData, '');\n    }\n  }\n\n  /**\n   * Recursively expands all nested objects and arrays\n   * @param obj The object to expand\n   * @param path The current path for generating unique keys\n   */\n  expandAllRecursive(obj: any, path: string): void {\n    if (!obj || typeof obj !== 'object') return;\n    \n    const keys = this.getObjectKeys(obj);\n    keys.forEach(key => {\n      const fullPath = path ? `${path}.${key}` : key;\n      this.expandedSections.add(fullPath);\n      \n      // Recursively expand nested objects and arrays\n      if (this.isExpandable(obj[key])) {\n        this.expandAllRecursive(obj[key], fullPath);\n      }\n    });\n  }\n\n  /**\n   * Gets a nested value by path\n   * @param obj The root object\n   * @param path The dot-separated path\n   * @returns The value at the path\n   */\n  getValueByPath(obj: any, path: string): any {\n    if (!path) return obj;\n    return path.split('.').reduce((current, key) => current?.[key], obj);\n  }\n\n  /**\n   * Checks if a path is expanded\n   * @param path The path to check\n   * @returns True if the path is expanded\n   */\n  isPathExpanded(path: string): boolean {\n    return this.expandedSections.has(path);\n  }\n\n  /**\n   * Toggles a path's expanded state\n   * @param path The path to toggle\n   */\n  togglePath(path: string): void {\n    if (this.expandedSections.has(path)) {\n      this.expandedSections.delete(path);\n    } else {\n      this.expandedSections.add(path);\n    }\n  }\n} ","<div class=\"system-configuration-container\">\n  <div class=\"config-header\">\n    <h3>System Configuration</h3>\n    <div class=\"config-status\">\n      <span class=\"status-indicator\" [class.loaded]=\"configData\"></span>\n      <span class=\"status-text\">{{ configData ? 'Configuration Loaded' : 'No Configuration' }}</span>\n    </div>\n  </div>\n\n  <div class=\"config-content\" *ngIf=\"configData\">\n    <div class=\"config-overview\">\n      <div class=\"overview-stats\">\n        <div class=\"stat-item\">\n          <span class=\"stat-label\">Configuration Size:</span>\n          <span class=\"stat-value\">{{ JSON.stringify(configData).length }} characters</span>\n        </div>\n        <div class=\"stat-item\">\n          <span class=\"stat-label\">Top Level Keys:</span>\n          <span class=\"stat-value\">{{ getObjectKeys(configData).length }}</span>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"json-viewer\">\n      <div class=\"viewer-header\">\n        <h4>Configuration Structure</h4>\n        <div class=\"viewer-controls\">\n          <button \n            class=\"btn btn-outline\"\n            (click)=\"expandedSections.clear()\"\n          >\n            Collapse All\n          </button>\n          <button \n            class=\"btn btn-outline\"\n            (click)=\"expandAll()\"\n          >\n            Expand All\n          </button>\n        </div>\n      </div>\n\n            <div class=\"json-content\">\n        <app-nested-object-viewer\n          [data]=\"configData\"\n          [path]=\"''\"\n          [expandedSections]=\"expandedSections\"\n          [onTogglePath]=\"togglePath.bind(this)\"\n        ></app-nested-object-viewer>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"no-config\" *ngIf=\"!configData\">\n    <div class=\"no-config-content\">\n      <div class=\"no-config-icon\">⚙️</div>\n      <h4>No Configuration Available</h4>\n      <p>Configuration data will appear here once loaded from the service.</p>\n    </div>\n  </div>\n</div> ","import { buildVersion, packageVersion, gitBranch } from '../app/version';\n\nexport const environment = {\n    appVersion: buildVersion,\n    packageVersion: packageVersion,\n    gitBranch: gitBranch,\n    production: false\n  };\n  ","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","// Auto-generated build version file\n// Generated on: 2025-07-11T16:12:33.997Z\nexport const buildVersion = 'v0.0.31-master';\nexport const packageVersion = '0.0.31';\nexport const gitBranch = 'master';\n"],"names":["RouterModule","routes","AppRoutingModule","_","_2","_3","forRoot","useHash","imports","i1","exports","DocumentTrackingComponent","i0","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","AppComponent","constructor","activatedRoute","mPage","documentService","loading","configLoaded","configData","showBackToTop","patientInfo","ngOnInit","queryParams","subscribe","params","personId","parseInt","encntrId","prsnlId","setTimeout","e","setMaxInstances","waitForServiceReady","setupBackToTop","_this","_asyncToGenerator","serviceReady","Promise","resolve","console","log","loadConfiguration","getConfigData","next","error","window","addEventListener","pageYOffset","scrollToTop","scrollTo","top","behavior","onPatientSelected","onDownloadRequest","downloadData","documentTrackingComponent","handleDownloadRequest","ɵɵdirectiveInject","ActivatedRoute","i2","mPageService","i3","DocumentExtractService","selectors","viewQuery","AppComponent_Query","rf","ctx","ɵɵtemplate","AppComponent_div_4_Template","ɵɵlistener","AppComponent_Template_app_patient_selection_patientSelected_6_listener","$event","AppComponent_Template_app_document_list_downloadRequest_7_listener","AppComponent_Template_app_document_tracking_downloadRequest_8_listener","AppComponent_Template_div_click_10_listener","ɵɵadvance","ɵɵproperty","ɵɵclassProp","documents","ɵɵpureFunction0","_c0","ErrorHandler","APP_INITIALIZER","BrowserModule","BrowserAnimationsModule","FormsModule","ReactiveFormsModule","ClinicalOfficeMpageModule","MaterialModule","ErrorHandlerService","ConfigService","MatLuxonDateModule","LuxonDateAdapter","DateAdapter","MAT_DATE_FORMATS","MAT_DATE_LOCALE","ComponentVersionComponent","PatientSelectionComponent","DocumentListComponent","SystemConfigurationComponent","NestedObjectViewerComponent","NZ_I18N","en_US","registerLocaleData","en","HttpClientModule","configFactory","configService","loadConfig","CUSTOM_DATE_FORMATS","parse","dateInput","display","dateTimeLabel","monthYearLabel","dateA11yLabel","monthYearA11yLabel","AppModule","bootstrap","provide","useFactory","deps","multi","useClass","useValue","declarations","environment","currentApplicationVersion","appVersion","packageVersion","gitBranch","decls","vars","template","ComponentVersionComponent_Template","ɵɵtextInterpolate","EventEmitter","DocumentListComponent_div_4_Template_button_click_1_listener","ɵɵrestoreView","_r6","ctx_r5","ɵɵnextContext","ɵɵresetView","selectAll","DocumentListComponent_div_4_Template_button_click_3_listener","ctx_r7","deselectAll","DocumentListComponent_div_4_Template_button_click_5_listener","ctx_r8","downloadSelected","ctx_r0","allSelected","selectedDocuments","length","ɵɵtextInterpolate1","DocumentListComponent_div_7_tr_19_Template_tr_click_0_listener","restoredCtx","_r12","document_r10","$implicit","ctx_r11","toggleDocumentSelection","DocumentListComponent_div_7_tr_19_Template_input_click_2_listener","stopPropagation","DocumentListComponent_div_7_tr_19_Template_input_change_2_listener","ctx_r14","selected","documentName","contentTypeDisplay","ɵɵpipeBind2","documentDate","documentSize","mediaType","appCtx","DocumentListComponent_div_7_Template_input_change_5_listener","_r16","ctx_r15","DocumentListComponent_div_7_tr_19_Template","ctx_r3","someSelected","ctx_r4","documentSelectionChange","downloadRequest","document","index","findIndex","doc","id","splice","push","emit","forEach","dmsMediaInstanceRequests","map","mediaInstanceId","documentType","contentTypeKey","filename","getFileExtension","toLowerCase","inputs","outputs","consts","DocumentListComponent_Template","DocumentListComponent_div_4_Template","DocumentListComponent_div_5_Template","DocumentListComponent_div_6_Template","DocumentListComponent_div_7_Template","DocumentListComponent_div_8_Template","ɵɵstyleProp","item_r5","progress","DocumentTrackingComponent_div_4_div_4_div_6_Template","ɵɵclassMap","getStatusClass","status","documentId","getStatusText","DocumentTrackingComponent_div_4_div_4_Template","downloadQueue","item_r9","DocumentTrackingComponent_div_5_Template_button_click_4_listener","_r11","ctx_r10","clearCompleted","DocumentTrackingComponent_div_5_div_7_Template","ctx_r1","completedDownloads","item_r13","DocumentTrackingComponent_div_6_div_7_div_6_Template","DocumentTrackingComponent_div_6_div_7_Template_button_click_7_listener","_r17","ctx_r16","retryDownload","ctx_r12","DocumentTrackingComponent_div_6_Template_button_click_4_listener","_r19","ctx_r18","clearFailed","DocumentTrackingComponent_div_6_div_7_Template","ctx_r2","failedDownloads","currentPatient","isDownloading","startDownload","request","toString","downloadDocuments","response","handleDownloadResponse","handleDownloadError","downloadResults","result","queueItem","find","item","moveToCompleted","message","moveToFailed","failed","retryRequest","DocumentTrackingComponent_Template","DocumentTrackingComponent_div_4_Template","DocumentTrackingComponent_div_5_Template","DocumentTrackingComponent_div_6_Template","DocumentTrackingComponent_div_7_Template","Validators","PatientSelectionComponent_div_10_span_1_Template","PatientSelectionComponent_div_10_span_2_Template","tmp_0_0","patientForm","get","errors","tmp_1_0","errorMessage","patient_r10","dischDtTm","PatientSelectionComponent_div_18_div_4_Template_div_click_0_listener","_r14","ctx_r13","selectPatient","PatientSelectionComponent_div_18_div_4_span_30_Template","name","fin","mrn","dateOfBirth","sex","facility","unit","encntrType","medService","regDtTm","arrivalDtTm","getTime","PatientSelectionComponent_div_18_div_4_Template","patientSearchResults","PatientSelectionComponent_div_19_div_62_Template","PatientSelectionComponent_div_19_div_68_Template","ctx_r6","ɵɵtextInterpolate2","fb","patientSelected","showPatientSelection","group","required","minLength","onSubmit","valid","value","searchPatients","patients","patient","getPatientDocuments","resetForm","reset","FormBuilder","PatientSelectionComponent_Template","PatientSelectionComponent_div_4_Template","PatientSelectionComponent_Template_form_ngSubmit_5_listener","PatientSelectionComponent_div_10_Template","PatientSelectionComponent_span_13_Template","PatientSelectionComponent_span_14_Template","PatientSelectionComponent_Template_button_click_15_listener","PatientSelectionComponent_div_17_Template","PatientSelectionComponent_div_18_Template","PatientSelectionComponent_div_19_Template","tmp_3_0","invalid","touched","tmp_5_0","Observable","customService","observer","load","customScript","script","run","parameters","requestType","requestData","clearPatientSource","raw","complete","JSON","stringify","chs_document_extract_svc_request","mapToPatientSearchResults","mapToPatientInfo","dmsMediaInstanceIds","downloadResponse","parseDownloadResponse","qual","Array","isArray","nameFullFormatted","dob","parseDate","Date","dateStr","months","parts","split","day","month","year","isNaN","undefined","patientQual","dmsQual","dmsMediaInstanceId","createdDtTm","formatFileSize","contentSize","contentTypeDescription","identifier","contentUid","mediaObjectIdentifier","parentEntityName","parentEntityId","bytes","k","sizes","i","Math","floor","parseFloat","pow","toFixed","downloadDocuments_reply","fullpath","contentType","getLoadedConfigData","ɵɵinject","CustomService","factory","ɵfac","providedIn","getArrayLength","data","key_r1","getObjectKeys","getDisplayValue","subKey_r12","ctx_r17","NestedObjectViewerComponent_div_1_div_11_div_2_div_1_span_5_span_2_Template","NestedObjectViewerComponent_div_1_div_11_div_2_div_1_span_5_span_3_Template","getValueType","isObject","NestedObjectViewerComponent_div_1_div_11_div_2_div_1_span_4_Template","NestedObjectViewerComponent_div_1_div_11_div_2_div_1_span_5_Template","isExpandable","NestedObjectViewerComponent_div_1_div_11_div_2_div_1_Template","ctx_r30","item_r28","ctx_r33","ctx_r34","NestedObjectViewerComponent_div_1_div_11_div_3_div_1_span_5_span_2_Template","NestedObjectViewerComponent_div_1_div_11_div_3_div_1_span_5_span_3_Template","ctx_r31","NestedObjectViewerComponent_div_1_div_11_div_3_div_1_span_4_Template","NestedObjectViewerComponent_div_1_div_11_div_3_div_1_span_5_Template","i_r29","ctx_r27","NestedObjectViewerComponent_div_1_div_11_div_3_div_1_Template","ctx_r9","getFullPath","expandedSections","onTogglePath","NestedObjectViewerComponent_div_1_div_11_div_2_Template","NestedObjectViewerComponent_div_1_div_11_div_3_Template","NestedObjectViewerComponent_div_1_div_11_div_4_Template","NestedObjectViewerComponent_div_1_div_11_div_5_Template","NestedObjectViewerComponent_div_1_Template_div_click_1_listener","_r43","ctx_r42","togglePath","NestedObjectViewerComponent_div_1_span_9_Template","NestedObjectViewerComponent_div_1_span_10_Template","NestedObjectViewerComponent_div_1_div_11_Template","isPathExpanded","formatKey","path","Set","obj","Object","keys","arr","key","replace","str","toUpperCase","trim","has","NestedObjectViewerComponent_Template","NestedObjectViewerComponent_div_1_Template","styles","SystemConfigurationComponent_div_8_Template_button_click_18_listener","_r3","clear","SystemConfigurationComponent_div_8_Template_button_click_20_listener","expandAll","bind","toggleSection","sectionKey","isSectionExpanded","expandAllRecursive","fullPath","add","getValueByPath","reduce","current","delete","SystemConfigurationComponent_Template","SystemConfigurationComponent_div_8_Template","SystemConfigurationComponent_div_9_Template","buildVersion","production","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch","err"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}