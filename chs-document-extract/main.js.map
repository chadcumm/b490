{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;AACqD;;;AAErD,MAAMC,MAAM,GAAW,EAAE;AAEzB,MAIaC,gBAAgB;EAAA,QAAAC,CAAA;qBAAhBD,gBAAgB;EAAA;EAAA,QAAAE,EAAA;UAAhBF;EAAgB;EAAA,QAAAG,EAAA;cAHjBL,yDAAY,CAACM,OAAO,CAACL,MAAM,EAAE;MAACM,OAAO,EAAE;IAAI,CAAC,CAAC,EAC7CP,yDAAY;EAAA;;AAEK;;sHAAhBE,gBAAgB;IAAAM,OAAA,GAAAC,yDAAA;IAAAC,OAAA,GAFjBV,yDAAY;EAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;ACFoE;;;;;;;;;;;;;ICG1FY,4DAAA,cAA6C;IAEzCA,uDAAA,cAAmC;IACnCA,4DAAA,QAAG;IAAAA,oDAAA,kCAA2B;IAAAA,0DAAA,EAAI;;;;;;ADJxC,MAKaK,YAAY;EASvBC,YACSC,cAA8B,EAC9BC,KAAmB,EAClBC,eAAuC;IAFxC,KAAAF,cAAc,GAAdA,cAAc;IACd,KAAAC,KAAK,GAALA,KAAK;IACJ,KAAAC,eAAe,GAAfA,eAAe;IATzB,KAAAC,OAAO,GAAG,IAAI;IACd,KAAAC,YAAY,GAAG,KAAK;IACpB,KAAAC,UAAU,GAAQ,IAAI;IACtB,KAAAC,aAAa,GAAG,KAAK;IACrB,KAAAC,WAAW,GAAQ,IAAI;EAMpB;EAEHC,QAAQA,CAAA;IACN;IACA,IAAI,CAACR,cAAc,CAACS,WAAW,CAACC,SAAS,CAACC,MAAM,IAAG;MACjD,IAAI,CAACV,KAAK,CAACW,QAAQ,GAAGD,MAAM,CAAC,UAAU,CAAC,GAAGE,QAAQ,CAACF,MAAM,CAAC,UAAU,CAAC,CAAC,GAAG,IAAI,CAACV,KAAK,CAACW,QAAQ;MAC7F,IAAI,CAACX,KAAK,CAACa,QAAQ,GAAGH,MAAM,CAAC,aAAa,CAAC,GAAGE,QAAQ,CAACF,MAAM,CAAC,aAAa,CAAC,CAAC,GAAG,IAAI,CAACV,KAAK,CAACa,QAAQ;MACnG,IAAI,CAACb,KAAK,CAACc,OAAO,GAAGJ,MAAM,CAAC,QAAQ,CAAC,GAAGE,QAAQ,CAACF,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAACV,KAAK,CAACc,OAAO;IACzF,CAAC,CAAC;IAEF;IACAC,UAAU,CAAEC,CAAM,IAAI;MACpB,IAAI,CAAChB,KAAK,CAACiB,eAAe,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC;MAEjD;MACA,IAAI,CAACC,mBAAmB,EAAE;IAC5B,CAAC,EAAE,CAAC,CAAC;IAEL;IACA,IAAI,CAACC,cAAc,EAAE;EACvB;EAEMD,mBAAmBA,CAAA;IAAA,IAAAE,KAAA;IAAA,OAAAC,sJAAA;MACvB,OAAO,CAACD,KAAI,CAACpB,KAAK,CAACsB,YAAY,EAAE;QAC/B;QACA;QACA,MAAM,IAAIC,OAAO,CAACC,OAAO,IAAIT,UAAU,CAACS,OAAO,EAAE,IAAI,CAAC,CAAC;;MAGzD;MACAC,OAAO,CAACC,GAAG,CAAC,kDAAkD,CAAC;MAE/D;MACAN,KAAI,CAACO,iBAAiB,EAAE;IAAC;EAC3B;EAEQA,iBAAiBA,CAAA;IACvB,IAAI,CAAC1B,eAAe,CAAC2B,aAAa,EAAE,CAACnB,SAAS,CAAC;MAC7CoB,IAAI,EAAGzB,UAAU,IAAI;QACnBqB,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAAEtB,UAAU,CAAC;QAC7D,IAAI,CAACA,UAAU,GAAGA,UAAU;QAC5B,IAAI,CAACD,YAAY,GAAG,IAAI;QACxB,IAAI,CAACD,OAAO,GAAG,KAAK;MACtB,CAAC;MACD4B,KAAK,EAAGA,KAAK,IAAI;QACfL,OAAO,CAACK,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;QACrD,IAAI,CAAC5B,OAAO,GAAG,KAAK;QACpB;MACF;KACD,CAAC;EACJ;EAEA;;;EAGQiB,cAAcA,CAAA;IACpBY,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAE,MAAK;MACrC,IAAI,CAAC3B,aAAa,GAAG0B,MAAM,CAACE,WAAW,GAAG,GAAG;IAC/C,CAAC,CAAC;EACJ;EAEA;;;EAGAC,WAAWA,CAAA;IACTH,MAAM,CAACI,QAAQ,CAAC;MACdC,GAAG,EAAE,CAAC;MACNC,QAAQ,EAAE;KACX,CAAC;EACJ;EAEA;;;;EAIAC,iBAAiBA,CAAChC,WAAgB;IAChC,IAAI,CAACA,WAAW,GAAGA,WAAW;EAChC;EAEA;;;;EAIAiC,iBAAiBA,CAACC,YAAuG;IACvH;IACA,IAAI,IAAI,CAACC,yBAAyB,EAAE;MAClC,IAAI,CAACA,yBAAyB,CAACC,qBAAqB,CAACF,YAAY,CAAC;;EAEtE;EAAC,QAAAzD,CAAA;qBArGUc,YAAY,EAAAL,+DAAA,CAAAH,2DAAA,GAAAG,+DAAA,CAAAqD,oFAAA,GAAArD,+DAAA,CAAAuD,sFAAA;EAAA;EAAA,QAAA/D,EAAA;UAAZa,YAAY;IAAAoD,SAAA;IAAAC,SAAA,WAAAC,mBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;kEACZ7D,qGAAyB;;;;;;;;;;;;QCbtCC,4DAAA,aAA2B;QAEzBA,uDAAA,WAAoD;QAIpDA,4DAAA,SAAI;QAAAA,oDAAA,2BAAoB;QAAAA,0DAAA,EAAK;QAE7BA,wDAAA,IAAA+D,2BAAA,iBAKM;QAEN/D,4DAAA,aAAoD;QACGA,wDAAA,6BAAAiE,uEAAAC,MAAA;UAAA,OAAmBL,GAAA,CAAAf,iBAAA,CAAAoB,MAAA,CAAyB;QAAA,EAAC;QAAClE,0DAAA,EAAwB;QAE3HA,4DAAA,2BAIgD;QAA9CA,wDAAA,6BAAAmE,mEAAAD,MAAA;UAAA,OAAmBL,GAAA,CAAAd,iBAAA,CAAAmB,MAAA,CAAyB;QAAA,EAAC;QAC/ClE,0DAAA,EAAoB;QAEpBA,4DAAA,+BAEgD;QAA9CA,wDAAA,6BAAAoE,uEAAAF,MAAA;UAAA,OAAmBL,GAAA,CAAAd,iBAAA,CAAAmB,MAAA,CAAyB;QAAA,EAAC;QAC/ClE,0DAAA,EAAwB;QAExBA,uDAAA,mCAA+E;QACjFA,0DAAA,EAAM;QAGNA,4DAAA,cAGyB;QADpBA,wDAAA,mBAAAqE,4CAAA;UAAA,OAASR,GAAA,CAAAnB,WAAA,EAAa;QAAA,EAAC;QAE1B1C,4DAAA,YAA4B;QAAAA,oDAAA,cAAC;QAAAA,0DAAA,EAAI;QAGnCA,uDAAA,2BAA2C;QAC7CA,0DAAA,EAAM;;;QAlC0BA,uDAAA,GAAa;QAAbA,wDAAA,SAAA6D,GAAA,CAAAnD,OAAA,CAAa;QAOjBV,uDAAA,GAAyB;QAAzBA,yDAAA,YAAA6D,GAAA,CAAAnD,OAAA,CAAyB;QAC1BV,uDAAA,GAA6B;QAA7BA,wDAAA,iBAAA6D,GAAA,CAAAlD,YAAA,CAA6B;QAGlDX,uDAAA,GAA0C;QAA1CA,wDAAA,eAAA6D,GAAA,CAAA/C,WAAA,kBAAA+C,GAAA,CAAA/C,WAAA,CAAA2D,SAAA,KAAAzE,6DAAA,KAAA2E,GAAA,EAA0C,YAAAd,GAAA,CAAAnD,OAAA,iBAAAmD,GAAA,CAAA/C,WAAA;QAO1Cd,uDAAA,GAA8B;QAA9BA,wDAAA,mBAAA6D,GAAA,CAAA/C,WAAA,CAA8B;QAINd,uDAAA,GAAyB;QAAzBA,wDAAA,eAAA6D,GAAA,CAAAjD,UAAA,CAAyB;QAKhDZ,uDAAA,GAA+B;QAA/BA,yDAAA,YAAA6D,GAAA,CAAAhD,aAAA,CAA+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnCkC;AACd;AACqB;AACb;AACwE;AAClF;AACT;AACwC;AACC;AAEI;AACA;AACZ;AACY;AACS;AACD;AACX;AAC5C;AACF;AACU;AACT;AACY;;AAExDsF,mEAAkB,CAACC,mEAAE,CAAC;AAEf,MAAME,aAAa,GAAIC,aAA4B,IAAI;EAC5D,OAAO,MAAMA,aAAa,CAACC,UAAU,EAAE;AACzC,CAAC;AAED;AACO,MAAMC,mBAAmB,GAAG;EACjCC,KAAK,EAAE;IACLC,SAAS,EAAE,CAAC,aAAa;GAC1B;EACDC,OAAO,EAAE;IACPD,SAAS,EAAE,aAAa;IACxBE,aAAa,EAAE,mBAAmB;IAClCC,cAAc,EAAE,UAAU;IAC1BC,aAAa,EAAE,IAAI;IACnBC,kBAAkB,EAAE;;CAEvB;AAED,MAwCaC,SAAS;EAAA,QAAA1H,CAAA;qBAAT0H,SAAS;EAAA;EAAA,QAAAzH,EAAA;UAATyH,SAAS;IAAAC,SAAA,GAFR7G,wDAAY;EAAA;EAAA,QAAAZ,EAAA;eAfb,CACT;MACE0H,OAAO,EAAEtC,2DAAe;MACxBuC,UAAU,EAAEd,aAAa;MACzBe,IAAI,EAAE,CAAChC,sFAAa,CAAC;MACrBiC,KAAK,EAAE;KACR,EACD;MAAEH,OAAO,EAAEvC,wDAAY;MAAE2C,QAAQ,EAAEnC,4FAAmBA;IAAA,CAAE,EACxD;MAAE+B,OAAO,EAAE3B,gEAAW;MAAE+B,QAAQ,EAAEhC,8EAAgB;MAAE8B,IAAI,EAAE,CAAC3B,oEAAe;IAAC,CAAE;IACjF;IACI;MACEyB,OAAO,EAAE1B,qEAAgB;MAAE+B,QAAQ,EAAEf;KACtC,EACL;MAAEU,OAAO,EAAElB,wDAAO;MAAEuB,QAAQ,EAAEtB,sDAAKA;IAAA,CAAE,CAClC;IAAAtG,OAAA,GAzBCkF,qEAAa,EACbC,0FAAuB,EACvBG,kGAAyB,EACzBC,uFAAc,EACd7F,iEAAgB,EAChB0F,wDAAW,EACXC,gEAAmB,EACnBK,gFAAkB,EAClBe,mEAAgBA;IAChB;IAAA;;;;AAmBkB;;uHAATY,SAAS;IAAAQ,YAAA,GAtClBpH,wDAAY,EACZsF,qGAAyB,EACzBC,qGAAyB,EACzBC,yFAAqB,EACrB9F,qGAAyB,EACzB+F,8GAA4B,EAC5BC,6GAA2B,EAC3BC,kGAAwB;IAAApG,OAAA,GAGxBkF,qEAAa,EACbC,0FAAuB,EACvBG,kGAAyB,EACzBC,uFAAc,EACd7F,iEAAgB,EAChB0F,wDAAW,EACXC,gEAAmB,EACnBK,gFAAkB,EAClBe,mEAAgBA;IAChB;IAAA;;;;;;;;;;;;;;;;;;AC/DuD;;AAG3D,MAKaV,yBAAyB;EALtCrF,YAAA;IAOE,KAAAqH,yBAAyB,GAAGD,qEAAW,CAACE,UAAU;IAClD,KAAAC,cAAc,GAAGH,qEAAW,CAACG,cAAc;IAC3C,KAAAC,SAAS,GAAGJ,qEAAW,CAACI,SAAS;;EAElC,QAAAvI,CAAA;qBANYoG,yBAAyB;EAAA;EAAA,QAAAnG,EAAA;UAAzBmG,yBAAyB;IAAAlC,SAAA;IAAAsE,KAAA;IAAAC,IAAA;IAAAC,QAAA,WAAAC,mCAAAtE,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCTtC5D,oDAAA,GAA6B;;;QAA7BA,+DAAA,CAAA6D,GAAA,CAAA8D,yBAAA,CAA6B;;;;;;;;;;;;;;;;;;;;;;ACAkD;;;;;;ICG3E3H,4DAAA,aAAyD;IAGrDA,wDAAA,mBAAAqI,6DAAA;MAAArI,2DAAA,CAAAuI,GAAA;MAAA,MAAAC,MAAA,GAAAxI,2DAAA;MAAA,OAASA,yDAAA,CAAAwI,MAAA,CAAAG,SAAA,EAAW;IAAA,EAAC;IAGrB3I,oDAAA,mBACF;IAAAA,0DAAA,EAAS;IACTA,4DAAA,gBAIC;IAFCA,wDAAA,mBAAA4I,6DAAA;MAAA5I,2DAAA,CAAAuI,GAAA;MAAA,MAAAM,MAAA,GAAA7I,2DAAA;MAAA,OAASA,yDAAA,CAAA6I,MAAA,CAAAC,WAAA,EAAa;IAAA,EAAC;IAGvB9I,oDAAA,qBACF;IAAAA,0DAAA,EAAS;IACTA,4DAAA,gBAIC;IAFCA,wDAAA,mBAAA+I,6DAAA;MAAA/I,2DAAA,CAAAuI,GAAA;MAAA,MAAAS,MAAA,GAAAhJ,2DAAA;MAAA,OAASA,yDAAA,CAAAgJ,MAAA,CAAAC,gBAAA,EAAkB;IAAA,EAAC;IAG5BjJ,oDAAA,GACF;IAAAA,0DAAA,EAAS;;;;IAjBPA,uDAAA,GAAwB;IAAxBA,wDAAA,aAAAkJ,MAAA,CAAAC,WAAA,CAAwB;IAOxBnJ,uDAAA,GAA2C;IAA3CA,wDAAA,aAAAkJ,MAAA,CAAAE,iBAAA,CAAAC,MAAA,OAA2C;IAO3CrJ,uDAAA,GAA2C;IAA3CA,wDAAA,aAAAkJ,MAAA,CAAAE,iBAAA,CAAAC,MAAA,OAA2C;IAE3CrJ,uDAAA,GACF;IADEA,gEAAA,yBAAAkJ,MAAA,CAAAE,iBAAA,CAAAC,MAAA,OACF;;;;;IAIJrJ,4DAAA,cAA+C;IAC7CA,uDAAA,cAAmC;IACnCA,4DAAA,QAAG;IAAAA,oDAAA,2BAAoB;IAAAA,0DAAA,EAAI;;;;;IAG7BA,4DAAA,cAAqE;IAChEA,oDAAA,2CAAoC;IAAAA,0DAAA,EAAI;;;;;;IAwBvCA,4DAAA,aAIC;IADCA,wDAAA,mBAAAuJ,+DAAA;MAAA,MAAAC,WAAA,GAAAxJ,2DAAA,CAAAyJ,IAAA;MAAA,MAAAC,YAAA,GAAAF,WAAA,CAAAG,SAAA;MAAA,MAAAC,OAAA,GAAA5J,2DAAA;MAAA,OAASA,yDAAA,CAAA4J,OAAA,CAAAC,uBAAA,CAAAH,YAAA,CAAiC;IAAA,EAAC;IAE3C1J,4DAAA,aAA4B;IAIxBA,wDAAA,mBAAA8J,kEAAA5F,MAAA;MAAA,OAASA,MAAA,CAAA6F,eAAA,EAAwB;IAAA,EAAC,oBAAAC,mEAAA;MAAA,MAAAR,WAAA,GAAAxJ,2DAAA,CAAAyJ,IAAA;MAAA,MAAAC,YAAA,GAAAF,WAAA,CAAAG,SAAA;MAAA,MAAAM,OAAA,GAAAjK,2DAAA;MAAA,OACxBA,yDAAA,CAAAiK,OAAA,CAAAJ,uBAAA,CAAAH,YAAA,CAAiC;IAAA,EADT;IAHpC1J,0DAAA,EAKE;IAEJA,4DAAA,aAA0B;IAAAA,oDAAA,GAA2B;IAAAA,0DAAA,EAAK;IAC1DA,4DAAA,aAA0B;IAAAA,oDAAA,GAAiC;IAAAA,0DAAA,EAAK;IAChEA,4DAAA,aAA0B;IAAAA,oDAAA,GAA+C;;IAAAA,0DAAA,EAAK;IAC9EA,4DAAA,cAA0B;IAAAA,oDAAA,IAA2B;IAAAA,0DAAA,EAAK;IAC1DA,4DAAA,cAAuB;IAAAA,oDAAA,IAAwB;IAAAA,0DAAA,EAAK;IACpDA,4DAAA,cAAwB;IAAAA,oDAAA,IAAqB;IAAAA,0DAAA,EAAK;;;;IAhBlDA,yDAAA,aAAA0J,YAAA,CAAAQ,QAAA,CAAoC;IAMhClK,uDAAA,GAA6B;IAA7BA,wDAAA,YAAA0J,YAAA,CAAAQ,QAAA,CAA6B;IAKPlK,uDAAA,GAA2B;IAA3BA,+DAAA,CAAA0J,YAAA,CAAAS,YAAA,CAA2B;IAC3BnK,uDAAA,GAAiC;IAAjCA,+DAAA,CAAA0J,YAAA,CAAAU,kBAAA,CAAiC;IACjCpK,uDAAA,GAA+C;IAA/CA,+DAAA,CAAAA,yDAAA,OAAA0J,YAAA,CAAAY,YAAA,gBAA+C;IAC/CtK,uDAAA,GAA2B;IAA3BA,+DAAA,CAAA0J,YAAA,CAAAa,YAAA,CAA2B;IAC9BvK,uDAAA,GAAwB;IAAxBA,+DAAA,CAAA0J,YAAA,CAAAc,SAAA,CAAwB;IACvBxK,uDAAA,GAAqB;IAArBA,+DAAA,CAAA0J,YAAA,CAAAe,MAAA,CAAqB;;;;;;IAvCrDzK,4DAAA,cAAsE;IAS1DA,wDAAA,oBAAA0K,6DAAA;MAAA1K,2DAAA,CAAA2K,IAAA;MAAA,MAAAC,OAAA,GAAA5K,2DAAA;MAAA,OAAUA,yDAAA,CAAA4K,OAAA,CAAAzB,WAAA,GAAcyB,OAAA,CAAA9B,WAAA,EAAa,GAAG8B,OAAA,CAAAjC,SAAA,EAAW;IAAA,EAAC;IAJtD3I,0DAAA,EAKE;IAEJA,4DAAA,SAAI;IAAAA,oDAAA,oBAAa;IAAAA,0DAAA,EAAK;IACtBA,4DAAA,SAAI;IAAAA,oDAAA,mBAAY;IAAAA,0DAAA,EAAK;IACrBA,4DAAA,UAAI;IAAAA,oDAAA,oBAAY;IAAAA,0DAAA,EAAK;IACrBA,4DAAA,UAAI;IAAAA,oDAAA,YAAI;IAAAA,0DAAA,EAAK;IACbA,4DAAA,UAAI;IAAAA,oDAAA,kBAAU;IAAAA,0DAAA,EAAK;IACnBA,4DAAA,UAAI;IAAAA,oDAAA,mBAAW;IAAAA,0DAAA,EAAK;IAGxBA,4DAAA,aAAO;IACLA,wDAAA,KAAA6K,0CAAA,mBAmBK;IACP7K,0DAAA,EAAQ;;;;IAlCAA,uDAAA,GAAuB;IAAvBA,wDAAA,YAAA8K,MAAA,CAAA3B,WAAA,CAAuB,kBAAA2B,MAAA,CAAAC,YAAA;IAeN/K,uDAAA,IAAY;IAAZA,wDAAA,YAAA8K,MAAA,CAAArG,SAAA,CAAY;;;;;IAuBzCzE,4DAAA,cAAoE;IAC/DA,oDAAA,GAAmD;IAAAA,0DAAA,EAAI;;;;IAAvDA,uDAAA,GAAmD;IAAnDA,gEAAA,KAAAgL,MAAA,CAAA5B,iBAAA,CAAAC,MAAA,0BAAmD;;;ADhF1D,MAKaxD,qBAAqB;EAShCvF,YAAA;IARS,KAAAmE,SAAS,GAAsB,EAAE;IACjC,KAAA/D,OAAO,GAAG,KAAK;IACf,KAAAI,WAAW,GAAuB,IAAI;IACrC,KAAAmK,uBAAuB,GAAG,IAAI7C,uDAAY,EAAqB;IAC/D,KAAA8C,eAAe,GAAG,IAAI9C,uDAAY,EAA6F;IAEzI,KAAAgB,iBAAiB,GAAsB,EAAE;EAEzB;EAEhBrI,QAAQA,CAAA,GACR;EAEA;;;;EAIA8I,uBAAuBA,CAACsB,QAAyB;IAC/ClJ,OAAO,CAACC,GAAG,CAAC,wEAAwE,EAAEiJ,QAAQ,CAAC;IAC/F,MAAMC,KAAK,GAAG,IAAI,CAAChC,iBAAiB,CAACiC,SAAS,CAACC,GAAG,IAAIA,GAAG,CAACC,EAAE,KAAKJ,QAAQ,CAACI,EAAE,CAAC;IAE7E,IAAIH,KAAK,GAAG,CAAC,CAAC,EAAE;MACd;MACAnJ,OAAO,CAACC,GAAG,CAAC,sFAAsF,CAAC;MACnG,IAAI,CAACkH,iBAAiB,CAACoC,MAAM,CAACJ,KAAK,EAAE,CAAC,CAAC;MACvCD,QAAQ,CAACjB,QAAQ,GAAG,KAAK;KAC1B,MAAM;MACL;MACAjI,OAAO,CAACC,GAAG,CAAC,kFAAkF,CAAC;MAC/F,IAAI,CAACkH,iBAAiB,CAACqC,IAAI,CAACN,QAAQ,CAAC;MACrCA,QAAQ,CAACjB,QAAQ,GAAG,IAAI;;IAG1BjI,OAAO,CAACC,GAAG,CAAC,iFAAiF,EAAE,IAAI,CAACkH,iBAAiB,CAAC;IACtH,IAAI,CAAC6B,uBAAuB,CAACS,IAAI,CAAC,IAAI,CAACtC,iBAAiB,CAAC;EAC3D;EAEA;;;EAGAT,SAASA,CAAA;IACP1G,OAAO,CAACC,GAAG,CAAC,uEAAuE,EAAE,IAAI,CAACuC,SAAS,CAAC4E,MAAM,CAAC;IAC3G,IAAI,CAAC5E,SAAS,CAACkH,OAAO,CAACL,GAAG,IAAG;MAC3BA,GAAG,CAACpB,QAAQ,GAAG,IAAI;IACrB,CAAC,CAAC;IACF,IAAI,CAACd,iBAAiB,GAAG,CAAC,GAAG,IAAI,CAAC3E,SAAS,CAAC;IAC5CxC,OAAO,CAACC,GAAG,CAAC,+DAA+D,EAAE,IAAI,CAACkH,iBAAiB,CAAC;IACpG,IAAI,CAAC6B,uBAAuB,CAACS,IAAI,CAAC,IAAI,CAACtC,iBAAiB,CAAC;EAC3D;EAEA;;;EAGAN,WAAWA,CAAA;IACT7G,OAAO,CAACC,GAAG,CAAC,mEAAmE,CAAC;IAChF,IAAI,CAACuC,SAAS,CAACkH,OAAO,CAACL,GAAG,IAAG;MAC3BA,GAAG,CAACpB,QAAQ,GAAG,KAAK;IACtB,CAAC,CAAC;IACF,IAAI,CAACd,iBAAiB,GAAG,EAAE;IAC3BnH,OAAO,CAACC,GAAG,CAAC,kEAAkE,CAAC;IAC/E,IAAI,CAAC+I,uBAAuB,CAACS,IAAI,CAAC,IAAI,CAACtC,iBAAiB,CAAC;EAC3D;EAEA;;;EAGAH,gBAAgBA,CAAA;IACdhH,OAAO,CAACC,GAAG,CAAC,uFAAuF,CAAC;IACpGD,OAAO,CAACC,GAAG,CAAC,wEAAwE,EAAE,IAAI,CAACkH,iBAAiB,CAACC,MAAM,CAAC;IACpHpH,OAAO,CAACC,GAAG,CAAC,4DAA4D,EAAE,IAAI,CAACpB,WAAW,CAAC;IAE3F,IAAI,IAAI,CAACsI,iBAAiB,CAACC,MAAM,GAAG,CAAC,IAAI,IAAI,CAACvI,WAAW,EAAE;MACzD,MAAM8K,wBAAwB,GAA8B,IAAI,CAACxC,iBAAiB,CAACyC,GAAG,CAACP,GAAG,KAAK;QAC7FQ,eAAe,EAAE1K,QAAQ,CAACkK,GAAG,CAACC,EAAE;OACjC,CAAC,CAAC;MAEHtJ,OAAO,CAACC,GAAG,CAAC,yEAAyE,EAAE0J,wBAAwB,CAAC;MAEhH,MAAM5I,YAAY,GAAG;QACnB7B,QAAQ,EAAE,IAAI,CAACL,WAAW,CAACK,QAAQ;QACnCE,QAAQ,EAAE,IAAI,CAACP,WAAW,CAACO,QAAQ;QACnCuK,wBAAwB,EAAEA;OAC3B;MAED3J,OAAO,CAACC,GAAG,CAAC,yEAAyE,EAAEc,YAAY,CAAC;MACpG,IAAI,CAACkI,eAAe,CAACQ,IAAI,CAAC1I,YAAY,CAAC;KACxC,MAAM;MACLf,OAAO,CAAC8J,IAAI,CAAC,4FAA4F,CAAC;;EAE9G;EAEA;;;EAGA,IAAI5C,WAAWA,CAAA;IACb,OAAO,IAAI,CAAC1E,SAAS,CAAC4E,MAAM,GAAG,CAAC,IAAI,IAAI,CAACD,iBAAiB,CAACC,MAAM,KAAK,IAAI,CAAC5E,SAAS,CAAC4E,MAAM;EAC7F;EAEA;;;EAGA,IAAI0B,YAAYA,CAAA;IACd,OAAO,IAAI,CAAC3B,iBAAiB,CAACC,MAAM,GAAG,CAAC,IAAI,IAAI,CAACD,iBAAiB,CAACC,MAAM,GAAG,IAAI,CAAC5E,SAAS,CAAC4E,MAAM;EACnG;EAAC,QAAA9J,CAAA;qBAxGUsG,qBAAqB;EAAA;EAAA,QAAArG,EAAA;UAArBqG,qBAAqB;IAAApC,SAAA;IAAAuI,MAAA;MAAAvH,SAAA;MAAA/D,OAAA;MAAAI,WAAA;IAAA;IAAAmL,OAAA;MAAAhB,uBAAA;MAAAC,eAAA;IAAA;IAAAnD,KAAA;IAAAC,IAAA;IAAAkE,MAAA;IAAAjE,QAAA,WAAAkE,+BAAAvI,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCRlC5D,4DAAA,aAAqC;QAE7BA,oDAAA,wBAAiB;QAAAA,0DAAA,EAAK;QAC1BA,wDAAA,IAAAoM,oCAAA,iBAsBM;QACRpM,0DAAA,EAAM;QAENA,wDAAA,IAAAqM,oCAAA,iBAGM;QAENrM,wDAAA,IAAAsM,oCAAA,iBAEM;QAENtM,wDAAA,IAAAuM,oCAAA,kBA2CM;QAENvM,wDAAA,IAAAwM,oCAAA,iBAEM;QACRxM,0DAAA,EAAM;;;QAlF2BA,uDAAA,GAA0B;QAA1BA,wDAAA,SAAA6D,GAAA,CAAAY,SAAA,CAAA4E,MAAA,KAA0B;QAyBzBrJ,uDAAA,GAAa;QAAbA,wDAAA,SAAA6D,GAAA,CAAAnD,OAAA,CAAa;QAKlBV,uDAAA,GAAwC;QAAxCA,wDAAA,UAAA6D,GAAA,CAAAnD,OAAA,IAAAmD,GAAA,CAAAY,SAAA,CAAA4E,MAAA,OAAwC;QAIrCrJ,uDAAA,GAAsC;QAAtCA,wDAAA,UAAA6D,GAAA,CAAAnD,OAAA,IAAAmD,GAAA,CAAAY,SAAA,CAAA4E,MAAA,KAAsC;QA6CpCrJ,uDAAA,GAAkC;QAAlCA,wDAAA,SAAA6D,GAAA,CAAAuF,iBAAA,CAAAC,MAAA,KAAkC;;;;;;;;;;;;;;;;;;;;;;;;;AClFW;;;;;;;ICM7ErJ,4DAAA,aAAqD;IAEpBA,oDAAA,GAAgC;IAAAA,0DAAA,EAAM;IACnEA,4DAAA,aAAkC;IAChCA,uDAAA,cAGO;IACTA,0DAAA,EAAM;IACNA,4DAAA,cAAmC;IAAAA,oDAAA,GAAqC;IAAAA,0DAAA,EAAM;;;;IAPjDA,uDAAA,GAAgC;IAAhCA,+DAAA,CAAAkJ,MAAA,CAAAuD,wBAAA,GAAgC;IAIzDzM,uDAAA,GAAuC;IAAvCA,yDAAA,UAAAkJ,MAAA,CAAAyD,mBAAA,QAAuC;IAGR3M,uDAAA,GAAqC;IAArCA,gEAAA,KAAAkJ,MAAA,CAAAyD,mBAAA,iBAAqC;;;;;IAelE3M,4DAAA,cAAqD;IAAAA,oDAAA,GAAuB;IAAAA,0DAAA,EAAM;;;;IAA7BA,uDAAA,GAAuB;IAAvBA,+DAAA,CAAA4M,OAAA,CAAAzC,YAAA,CAAuB;;;;;IAE5EnK,4DAAA,cAAqD;IAAAA,oDAAA,GAAuB;IAAAA,0DAAA,EAAM;;;;IAA7BA,uDAAA,GAAuB;IAAvBA,+DAAA,CAAA4M,OAAA,CAAAC,YAAA,CAAuB;;;;;IAKhF7M,4DAAA,cAAsE;IAElEA,uDAAA,cAGO;IACTA,0DAAA,EAAM;IACNA,4DAAA,cAA2B;IAAAA,oDAAA,GAAyB;IAAAA,0DAAA,EAAM;;;;IAHtDA,uDAAA,GAAoC;IAApCA,yDAAA,UAAA4M,OAAA,CAAAE,QAAA,WAAoC;IAGb9M,uDAAA,GAAyB;IAAzBA,gEAAA,KAAA4M,OAAA,CAAAE,QAAA,WAAyB;;;;;IArBxD9M,4DAAA,cAIC;IAGKA,wDAAA,IAAA+M,oDAAA,kBAAkF;IAClF/M,4DAAA,cAAyB;IAAAA,oDAAA,GAAkC;IAAAA,0DAAA,EAAM;IACjEA,wDAAA,IAAAgN,oDAAA,kBAAkF;IACpFhN,0DAAA,EAAM;IACNA,4DAAA,cAAoB;IAAAA,oDAAA,GAAgC;IAAAA,0DAAA,EAAM;IAG5DA,wDAAA,IAAAiN,oDAAA,kBAQM;IACRjN,0DAAA,EAAM;;;;;IApBJA,wDAAA,CAAAmN,MAAA,CAAAC,cAAA,CAAAR,OAAA,CAAAS,MAAA,EAAqC;IAILrN,uDAAA,GAAuB;IAAvBA,wDAAA,SAAA4M,OAAA,CAAAzC,YAAA,CAAuB;IAC1BnK,uDAAA,GAAkC;IAAlCA,gEAAA,kBAAA4M,OAAA,CAAAU,UAAA,KAAkC;IAC/BtN,uDAAA,GAAuB;IAAvBA,wDAAA,SAAA4M,OAAA,CAAAC,YAAA,CAAuB;IAEjC7M,uDAAA,GAAgC;IAAhCA,+DAAA,CAAAmN,MAAA,CAAAI,aAAA,CAAAX,OAAA,CAAAS,MAAA,EAAgC;IAGrBrN,uDAAA,GAAmC;IAAnCA,wDAAA,SAAA4M,OAAA,CAAAS,MAAA,mBAAmC;;;;;IAjB1ErN,4DAAA,cAA+D;IACzDA,oDAAA,uBAAgB;IAAAA,0DAAA,EAAK;IACzBA,4DAAA,cAA2B;IACzBA,wDAAA,IAAAwN,8CAAA,mBAuBM;IACRxN,0DAAA,EAAM;;;;IAvBeA,uDAAA,GAAgB;IAAhBA,wDAAA,YAAAyN,MAAA,CAAAC,aAAA,CAAgB;;;;;IAyC7B1N,4DAAA,cAAqD;IAAAA,oDAAA,GAAuB;IAAAA,0DAAA,EAAM;;;;IAA7BA,uDAAA,GAAuB;IAAvBA,+DAAA,CAAA2N,QAAA,CAAAxD,YAAA,CAAuB;;;;;IAE5EnK,4DAAA,cAAqD;IAAAA,oDAAA,GAAuB;IAAAA,0DAAA,EAAM;;;;IAA7BA,uDAAA,GAAuB;IAAvBA,+DAAA,CAAA2N,QAAA,CAAAd,YAAA,CAAuB;;;;;IAC5E7M,4DAAA,cAA4C;IAAAA,oDAAA,GAAyB;IAAAA,0DAAA,EAAM;;;;IAA/BA,uDAAA,GAAyB;IAAzBA,gEAAA,WAAA2N,QAAA,CAAAC,QAAA,KAAyB;;;;;IAT3E5N,4DAAA,cAGC;IAGKA,wDAAA,IAAA6N,oDAAA,kBAAkF;IAClF7N,4DAAA,cAAyB;IAAAA,oDAAA,GAAkC;IAAAA,0DAAA,EAAM;IACjEA,wDAAA,IAAA8N,oDAAA,kBAAkF;IAClF9N,wDAAA,IAAA+N,oDAAA,kBAA2E;IAC7E/N,0DAAA,EAAM;IACNA,4DAAA,cAAoB;IAAAA,oDAAA,GAAgC;IAAAA,0DAAA,EAAM;IAE5DA,4DAAA,eAAkC;IACRA,oDAAA,cAAC;IAAAA,0DAAA,EAAO;;;;;IARFA,uDAAA,GAAuB;IAAvBA,wDAAA,SAAA2N,QAAA,CAAAxD,YAAA,CAAuB;IAC1BnK,uDAAA,GAAkC;IAAlCA,gEAAA,kBAAA2N,QAAA,CAAAL,UAAA,KAAkC;IAC/BtN,uDAAA,GAAuB;IAAvBA,wDAAA,SAAA2N,QAAA,CAAAd,YAAA,CAAuB;IAC5B7M,uDAAA,GAAmB;IAAnBA,wDAAA,SAAA2N,QAAA,CAAAC,QAAA,CAAmB;IAExB5N,uDAAA,GAAgC;IAAhCA,+DAAA,CAAAiK,OAAA,CAAAsD,aAAA,CAAAI,QAAA,CAAAN,MAAA,EAAgC;;;;;;IAnB5DrN,4DAAA,cAAoE;IAE5DA,oDAAA,0BAAmB;IAAAA,0DAAA,EAAK;IAC5BA,4DAAA,iBAA2D;IAA3BA,wDAAA,mBAAAgO,iEAAA;MAAAhO,2DAAA,CAAAiO,IAAA;MAAA,MAAAC,OAAA,GAAAlO,2DAAA;MAAA,OAASA,yDAAA,CAAAkO,OAAA,CAAAC,cAAA,EAAgB;IAAA,EAAC;IACxDnO,oDAAA,kBACF;IAAAA,0DAAA,EAAS;IAEXA,4DAAA,cAA2B;IACzBA,wDAAA,IAAAoO,8CAAA,mBAgBM;IACRpO,0DAAA,EAAM;;;;IAhBeA,uDAAA,GAAqB;IAArBA,wDAAA,YAAAqO,MAAA,CAAAC,kBAAA,CAAqB;;;;;IAkClCtO,4DAAA,cAAqD;IAAAA,oDAAA,GAAuB;IAAAA,0DAAA,EAAM;;;;IAA7BA,uDAAA,GAAuB;IAAvBA,+DAAA,CAAAuO,QAAA,CAAApE,YAAA,CAAuB;;;;;IAE5EnK,4DAAA,cAAqD;IAAAA,oDAAA,GAAuB;IAAAA,0DAAA,EAAM;;;;IAA7BA,uDAAA,GAAuB;IAAvBA,+DAAA,CAAAuO,QAAA,CAAA1B,YAAA,CAAuB;;;;;IAG9E7M,4DAAA,cAA8C;IAAAA,oDAAA,GAAgB;IAAAA,0DAAA,EAAM;;;;IAAtBA,uDAAA,GAAgB;IAAhBA,+DAAA,CAAAuO,QAAA,CAAAjM,KAAA,CAAgB;;;;;;IAXlEtC,4DAAA,cAGC;IAGKA,wDAAA,IAAAwO,oDAAA,kBAAkF;IAClFxO,4DAAA,cAAyB;IAAAA,oDAAA,GAAkC;IAAAA,0DAAA,EAAM;IACjEA,wDAAA,IAAAyO,oDAAA,kBAAkF;IACpFzO,0DAAA,EAAM;IACNA,4DAAA,cAAoB;IAAAA,oDAAA,GAAgC;IAAAA,0DAAA,EAAM;IAC1DA,wDAAA,IAAA0O,oDAAA,kBAAoE;IACtE1O,0DAAA,EAAM;IACNA,4DAAA,kBAA4D;IAA9BA,wDAAA,mBAAA2O,wEAAA;MAAA,MAAAnF,WAAA,GAAAxJ,2DAAA,CAAA4O,IAAA;MAAA,MAAAL,QAAA,GAAA/E,WAAA,CAAAG,SAAA;MAAA,MAAAkF,OAAA,GAAA7O,2DAAA;MAAA,OAASA,yDAAA,CAAA6O,OAAA,CAAAC,aAAA,CAAAP,QAAA,CAAmB;IAAA,EAAC;IACzDvO,oDAAA,eACF;IAAAA,0DAAA,EAAS;;;;;IATuBA,uDAAA,GAAuB;IAAvBA,wDAAA,SAAAuO,QAAA,CAAApE,YAAA,CAAuB;IAC1BnK,uDAAA,GAAkC;IAAlCA,gEAAA,kBAAAuO,QAAA,CAAAjB,UAAA,KAAkC;IAC/BtN,uDAAA,GAAuB;IAAvBA,wDAAA,SAAAuO,QAAA,CAAA1B,YAAA,CAAuB;IAEjC7M,uDAAA,GAAgC;IAAhCA,+DAAA,CAAA+O,OAAA,CAAAxB,aAAA,CAAAgB,QAAA,CAAAlB,MAAA,EAAgC;IACxBrN,uDAAA,GAAgB;IAAhBA,wDAAA,SAAAuO,QAAA,CAAAjM,KAAA,CAAgB;;;;;;IAnBpDtC,4DAAA,cAAiE;IAEzDA,oDAAA,uBAAgB;IAAAA,0DAAA,EAAK;IACzBA,4DAAA,iBAAwD;IAAxBA,wDAAA,mBAAAgP,iEAAA;MAAAhP,2DAAA,CAAAiP,IAAA;MAAA,MAAAC,OAAA,GAAAlP,2DAAA;MAAA,OAASA,yDAAA,CAAAkP,OAAA,CAAAC,WAAA,EAAa;IAAA,EAAC;IACrDnP,oDAAA,kBACF;IAAAA,0DAAA,EAAS;IAEXA,4DAAA,cAA2B;IACzBA,wDAAA,IAAAoP,8CAAA,mBAgBM;IACRpP,0DAAA,EAAM;;;;IAhBeA,uDAAA,GAAkB;IAAlBA,wDAAA,YAAA8K,MAAA,CAAAuE,eAAA,CAAkB;;;;;;IAoBzCrP,4DAAA,cAA4E;IAKxEA,wDAAA,6BAAAsP,yFAAApL,MAAA;MAAAlE,2DAAA,CAAAuP,IAAA;MAAA,MAAAC,OAAA,GAAAxP,2DAAA;MAAA,OAAmBA,yDAAA,CAAAwP,OAAA,CAAAC,qBAAA,CAAAvL,MAAA,CAA6B;IAAA,EAAC;IAClDlE,0DAAA,EAAuB;;;;IAJtBA,uDAAA,GAAoC;IAApCA,wDAAA,aAAAgL,MAAA,CAAA0E,cAAA,CAAAvO,QAAA,CAAoC,aAAA6J,MAAA,CAAA0E,cAAA,CAAArO,QAAA,qBAAA2J,MAAA,CAAA2E,eAAA;;;;;IAQxC3P,4DAAA,cAAwJ;IACnJA,oDAAA,qCAA8B;IAAAA,0DAAA,EAAI;IACrCA,4DAAA,QAAG;IAAAA,oDAAA,oEAA6D;IAAAA,0DAAA,EAAI;;;AD5GxE,MAKaD,yBAAyB;EAWpCO,YAAoBG,eAAuC;IAAvC,KAAAA,eAAe,GAAfA,eAAe;IAV1B,KAAAiP,cAAc,GAAuB,IAAI;IACxC,KAAAxE,eAAe,GAAG,IAAI9C,uDAAY,EAA6F;IAEzI,KAAAsF,aAAa,GAAqB,EAAE;IACpC,KAAAY,kBAAkB,GAAqB,EAAE;IACzC,KAAAe,eAAe,GAAqB,EAAE;IACtC,KAAAO,aAAa,GAAG,KAAK;IACrB,KAAAD,eAAe,GAAqB,EAAE;IACtC,KAAAE,oBAAoB,GAAG,KAAK;EAEmC;EAE/D9O,QAAQA,CAAA;IACNkB,OAAO,CAACC,GAAG,CAAC,gEAAgE,CAAC;EAC/E;EAEA;;;;EAIAgB,qBAAqBA,CAACF,YAAuG;IAC3Hf,OAAO,CAACC,GAAG,CAAC,kFAAkF,EAAEc,YAAY,CAAC;IAC7G,IAAI,CAAC8M,aAAa,CAAC9M,YAAY,CAAC7B,QAAQ,EAAE6B,YAAY,CAAC3B,QAAQ,EAAE2B,YAAY,CAAC4I,wBAAwB,CAAC;EACzG;EAEA;;;EAGQmE,kBAAkBA,CAAA;IACxB9N,OAAO,CAACC,GAAG,CAAC,gFAAgF,CAAC;IAC7F,IAAI,CAACwL,aAAa,GAAG,EAAE;IACvB,IAAI,CAACY,kBAAkB,GAAG,EAAE;IAC5B,IAAI,CAACe,eAAe,GAAG,EAAE;IACzB,IAAI,CAACM,eAAe,GAAG,EAAE;IACzB,IAAI,CAACE,oBAAoB,GAAG,KAAK;EACnC;EAEA;;;;;;EAMAC,aAAaA,CAAC3O,QAAgB,EAAEE,QAAgB,EAAEuK,wBAAmD;IACnG3J,OAAO,CAACC,GAAG,CAAC,0FAA0F,EAAE;MACtGf,QAAQ;MACRE,QAAQ;MACR2O,YAAY,EAAEpE,wBAAwB,CAACvC,MAAM;MAC7C4G,QAAQ,EAAErE;KACX,CAAC;IAEF,IAAIA,wBAAwB,CAACvC,MAAM,KAAK,CAAC,EAAE;MACzCpH,OAAO,CAAC8J,IAAI,CAAC,6EAA6E,CAAC;MAC3F;;IAGF;IACA,IAAI,CAACgE,kBAAkB,EAAE;IAEzB,IAAI,CAACH,aAAa,GAAG,IAAI;IACzB3N,OAAO,CAACC,GAAG,CAAC,yEAAyE,CAAC;IAEtF;IACA,IAAI,CAACwL,aAAa,GAAG9B,wBAAwB,CAACC,GAAG,CAACqE,OAAO,KAAK;MAC5D5C,UAAU,EAAE4C,OAAO,CAACpE,eAAe,CAACqE,QAAQ,EAAE;MAC9C9C,MAAM,EAAE;KACT,CAAC,CAAC;IAEHpL,OAAO,CAACC,GAAG,CAAC,2EAA2E,EAAE,IAAI,CAACwL,aAAa,CAAC;IAE5G;IACAzL,OAAO,CAACC,GAAG,CAAC,gGAAgG,CAAC;IAC7G,IAAI,CAACzB,eAAe,CAAC2P,6BAA6B,CAACjP,QAAQ,EAAEE,QAAQ,EAAEuK,wBAAwB,CAAC,CAAC3K,SAAS,CAAC;MACzGoB,IAAI,EAAGgO,QAAoC,IAAI;QAC7CpO,OAAO,CAACC,GAAG,CAAC,sFAAsF,EAAEmO,QAAQ,CAAC;QAC7G,IAAI,CAACC,gCAAgC,CAACD,QAAQ,CAAC;MACjD,CAAC;MACD/N,KAAK,EAAGA,KAAK,IAAI;QACfL,OAAO,CAACK,KAAK,CAAC,0EAA0E,EAAEA,KAAK,CAAC;QAChG,IAAI,CAACiO,mBAAmB,CAACjO,KAAK,CAAC;MACjC;KACD,CAAC;EACJ;EAEA;;;;EAIQgO,gCAAgCA,CAACD,QAAoC;IAC3EpO,OAAO,CAACC,GAAG,CAAC,2GAA2G,EAAEmO,QAAQ,CAAC;IAElI,MAAM;MAAEvD,QAAQ;MAAE0D,UAAU;MAAEC;IAAU,CAAE,GAAGJ,QAAQ;IAErD;IACA,IAAIvD,QAAQ,CAAC4D,OAAO,EAAE;MACpBzO,OAAO,CAACC,GAAG,CAAC,+FAA+F,EAAE4K,QAAQ,CAAC4D,OAAO,CAAC;MAC9H,MAAMC,SAAS,GAAG,IAAI,CAACjD,aAAa,CAACkD,IAAI,CAACC,IAAI,IAC5CA,IAAI,CAACvD,UAAU,KAAKR,QAAQ,CAAC4D,OAAQ,CAAC5E,eAAe,CAACqE,QAAQ,EAAE,CACjE;MAED,IAAIQ,SAAS,EAAE;QACb1O,OAAO,CAACC,GAAG,CAAC,yGAAyG,EAAEyO,SAAS,CAAC;QACjIA,SAAS,CAACtD,MAAM,GAAG,aAAa;QAChCsD,SAAS,CAAC7D,QAAQ,GAAG,EAAE,CAAC,CAAC;;;IAI7B;IACA2D,UAAU,CAAC9E,OAAO,CAAC,CAACmF,MAAM,EAAE1F,KAAK,KAAI;MACnCnJ,OAAO,CAACC,GAAG,CAAC,qFAAqF,EAAE4O,MAAM,CAAC;MAC1G,MAAMH,SAAS,GAAG,IAAI,CAACjD,aAAa,CAACkD,IAAI,CAACC,IAAI,IAC5CA,IAAI,CAACvD,UAAU,KAAKwD,MAAM,CAAChF,eAAe,CAACqE,QAAQ,EAAE,CACtD;MAED,IAAIQ,SAAS,EAAE;QACb1O,OAAO,CAACC,GAAG,CAAC,+FAA+F,EAAEyO,SAAS,CAAC;QAEvH;QACAA,SAAS,CAAC/C,QAAQ,GAAGkD,MAAM,CAAClD,QAAQ;QACpC+C,SAAS,CAACxG,YAAY,GAAG2G,MAAM,CAAC3G,YAAY;QAC5CwG,SAAS,CAAC9D,YAAY,GAAGiE,MAAM,CAACjE,YAAY;QAE5C,IAAIiE,MAAM,CAACzD,MAAM,KAAK,CAAC,EAAE;UACvB;UACApL,OAAO,CAACC,GAAG,CAAC,2FAA2F,EAAE4O,MAAM,CAAChF,eAAe,CAAC;UAChI6E,SAAS,CAACtD,MAAM,GAAG,WAAW;UAC9BsD,SAAS,CAAC7D,QAAQ,GAAG,GAAG;UACxB,IAAI,CAACiE,eAAe,CAACJ,SAAS,CAAC;UAE/B;UACA,IAAIG,MAAM,CAACE,QAAQ,IAAIF,MAAM,CAAClD,QAAQ,EAAE;YACtC,MAAMqD,cAAc,GAAmB;cACrCrD,QAAQ,EAAEkD,MAAM,CAAClD,QAAQ;cACzBoD,QAAQ,EAAEF,MAAM,CAACE,QAAQ;cACzB7G,YAAY,EAAE2G,MAAM,CAAC3G,YAAY;cACjC0C,YAAY,EAAEiE,MAAM,CAACjE,YAAY;cACjCf,eAAe,EAAEgF,MAAM,CAAChF;aACzB;YAED;YACA,MAAMoF,YAAY,GAAG,IAAI,CAACvB,eAAe,CAACiB,IAAI,CAACO,IAAI,IACjDA,IAAI,CAACrF,eAAe,KAAKgF,MAAM,CAAChF,eAAe,CAChD;YAED,IAAI,CAACoF,YAAY,EAAE;cACjB,IAAI,CAACvB,eAAe,CAAClE,IAAI,CAACwF,cAAc,CAAC;cACzChP,OAAO,CAACC,GAAG,CAAC,6FAA6F,EAAE+O,cAAc,CAAC;aAC3H,MAAM;cACLhP,OAAO,CAACC,GAAG,CAAC,qHAAqH,EAAE4O,MAAM,CAAChF,eAAe,CAAC;;;SAG/J,MAAM;UACL;UACA7J,OAAO,CAACC,GAAG,CAAC,uFAAuF,EAAE4O,MAAM,CAAChF,eAAe,EAAE,QAAQ,EAAEgF,MAAM,CAACM,OAAO,CAAC;UACtJT,SAAS,CAACtD,MAAM,GAAG,QAAQ;UAC3BsD,SAAS,CAACrO,KAAK,GAAGwO,MAAM,CAACM,OAAO;UAChC,IAAI,CAACC,YAAY,CAACV,SAAS,CAAC;;OAE/B,MAAM;QACL1O,OAAO,CAAC8J,IAAI,CAAC,2GAA2G,EAAE+E,MAAM,CAAChF,eAAe,CAAC;;IAErJ,CAAC,CAAC;IAEF;IACA,IAAI0E,UAAU,EAAE;MACdvO,OAAO,CAACC,GAAG,CAAC,qGAAqG,EAAE4K,QAAQ,CAAC;MAC5H7K,OAAO,CAACC,GAAG,CAAC,oHAAoH,CAAC;MACjI,IAAI,CAAC0N,aAAa,GAAG,KAAK;MAC1B,IAAI,CAAClC,aAAa,GAAG,EAAE;MAEvB;MACA,IAAI,IAAI,CAACiC,eAAe,CAACtG,MAAM,GAAG,CAAC,EAAE;QACnCpH,OAAO,CAACC,GAAG,CAAC,iGAAiG,EAAE,IAAI,CAACyN,eAAe,CAACtG,MAAM,EAAE,OAAO,CAAC;QACpJ,IAAI,CAACwG,oBAAoB,GAAG,IAAI;;MAGlC;MACA5N,OAAO,CAACC,GAAG,CAAC,oFAAoF,EAAE;QAChGoP,KAAK,EAAExE,QAAQ,CAACwE,KAAK;QACrBC,SAAS,EAAEzE,QAAQ,CAACyE,SAAS;QAC7BC,MAAM,EAAE1E,QAAQ,CAAC0E,MAAM;QACvBC,WAAW,EAAE3E,QAAQ,CAACwE,KAAK,GAAG,CAAC,GAAG,CAACxE,QAAQ,CAACyE,SAAS,GAAGzE,QAAQ,CAACwE,KAAK,GAAG,GAAG,EAAEI,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI;QACrGC,oBAAoB,EAAE,IAAI,CAAChC,eAAe,CAACtG;OAC5C,CAAC;;EAEN;EAEA;;;;EAIAoG,qBAAqBA,CAACmC,eAAgC;IACpD3P,OAAO,CAACC,GAAG,CAAC,0EAA0E,EAAE0P,eAAe,CAAC;IACxG;EACF;EAEA;;;;EAIQC,sBAAsBA,CAACxB,QAAmC;IAChEpO,OAAO,CAACC,GAAG,CAAC,sFAAsF,EAAEmO,QAAQ,CAAC;IAC7G;IACAA,QAAQ,CAACyB,eAAe,CAACnG,OAAO,CAAC,CAACmF,MAAM,EAAE1F,KAAK,KAAI;MACjDnJ,OAAO,CAACC,GAAG,CAAC,2EAA2E,EAAE4O,MAAM,CAAC;MAChG;MACA,MAAMH,SAAS,GAAG,IAAI,CAACjD,aAAa,CAACkD,IAAI,CAACC,IAAI,IAC5CA,IAAI,CAACvD,UAAU,KAAKwD,MAAM,CAAChF,eAAe,CAACqE,QAAQ,EAAE,CACtD;MAED,IAAIQ,SAAS,EAAE;QACb1O,OAAO,CAACC,GAAG,CAAC,0EAA0E,EAAEyO,SAAS,CAAC;QAClG,IAAIG,MAAM,CAACzD,MAAM,KAAK,CAAC,EAAE;UACvB;UACApL,OAAO,CAACC,GAAG,CAAC,iFAAiF,EAAE4O,MAAM,CAAChF,eAAe,CAAC;UACtH6E,SAAS,CAACtD,MAAM,GAAG,WAAW;UAC9BsD,SAAS,CAAC7D,QAAQ,GAAG,GAAG;UACxB,IAAI,CAACiE,eAAe,CAACJ,SAAS,CAAC;SAChC,MAAM;UACL;UACA1O,OAAO,CAACC,GAAG,CAAC,6EAA6E,EAAE4O,MAAM,CAAChF,eAAe,EAAE,QAAQ,EAAEgF,MAAM,CAACM,OAAO,CAAC;UAC5IT,SAAS,CAACtD,MAAM,GAAG,QAAQ;UAC3BsD,SAAS,CAACrO,KAAK,GAAGwO,MAAM,CAACM,OAAO;UAChC,IAAI,CAACC,YAAY,CAACV,SAAS,CAAC;;OAE/B,MAAM;QACL1O,OAAO,CAAC8J,IAAI,CAAC,iGAAiG,EAAE+E,MAAM,CAAChF,eAAe,CAAC;;IAE3I,CAAC,CAAC;IAEF;IACA7J,OAAO,CAACC,GAAG,CAAC,mHAAmH,CAAC;IAChI,IAAI,CAAC0N,aAAa,GAAG,KAAK;IAC1B,IAAI,CAAClC,aAAa,GAAG,EAAE;EACzB;EAEA;;;;EAIQ6C,mBAAmBA,CAACjO,KAAU;IACpCL,OAAO,CAACK,KAAK,CAAC,qEAAqE,EAAEA,KAAK,CAAC;IAE3F;IACAL,OAAO,CAACC,GAAG,CAAC,yFAAyF,CAAC;IACtG,IAAI,CAACwL,aAAa,CAAC/B,OAAO,CAACkF,IAAI,IAAG;MAChC,IAAIA,IAAI,CAACxD,MAAM,KAAK,SAAS,IAAIwD,IAAI,CAACxD,MAAM,KAAK,aAAa,EAAE;QAC9DpL,OAAO,CAACC,GAAG,CAAC,6EAA6E,EAAE2O,IAAI,CAAC;QAChGA,IAAI,CAACxD,MAAM,GAAG,QAAQ;QACtBwD,IAAI,CAACvO,KAAK,GAAG,iBAAiB;QAC9B,IAAI,CAAC+O,YAAY,CAACR,IAAI,CAAC;;IAE3B,CAAC,CAAC;IAEF5O,OAAO,CAACC,GAAG,CAAC,uGAAuG,CAAC;IACpH,IAAI,CAAC0N,aAAa,GAAG,KAAK;IAC1B,IAAI,CAAClC,aAAa,GAAG,EAAE;EACzB;EAEA;;;;EAIQqD,eAAeA,CAACF,IAAoB;IAC1C5O,OAAO,CAACC,GAAG,CAAC,gFAAgF,EAAE2O,IAAI,CAAC;IAEnG;IACA,MAAMkB,YAAY,GAAG,IAAI,CAACzD,kBAAkB,CAACsC,IAAI,CAACW,SAAS,IACzDA,SAAS,CAACjE,UAAU,KAAKuD,IAAI,CAACvD,UAAU,CACzC;IAED,IAAIyE,YAAY,EAAE;MAChB9P,OAAO,CAACC,GAAG,CAAC,kGAAkG,EAAE2O,IAAI,CAACvD,UAAU,CAAC;MAChI;;IAGF,IAAI,CAACgB,kBAAkB,CAAC7C,IAAI,CAACoF,IAAI,CAAC;IAClC5O,OAAO,CAACC,GAAG,CAAC,4EAA4E,EAAE,IAAI,CAACoM,kBAAkB,CAACjF,MAAM,CAAC;EAC3H;EAEA;;;;EAIQgI,YAAYA,CAACR,IAAoB;IACvC5O,OAAO,CAACC,GAAG,CAAC,0EAA0E,EAAE2O,IAAI,CAAC;IAE7F;IACA,MAAMkB,YAAY,GAAG,IAAI,CAAC1C,eAAe,CAACuB,IAAI,CAACY,MAAM,IACnDA,MAAM,CAAClE,UAAU,KAAKuD,IAAI,CAACvD,UAAU,CACtC;IAED,IAAIyE,YAAY,EAAE;MAChB9P,OAAO,CAACC,GAAG,CAAC,4FAA4F,EAAE2O,IAAI,CAACvD,UAAU,CAAC;MAC1H;;IAGF,IAAI,CAAC+B,eAAe,CAAC5D,IAAI,CAACoF,IAAI,CAAC;IAC/B5O,OAAO,CAACC,GAAG,CAAC,sEAAsE,EAAE,IAAI,CAACmN,eAAe,CAAChG,MAAM,CAAC;EAClH;EAEA;;;;EAIAyF,aAAaA,CAAC+B,IAAoB;IAChC5O,OAAO,CAACC,GAAG,CAAC,2EAA2E,EAAE2O,IAAI,CAAC;IAE9F,IAAI,CAAC,IAAI,CAACnB,cAAc,EAAE;MACxBzN,OAAO,CAACK,KAAK,CAAC,sFAAsF,CAAC;MACrG;;IAGF;IACA,MAAM8I,KAAK,GAAG,IAAI,CAACiE,eAAe,CAAChE,SAAS,CAACmG,MAAM,IAAIA,MAAM,CAAClE,UAAU,KAAKuD,IAAI,CAACvD,UAAU,CAAC;IAC7F,IAAIlC,KAAK,GAAG,CAAC,CAAC,EAAE;MACdnJ,OAAO,CAACC,GAAG,CAAC,8EAA8E,CAAC;MAC3F,IAAI,CAACmN,eAAe,CAAC7D,MAAM,CAACJ,KAAK,EAAE,CAAC,CAAC;;IAGvC;IACAnJ,OAAO,CAACC,GAAG,CAAC,6EAA6E,CAAC;IAC1F,IAAI,CAACwL,aAAa,CAACjC,IAAI,CAAC;MACtB6B,UAAU,EAAEuD,IAAI,CAACvD,UAAU;MAC3BD,MAAM,EAAE;KACT,CAAC;IAEF;IACA,MAAM2E,YAAY,GAA4B;MAC5ClG,eAAe,EAAE1K,QAAQ,CAACyP,IAAI,CAACvD,UAAU;KAC1C;IACDrL,OAAO,CAACC,GAAG,CAAC,sEAAsE,EAAE8P,YAAY,CAAC;IAEjG;IACA/P,OAAO,CAACC,GAAG,CAAC,yGAAyG,CAAC;IACtH,IAAI,CAAC4N,aAAa,CAAC,IAAI,CAACJ,cAAc,CAACvO,QAAQ,EAAE,IAAI,CAACuO,cAAc,CAACrO,QAAQ,EAAE,CAAC2Q,YAAY,CAAC,CAAC;EAChG;EAEA;;;EAGA7D,cAAcA,CAAA;IACZ,IAAI,CAACG,kBAAkB,GAAG,EAAE;EAC9B;EAEA;;;EAGAa,WAAWA,CAAA;IACT,IAAI,CAACE,eAAe,GAAG,EAAE;EAC3B;EAEA;;;;;EAKA9B,aAAaA,CAACF,MAAc;IAC1B,QAAQA,MAAM;MACZ,KAAK,SAAS;QAAE,OAAO,SAAS;MAChC,KAAK,aAAa;QAAE,OAAO,aAAa;MACxC,KAAK,WAAW;QAAE,OAAO,WAAW;MACpC,KAAK,QAAQ;QAAE,OAAO,QAAQ;MAC9B;QAAS,OAAO,SAAS;;EAE7B;EAEA;;;;;EAKAD,cAAcA,CAACC,MAAc;IAC3B,QAAQA,MAAM;MACZ,KAAK,SAAS;QAAE,OAAO,gBAAgB;MACvC,KAAK,aAAa;QAAE,OAAO,oBAAoB;MAC/C,KAAK,WAAW;QAAE,OAAO,kBAAkB;MAC3C,KAAK,QAAQ;QAAE,OAAO,eAAe;MACrC;QAAS,OAAO,gBAAgB;;EAEpC;EAEA;;;;EAIAV,mBAAmBA,CAAA;IACjB,IAAI,IAAI,CAACe,aAAa,CAACrE,MAAM,KAAK,CAAC,EAAE,OAAO,CAAC;IAE7C,MAAM4I,UAAU,GAAG,IAAI,CAACvE,aAAa,CAACrE,MAAM;IAC5C,MAAM6I,cAAc,GAAG,IAAI,CAACxE,aAAa,CAACyE,MAAM,CAACtB,IAAI,IAAIA,IAAI,CAACxD,MAAM,KAAK,WAAW,CAAC,CAAChE,MAAM;IAC5F,MAAM+I,WAAW,GAAG,IAAI,CAAC1E,aAAa,CAACyE,MAAM,CAACtB,IAAI,IAAIA,IAAI,CAACxD,MAAM,KAAK,QAAQ,CAAC,CAAChE,MAAM;IAEtF,OAAOgJ,IAAI,CAACC,KAAK,CAAE,CAACJ,cAAc,GAAGE,WAAW,IAAIH,UAAU,GAAI,GAAG,CAAC;EACxE;EAEA;;;;EAIAxF,wBAAwBA,CAAA;IACtB,IAAI,CAAC,IAAI,CAACmD,aAAa,EAAE,OAAO,0BAA0B;IAE1D,MAAMqC,UAAU,GAAG,IAAI,CAACvE,aAAa,CAACrE,MAAM;IAC5C,MAAM6I,cAAc,GAAG,IAAI,CAACxE,aAAa,CAACyE,MAAM,CAACtB,IAAI,IAAIA,IAAI,CAACxD,MAAM,KAAK,WAAW,CAAC,CAAChE,MAAM;IAC5F,MAAM+I,WAAW,GAAG,IAAI,CAAC1E,aAAa,CAACyE,MAAM,CAACtB,IAAI,IAAIA,IAAI,CAACxD,MAAM,KAAK,QAAQ,CAAC,CAAChE,MAAM;IACtF,MAAMkJ,gBAAgB,GAAG,IAAI,CAAC7E,aAAa,CAACyE,MAAM,CAACtB,IAAI,IAAIA,IAAI,CAACxD,MAAM,KAAK,aAAa,CAAC,CAAChE,MAAM;IAChG,MAAMmJ,YAAY,GAAG,IAAI,CAAC9E,aAAa,CAACyE,MAAM,CAACtB,IAAI,IAAIA,IAAI,CAACxD,MAAM,KAAK,SAAS,CAAC,CAAChE,MAAM;IAExF,IAAIkJ,gBAAgB,GAAG,CAAC,EAAE;MACxB,MAAME,eAAe,GAAG,IAAI,CAAC/E,aAAa,CAACkD,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACxD,MAAM,KAAK,aAAa,CAAC;MACtF,OAAO,gBAAgBoF,eAAe,EAAEtI,YAAY,IAAI,UAAU,KAAK+H,cAAc,GAAGE,WAAW,GAAG,CAAC,IAAIH,UAAU,GAAG;;IAG1H,OAAO,eAAeC,cAAc,GAAGE,WAAW,IAAIH,UAAU,YAAY;EAC9E;EAAC,QAAA1S,CAAA;qBAhaUQ,yBAAyB,EAAAC,+DAAA,CAAAH,sFAAA;EAAA;EAAA,QAAAL,EAAA;UAAzBO,yBAAyB;IAAA0D,SAAA;IAAAuI,MAAA;MAAA0D,cAAA;IAAA;IAAAzD,OAAA;MAAAf,eAAA;IAAA;IAAAnD,KAAA;IAAAC,IAAA;IAAAkE,MAAA;IAAAjE,QAAA,WAAAyK,mCAAA9O,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QClBtC5D,4DAAA,aAAyC;QAEjCA,oDAAA,iCAA0B;QAAAA,0DAAA,EAAK;QAIrCA,wDAAA,IAAA2S,wCAAA,iBAWM;QAGN3S,wDAAA,IAAA4S,wCAAA,iBA4BM;QAGN5S,wDAAA,IAAA6S,wCAAA,iBA0BM;QAGN7S,wDAAA,IAAA8S,wCAAA,iBA0BM;QAGN9S,wDAAA,IAAA+S,wCAAA,iBAOM;QAGN/S,wDAAA,IAAAgT,wCAAA,iBAGM;QACRhT,0DAAA,EAAM;;;QArH4BA,uDAAA,GAAmB;QAAnBA,wDAAA,SAAA6D,GAAA,CAAA+L,aAAA,CAAmB;QAcpB5P,uDAAA,GAA8B;QAA9BA,wDAAA,SAAA6D,GAAA,CAAA6J,aAAA,CAAArE,MAAA,KAA8B;QA+B9BrJ,uDAAA,GAAmC;QAAnCA,wDAAA,SAAA6D,GAAA,CAAAyK,kBAAA,CAAAjF,MAAA,KAAmC;QA6BnCrJ,uDAAA,GAAgC;QAAhCA,wDAAA,SAAA6D,GAAA,CAAAwL,eAAA,CAAAhG,MAAA,KAAgC;QA6BjCrJ,uDAAA,GAA4C;QAA5CA,wDAAA,SAAA6D,GAAA,CAAAgM,oBAAA,IAAAhM,GAAA,CAAA6L,cAAA,CAA4C;QAUhD1P,uDAAA,GAA4H;QAA5HA,wDAAA,SAAA6D,GAAA,CAAA6J,aAAA,CAAArE,MAAA,UAAAxF,GAAA,CAAAyK,kBAAA,CAAAjF,MAAA,UAAAxF,GAAA,CAAAwL,eAAA,CAAAhG,MAAA,WAAAxF,GAAA,CAAAgM,oBAAA,CAA4H;;;;;;;;;;;;;;;;;;;;;;;;;;ACvHzE;;;;;;ICSvE7P,4DAAA,eAA4D;IAAAA,oDAAA,kDAAiC;IAAAA,0DAAA,EAAO;;;;;IACpGA,4DAAA,eAA+D;IAAAA,oDAAA,sDAAqC;IAAAA,0DAAA,EAAO;;;;;IAH/GA,4DAAA,cAA4D;IAExDA,wDAAA,IAAAiT,8CAAA,mBAAoG;IACpGjT,wDAAA,IAAAkT,8CAAA,mBAA2G;IAC7GlT,0DAAA,EAAQ;;;;IAFCA,uDAAA,GAA4B;IAA5BA,wDAAA,SAAAkJ,MAAA,CAAAiK,oBAAA,GAA4B;IAC5BnT,uDAAA,GAA6B;IAA7BA,wDAAA,UAAAkJ,MAAA,CAAAiK,oBAAA,GAA6B;;;;;IAQtCnT,4DAAA,eAA2C;IAAAA,oDAAA,aAAC;IAAAA,0DAAA,EAAO;;;;;IACnDA,4DAAA,eAA2E;IAAAA,oDAAA,aAAC;IAAAA,0DAAA,EAAO;;;;;IACnFA,4DAAA,eAA0F;IAAAA,oDAAA,aAAC;IAAAA,0DAAA,EAAO;;;;;IAClGA,4DAAA,eAAiE;IAAAA,oDAAA,mBAAE;IAAAA,0DAAA,EAAO;;;;;IAQ9EA,4DAAA,cAAqD;IAEjDA,uDAAA,cAGO;IACTA,0DAAA,EAAM;IACNA,4DAAA,cAA2B;IAAAA,oDAAA,GAAsB;IAAAA,0DAAA,EAAM;;;;IAHnDA,uDAAA,GAAiC;IAAjCA,yDAAA,UAAAwI,MAAA,CAAA4K,eAAA,MAAiC;IAGVpT,uDAAA,GAAsB;IAAtBA,gEAAA,KAAAwI,MAAA,CAAA4K,eAAA,MAAsB;;;;;IAuB7CpT,4DAAA,cAA4D;IAClDA,oDAAA,qBAAc;IAAAA,0DAAA,EAAS;IAACA,oDAAA,GAClC;IAAAA,0DAAA,EAAM;;;;IAD4BA,uDAAA,GAClC;IADkCA,gEAAA,MAAAqT,OAAA,CAAAC,aAAA,CAAAC,YAAA,MAClC;;;;;IACAvT,4DAAA,cAAsE;IAC5DA,oDAAA,sBAAe;IAAAA,0DAAA,EAAS;IAACA,oDAAA,GACnC;IAAAA,0DAAA,EAAM;;;;IAD6BA,uDAAA,GACnC;IADmCA,gEAAA,MAAAiK,OAAA,CAAAqJ,aAAA,CAAAE,WAAA,kBAAAvJ,OAAA,CAAAqJ,aAAA,CAAAE,WAAA,CAAAC,SAAA,gBACnC;;;;;IACAzT,4DAAA,cAAuD;IAC7CA,oDAAA,cAAO;IAAAA,0DAAA,EAAS;IAACA,oDAAA,GAC3B;IAAAA,0DAAA,EAAM;;;;IADqBA,uDAAA,GAC3B;IAD2BA,gEAAA,MAAA4K,OAAA,CAAA0I,aAAA,CAAAlC,OAAA,MAC3B;;;;;IAZFpR,4DAAA,cAA6C;IAEjCA,oDAAA,gBAAS;IAAAA,0DAAA,EAAS;IAACA,oDAAA,GAC7B;IAAAA,0DAAA,EAAM;IACNA,wDAAA,IAAA0T,oDAAA,kBAEM;IACN1T,wDAAA,IAAA2T,oDAAA,kBAEM;IACN3T,wDAAA,IAAA4T,oDAAA,kBAEM;IACR5T,0DAAA,EAAM;;;;IAXyBA,uDAAA,GAC7B;IAD6BA,gEAAA,MAAA4J,OAAA,CAAA0J,aAAA,CAAAO,WAAA,mCAC7B;IAC0B7T,uDAAA,GAAgC;IAAhCA,wDAAA,SAAA4J,OAAA,CAAA0J,aAAA,CAAAC,YAAA,CAAgC;IAGhCvT,uDAAA,GAA0C;IAA1CA,wDAAA,SAAA4J,OAAA,CAAA0J,aAAA,CAAAE,WAAA,kBAAA5J,OAAA,CAAA0J,aAAA,CAAAE,WAAA,CAAAC,SAAA,CAA0C;IAG1CzT,uDAAA,GAA2B;IAA3BA,wDAAA,SAAA4J,OAAA,CAAA0J,aAAA,CAAAlC,OAAA,CAA2B;;;;;;IAMvDpR,4DAAA,iBAKC;IAHCA,wDAAA,mBAAA8T,0EAAA;MAAA9T,2DAAA,CAAA+T,IAAA;MAAA,MAAAC,OAAA,GAAAhU,2DAAA;MAAA,OAASA,yDAAA,CAAAgU,OAAA,CAAAC,sBAAA,EAAwB;IAAA,EAAC;IAIlCjU,oDAAA,2CACF;IAAAA,0DAAA,EAAS;;;;;;IA3BbA,4DAAA,cAAiE;IAEzDA,oDAAA,uBAAgB;IAAAA,0DAAA,EAAK;IACzBA,4DAAA,QAAG;IAAAA,oDAAA,2DAAoD;IAAAA,0DAAA,EAAI;IAC3DA,wDAAA,IAAAkU,8CAAA,kBAaM;IACRlU,0DAAA,EAAM;IACNA,4DAAA,cAA8B;IAC5BA,wDAAA,IAAAmU,iDAAA,qBAOS;IACTnU,4DAAA,iBAIC;IAFCA,wDAAA,mBAAAoU,iEAAA;MAAApU,2DAAA,CAAAqU,IAAA;MAAA,MAAAC,OAAA,GAAAtU,2DAAA;MAAA,OAASA,yDAAA,CAAAsU,OAAA,CAAAC,0BAAA,EAA4B;IAAA,EAAC;IAGtCvU,oDAAA,IACF;IAAAA,0DAAA,EAAS;;;;IA9BeA,uDAAA,GAAmB;IAAnBA,wDAAA,SAAAmN,MAAA,CAAAmG,aAAA,CAAmB;IAoBxCtT,uDAAA,GAA0D;IAA1DA,wDAAA,SAAAmN,MAAA,CAAAgG,oBAAA,OAAAhG,MAAA,CAAAmG,aAAA,kBAAAnG,MAAA,CAAAmG,aAAA,CAAAkB,WAAA,EAA0D;IAS3DxU,uDAAA,GACF;IADEA,gEAAA,MAAAmN,MAAA,CAAAsH,qBAAA,QACF;;;;;IAQAzU,4DAAA,cAGC;IAE0BA,oDAAA,GAAwC;IAAAA,0DAAA,EAAM;IACrEA,4DAAA,cAA0B;IACAA,oDAAA,GAAuB;IAAAA,0DAAA,EAAO;IACtDA,4DAAA,eAAwB;IAAAA,oDAAA,GAAmB;IAAAA,0DAAA,EAAO;;;;IAH7BA,uDAAA,GAAwC;IAAxCA,+DAAA,CAAA0U,QAAA,CAAAvK,YAAA,IAAAuK,QAAA,CAAA9G,QAAA,CAAwC;IAErC5N,uDAAA,GAAuB;IAAvBA,+DAAA,CAAA0U,QAAA,CAAA7H,YAAA,CAAuB;IACvB7M,uDAAA,GAAmB;IAAnBA,+DAAA,CAAA0U,QAAA,CAAA9G,QAAA,CAAmB;;;;;IAXrD5N,4DAAA,cAA6D;IACvDA,oDAAA,GAA+C;IAAAA,0DAAA,EAAK;IACxDA,4DAAA,cAAuB;IACrBA,wDAAA,IAAA2U,8CAAA,kBAWM;IACR3U,0DAAA,EAAM;;;;IAdFA,uDAAA,GAA+C;IAA/CA,gEAAA,uBAAA6I,MAAA,CAAA8G,eAAA,CAAAtG,MAAA,MAA+C;IAG9BrJ,uDAAA,GAAoB;IAApBA,wDAAA,YAAA6I,MAAA,CAAA8G,eAAA,CAAoB,iBAAA9G,MAAA,CAAA+L,eAAA;;;;;IAe3C5U,4DAAA,cAA2D;IACtDA,oDAAA,iDAA0C;IAAAA,0DAAA,EAAI;IACjDA,4DAAA,QAAG;IAAAA,oDAAA,yEAAkE;IAAAA,0DAAA,EAAI;;;ADpF7E,MAKagG,wBAAwB;EAWnC1F,YAAoBG,eAAuC;IAAvC,KAAAA,eAAe,GAAfA,eAAe;IAV1B,KAAAU,QAAQ,GAAW,CAAC;IACpB,KAAAE,QAAQ,GAAW,CAAC;IACpB,KAAAsO,eAAe,GAAqB,EAAE;IACrC,KAAAkF,eAAe,GAAG,IAAIzM,uDAAY,EAAmB;IAE/D,KAAA0M,YAAY,GAAG,KAAK;IACpB,KAAA1B,eAAe,GAAG,CAAC;IACnB,KAAA2B,aAAa,GAAG,EAAE;IAClB,KAAAzB,aAAa,GAA2B,IAAI;EAEmB;EAE/DvS,QAAQA,CAAA;IACNkB,OAAO,CAACC,GAAG,CAAC,qEAAqE,EAAE;MACjFf,QAAQ,EAAE,IAAI,CAACA,QAAQ;MACvBE,QAAQ,EAAE,IAAI,CAACA,QAAQ;MACvBsQ,oBAAoB,EAAE,IAAI,CAAChC,eAAe,CAACtG;KAC5C,CAAC;EACJ;EAEA;;;;;;EAMAuL,eAAeA,CAACxJ,KAAa,EAAE+F,IAAoB;IACjD,OAAOA,IAAI,CAACvD,QAAQ;EACtB;EAEA;;;EAGAoH,YAAYA,CAAA;IACV/S,OAAO,CAACC,GAAG,CAAC,sEAAsE,CAAC;IAEnF,IAAI,IAAI,CAACyN,eAAe,CAACtG,MAAM,KAAK,CAAC,EAAE;MACrCpH,OAAO,CAAC8J,IAAI,CAAC,uFAAuF,CAAC;MACrG;;IAGF,IAAI,CAAC+I,YAAY,GAAG,IAAI;IACxB,IAAI,CAAC1B,eAAe,GAAG,CAAC;IACxB,IAAI,CAAC2B,aAAa,GAAG,8BAA8B;IACnD,IAAI,CAACzB,aAAa,GAAG,IAAI;IAEzBrR,OAAO,CAACC,GAAG,CAAC,kFAAkF,EAAE,IAAI,CAACyN,eAAe,CAAC;IAErH;IACA,MAAMsF,cAAc,GAAmB;MACrC9T,QAAQ,EAAE,IAAI,CAACA,QAAQ;MACvBE,QAAQ,EAAE,IAAI,CAACA,QAAQ;MACvBsO,eAAe,EAAE,IAAI,CAACA;KACvB;IAED,IAAI,CAACoF,aAAa,GAAG,sCAAsC;IAC3D,IAAI,CAAC3B,eAAe,GAAG,EAAE;IAEzB,IAAI,CAAC3S,eAAe,CAACyU,aAAa,CAACD,cAAc,CAAC,CAAChU,SAAS,CAAC;MAC3DoB,IAAI,EAAGgO,QAAyB,IAAI;QAClCpO,OAAO,CAACC,GAAG,CAAC,wEAAwE,EAAEmO,QAAQ,CAAC;QAC/F,IAAI,CAAC8E,qBAAqB,CAAC9E,QAAQ,CAAC;MACtC,CAAC;MACD/N,KAAK,EAAGA,KAAU,IAAI;QACpBL,OAAO,CAACK,KAAK,CAAC,4DAA4D,EAAEA,KAAK,CAAC;QAClF,IAAI,CAAC8S,kBAAkB,CAAC9S,KAAK,CAAC;MAChC;KACD,CAAC;EACJ;EAEA;;;;EAIQ6S,qBAAqBA,CAAC9E,QAAyB;IACrDpO,OAAO,CAACC,GAAG,CAAC,mFAAmF,EAAEmO,QAAQ,CAAC;IAE1G,IAAI,CAAC+C,eAAe,GAAG,GAAG;IAC1B,IAAI,CAAC2B,aAAa,GAAG1E,QAAQ,CAACgF,OAAO,GAAG,iCAAiC,GAAG,gBAAgB;IAC5F,IAAI,CAAC/B,aAAa,GAAGjD,QAAQ;IAC7B,IAAI,CAACyE,YAAY,GAAG,KAAK;IAEzB,IAAIzE,QAAQ,CAACgF,OAAO,EAAE;MACpBpT,OAAO,CAACC,GAAG,CAAC,0FAA0F,CAAC;MACvG,IAAI,CAAC2S,eAAe,CAACnJ,IAAI,CAAC2E,QAAQ,CAAC;;EAEvC;EAEA;;;;EAIQ+E,kBAAkBA,CAAC9S,KAAU;IACnCL,OAAO,CAACK,KAAK,CAAC,kEAAkE,EAAEA,KAAK,CAAC;IAExF,IAAI,CAAC8Q,eAAe,GAAG,CAAC;IACxB,IAAI,CAAC2B,aAAa,GAAG,gBAAgB;IACrC,IAAI,CAACzB,aAAa,GAAG;MACnB+B,OAAO,EAAE,KAAK;MACdjE,OAAO,EAAE9O,KAAK,CAAC8O,OAAO,IAAI;KAC3B;IACD,IAAI,CAAC0D,YAAY,GAAG,KAAK;EAC3B;EAEA;;;;EAIMQ,eAAeA,CAAA;IAAA,IAAA1T,KAAA;IAAA,OAAAC,sJAAA;MACnB,IAAID,KAAI,CAAC0R,aAAa,EAAEiC,UAAU,EAAE;QAClCtT,OAAO,CAACC,GAAG,CAAC,sEAAsE,EAAEN,KAAI,CAAC0R,aAAa,CAACiC,UAAU,CAAC;QAElH,IAAI;UACF;UACA,MAAM3T,KAAI,CAAC4T,0BAA0B,CAAC5T,KAAI,CAAC0R,aAAa,CAACiC,UAAU,CAAC;SAErE,CAAC,OAAOjT,KAAK,EAAE;UACdL,OAAO,CAACK,KAAK,CAAC,gEAAgE,EAAEA,KAAK,CAAC;UAEtF;UACAL,OAAO,CAACC,GAAG,CAAC,2EAA2E,CAAC;UACxF,IAAI;YACF,MAAMN,KAAI,CAAC6T,wBAAwB,EAAE;WACtC,CAAC,OAAOC,aAAa,EAAE;YACtBzT,OAAO,CAACK,KAAK,CAAC,iFAAiF,EAAEoT,aAAa,CAAC;YAC/G;YACAC,KAAK,CAAC,kEAAkE,CAAC;;;;IAG9E;EACH;EAEA;;;;EAIM1B,sBAAsBA,CAAA;IAAA,IAAA2B,MAAA;IAAA,OAAA/T,sJAAA;MAC1B,IAAI,CAAC+T,MAAI,CAACtC,aAAa,EAAEkB,WAAW,EAAE;QACpCvS,OAAO,CAAC8J,IAAI,CAAC,gFAAgF,CAAC;QAC9F4J,KAAK,CAAC,4BAA4B,CAAC;QACnC;;MAGF1T,OAAO,CAACC,GAAG,CAAC,8FAA8F,CAAC;MAC3GD,OAAO,CAACC,GAAG,CAAC,qEAAqE,EAAE0T,MAAI,CAACtC,aAAa,CAACkB,WAAW,CAAC;MAClHvS,OAAO,CAACC,GAAG,CAAC,uEAAuE,EAAE0T,MAAI,CAACtC,aAAa,CAAC;MAExG,IAAI;QACF;QACA,MAAMkB,WAAW,GAAGoB,MAAI,CAACtC,aAAa,CAACkB,WAAW;QAElD;QACA,MAAMqB,GAAG,GAAG,IAAIC,cAAc,EAAE;QAEhC;QACAD,GAAG,CAACE,IAAI,CAAC,KAAK,EAAEvB,WAAW,CAAC;QAE5B;QACAqB,GAAG,CAACG,YAAY,GAAG,MAAM;QAEzB;QACA,IAAIC,WAAW,GAAGlU,OAAO,CAACC,OAAO,EAAE;QAEnC,IAAIO,MAAM,CAAC2T,eAAe,EAAE;UAC1BjU,OAAO,CAACC,GAAG,CAAC,gFAAgF,CAAC;UAC7F+T,WAAW,GAAG1T,MAAM,CAAC2T,eAAe,CAACL,GAAG,CAAC;SAC1C,MAAM;UACL5T,OAAO,CAACC,GAAG,CAAC,qFAAqF,CAAC;;QAGpG;QACA,MAAM+T,WAAW;QAEjB;QACA,MAAME,eAAe,GAAG,IAAIpU,OAAO,CAAO,CAACC,OAAO,EAAEoU,MAAM,KAAI;UAC5DP,GAAG,CAACQ,MAAM,GAAG,MAAK;YAChB,IAAIR,GAAG,CAACxI,MAAM,KAAK,GAAG,EAAE;cACtBpL,OAAO,CAACC,GAAG,CAAC,2EAA2E,CAAC;cAExF;cACA,MAAMoU,IAAI,GAAGT,GAAG,CAACxF,QAAgB;cAEjC;cACA,IAAIzC,QAAQ,GAAGgI,MAAI,CAACtC,aAAa,EAAEO,WAAW,IAAI,yBAAyB;cAE3E5R,OAAO,CAACC,GAAG,CAAC,0EAA0E,EAAE0T,MAAI,CAACtC,aAAa,EAAEO,WAAW,CAAC;cACxH5R,OAAO,CAACC,GAAG,CAAC,wFAAwF,EAAE0L,QAAQ,CAAC;cAE/G;cACA,IAAI,CAACA,QAAQ,CAAC2I,WAAW,EAAE,CAACC,QAAQ,CAAC,MAAM,CAAC,EAAE;gBAC5C5I,QAAQ,IAAI,MAAM;;cAGpB3L,OAAO,CAACC,GAAG,CAAC,uEAAuE,EAAE0L,QAAQ,CAAC;cAC9F3L,OAAO,CAACC,GAAG,CAAC,kEAAkE,EAAEoU,IAAI,CAACG,IAAI,CAAC;cAC1FxU,OAAO,CAACC,GAAG,CAAC,kEAAkE,EAAEoU,IAAI,CAACI,IAAI,CAAC;cAE1F;cACA,MAAMC,GAAG,GAAGpU,MAAM,CAACqU,GAAG,CAACC,eAAe,CAACP,IAAI,CAAC;cAE5C;cACA,MAAMQ,IAAI,GAAG3L,QAAQ,CAAC4L,aAAa,CAAC,GAAG,CAAC;cACxCD,IAAI,CAACE,IAAI,GAAGL,GAAG;cACfG,IAAI,CAACG,QAAQ,GAAGrJ,QAAQ;cAExB;cACA,IAAI,oBAAoB,IAAIrL,MAAM,EAAE;gBAClCqT,MAAI,CAACsB,qBAAqB,CAACZ,IAAI,EAAE1I,QAAQ,CAAC,CACvCuJ,IAAI,CAAC,MAAMnV,OAAO,EAAE,CAAC,CACrBoV,KAAK,CAAC,MAAK;kBACV;kBACAjM,QAAQ,CAACkM,IAAI,CAACC,WAAW,CAACR,IAAI,CAAC;kBAC/BA,IAAI,CAACS,KAAK,EAAE;kBACZpM,QAAQ,CAACkM,IAAI,CAACG,WAAW,CAACV,IAAI,CAAC;kBAC/BvU,MAAM,CAACqU,GAAG,CAACa,eAAe,CAACd,GAAG,CAAC;kBAC/B3U,OAAO,EAAE;gBACX,CAAC,CAAC;eACL,MAAM;gBACL;gBACAmJ,QAAQ,CAACkM,IAAI,CAACC,WAAW,CAACR,IAAI,CAAC;gBAC/BA,IAAI,CAACS,KAAK,EAAE;gBACZpM,QAAQ,CAACkM,IAAI,CAACG,WAAW,CAACV,IAAI,CAAC;gBAC/BvU,MAAM,CAACqU,GAAG,CAACa,eAAe,CAACd,GAAG,CAAC;gBAC/B3U,OAAO,EAAE;;aAEZ,MAAM;cACLC,OAAO,CAACK,KAAK,CAAC,oFAAoF,EAAEuT,GAAG,CAACxI,MAAM,CAAC;cAC/G+I,MAAM,CAAC,IAAIsB,KAAK,CAAC,gCAAgC7B,GAAG,CAACxI,MAAM,EAAE,CAAC,CAAC;;UAEnE,CAAC;UAEDwI,GAAG,CAAC8B,OAAO,GAAG,MAAK;YACjB1V,OAAO,CAACK,KAAK,CAAC,qFAAqF,CAAC;YACpG8T,MAAM,CAAC,IAAIsB,KAAK,CAAC,+BAA+B,CAAC,CAAC;UACpD,CAAC;UAED;UACA7B,GAAG,CAAC+B,IAAI,EAAE;QACZ,CAAC,CAAC;QAEF,MAAMzB,eAAe;OAEtB,CAAC,OAAO7T,KAAK,EAAE;QACdL,OAAO,CAACK,KAAK,CAAC,8DAA8D,EAAEA,KAAK,CAAC;QACpFqT,KAAK,CAAC,6CAA6C,CAAC;;IACrD;EACH;EAEA;;;;;EAKcuB,qBAAqBA,CAACZ,IAAU,EAAEuB,aAAqB;IAAA,OAAAhW,sJAAA;MACnE,IAAI;QACF;QACA,MAAMiW,MAAM,SAAUvV,MAAc,CAACwV,kBAAkB,CAAC;UACtDF,aAAa,EAAEA,aAAa;UAC5BG,KAAK,EAAE,CAAC;YACNC,WAAW,EAAE,WAAW;YACxBC,MAAM,EAAE;cACN,iBAAiB,EAAE,CAAC,MAAM;;WAE7B;SACF,CAAC;QAEF;QACA,MAAMC,QAAQ,SAASL,MAAM,CAACM,cAAc,EAAE;QAE9C;QACA,MAAMD,QAAQ,CAACE,KAAK,CAAC/B,IAAI,CAAC;QAE1B;QACA,MAAM6B,QAAQ,CAACG,KAAK,EAAE;QAEtBrW,OAAO,CAACC,GAAG,CAAC,8EAA8E,CAAC;OAC5F,CAAC,OAAOI,KAAK,EAAE;QACd,IAAKA,KAAa,CAACiW,IAAI,KAAK,YAAY,EAAE;UACxCtW,OAAO,CAACC,GAAG,CAAC,iFAAiF,CAAC;SAC/F,MAAM;UACLD,OAAO,CAACK,KAAK,CAAC,6DAA6D,EAAEA,KAAK,CAAC;;QAErF,MAAMA,KAAK;;IACZ;EACH;EAEA;;;EAGAiS,0BAA0BA,CAAA;IACxB,IAAI,IAAI,CAACjB,aAAa,EAAEkB,WAAW,EAAE;MACnCvS,OAAO,CAACC,GAAG,CAAC,6FAA6F,EAAE,IAAI,CAACoR,aAAa,CAACkB,WAAW,CAAC;MAC1IvS,OAAO,CAACC,GAAG,CAAC,2EAA2E,EAAE,IAAI,CAACoR,aAAa,CAAC;MAE5G;MACA,IAAI,CAAC7S,eAAe,CAAC+X,oBAAoB,EAAE,CAACvX,SAAS,CAAC;QACpDoB,IAAI,EAAGoW,WAAW,IAAI;UACpBxW,OAAO,CAACC,GAAG,CAAC,qFAAqF,EAAEuW,WAAW,CAACC,QAAQ,CAAC;UACxH,IAAI;YACF;YACA,MAAMlE,WAAW,GAAG,IAAI,CAAClB,aAAc,CAACkB,WAAY;YACpD,MAAMmC,GAAG,GAAG,IAAIC,GAAG,CAACpC,WAAW,CAAC;YAEhCvS,OAAO,CAACC,GAAG,CAAC,kFAAkF,EAAEsS,WAAW,CAAC;YAC5GvS,OAAO,CAACC,GAAG,CAAC,6EAA6E,EAAE;cACzFyW,QAAQ,EAAEhC,GAAG,CAACgC,QAAQ;cACtBC,IAAI,EAAEjC,GAAG,CAACiC,IAAI;cACdC,QAAQ,EAAElC,GAAG,CAACkC,QAAQ;cACtBC,MAAM,EAAEnC,GAAG,CAACmC;aACb,CAAC;YAEF;YACA,MAAMH,QAAQ,GAAGhC,GAAG,CAACgC,QAAQ;YAC7B,MAAMC,IAAI,GAAGjC,GAAG,CAACiC,IAAI;YACrB,MAAMC,QAAQ,GAAGlC,GAAG,CAACkC,QAAQ;YAC7B,MAAMC,MAAM,GAAGnC,GAAG,CAACmC,MAAM;YAEzB;YACA,MAAMC,kBAAkB,GAAG,GAAGJ,QAAQ,KAAKF,WAAW,CAACC,QAAQ,IAAID,WAAW,CAACO,QAAQ,IAAIJ,IAAI,GAAGC,QAAQ,GAAGC,MAAM,EAAE;YAErH7W,OAAO,CAACC,GAAG,CAAC,uFAAuF,EAAE6W,kBAAkB,CAAC;YAExH;YACA,MAAMjC,IAAI,GAAG3L,QAAQ,CAAC4L,aAAa,CAAC,GAAG,CAAC;YACxCD,IAAI,CAACE,IAAI,GAAG+B,kBAAkB;YAE9B,IAAIE,gBAAgB,GAAG,IAAI,CAAC3F,aAAa,EAAEO,WAAW,IAAI,yBAAyB;YACnF,IAAI,CAACoF,gBAAgB,CAAC1C,WAAW,EAAE,CAACC,QAAQ,CAAC,MAAM,CAAC,EAAE;cACpDyC,gBAAgB,IAAI,MAAM;;YAG5BnC,IAAI,CAACG,QAAQ,GAAGgC,gBAAgB;YAChC;YACAnC,IAAI,CAACoC,KAAK,CAACtS,OAAO,GAAG,MAAM;YAE3B3E,OAAO,CAACC,GAAG,CAAC,8EAA8E,EAAE+W,gBAAgB,CAAC;YAC7GhX,OAAO,CAACC,GAAG,CAAC,iFAAiF,EAAE;cAC7F8U,IAAI,EAAEF,IAAI,CAACE,IAAI;cACfC,QAAQ,EAAEH,IAAI,CAACG;aAChB,CAAC;YAEF9L,QAAQ,CAACkM,IAAI,CAACC,WAAW,CAACR,IAAI,CAAC;YAC/BA,IAAI,CAACS,KAAK,EAAE;YACZpM,QAAQ,CAACkM,IAAI,CAACG,WAAW,CAACV,IAAI,CAAC;YAE/B7U,OAAO,CAACC,GAAG,CAAC,8EAA8E,CAAC;WAC5F,CAAC,OAAOI,KAAK,EAAE;YACdL,OAAO,CAACK,KAAK,CAAC,+EAA+E,EAAEA,KAAK,CAAC;YACrGqT,KAAK,CAAC,2DAA2D,CAAC;;QAEtE,CAAC;QACDrT,KAAK,EAAGA,KAAK,IAAI;UACfL,OAAO,CAACK,KAAK,CAAC,sFAAsF,EAAEA,KAAK,CAAC;UAC5GqT,KAAK,CAAC,8DAA8D,CAAC;QACvE;OACD,CAAC;KACH,MAAM;MACL1T,OAAO,CAAC8J,IAAI,CAAC,oFAAoF,CAAC;MAClG4J,KAAK,CAAC,4BAA4B,CAAC;;EAEvC;EAEA;;;;EAIcH,0BAA0BA,CAACmB,GAAW;IAAA,IAAAwC,MAAA;IAAA,OAAAtX,sJAAA;MAClDI,OAAO,CAACC,GAAG,CAAC,2FAA2F,CAAC;MAExG;MACA,MAAMkX,YAAY,GAAGD,MAAI,CAACE,yBAAyB,CAAC1C,GAAG,CAAC;MAExD;MACA,MAAMd,GAAG,GAAG,IAAIC,cAAc,EAAE;MAEhC;MACCvT,MAAc,CAAC+W,kCAAkC,GAAGzD,GAAG;MAExD;MACAA,GAAG,CAACE,IAAI,CAAC,KAAK,EAAEqD,YAAY,CAAC;MAE7B;MACA,IAAI7W,MAAM,CAAC2T,eAAe,EAAE;QAC1BjU,OAAO,CAACC,GAAG,CAAC,oFAAoF,CAAC;QAEjG;QACA,IAAI;UACF,MAAMK,MAAM,CAAC2T,eAAe,CAACL,GAAG,CAAC;UACjC5T,OAAO,CAACC,GAAG,CAAC,gGAAgG,CAAC;SAC9G,CAAC,OAAOI,KAAK,EAAE;UACdL,OAAO,CAAC8J,IAAI,CAAC,4GAA4G,EAAEzJ,KAAK,CAAC;;OAEpI,MAAM;QACLL,OAAO,CAACC,GAAG,CAAC,yFAAyF,CAAC;;MAGxG,OAAO,IAAIH,OAAO,CAAC,CAACC,OAAO,EAAEoU,MAAM,KAAI;QACrCP,GAAG,CAACQ,MAAM,GAAG,MAAK;UAChB,IAAIR,GAAG,CAACxI,MAAM,KAAK,GAAG,EAAE;YACtBpL,OAAO,CAACC,GAAG,CAAC,+EAA+E,CAAC;YAE5F;YACA,MAAMoU,IAAI,GAAG,IAAIiD,IAAI,CAAC,CAAC1D,GAAG,CAACxF,QAAQ,CAAC,EAAE;cACpCqG,IAAI,EAAEb,GAAG,CAAC2D,iBAAiB,CAAC,cAAc,CAAC,IAAI;aAChD,CAAC;YAEF,MAAMP,gBAAgB,GAAGE,MAAI,CAAC7F,aAAa,EAAEO,WAAW,IAAI,yBAAyB;YACrFsF,MAAI,CAACM,YAAY,CAACnD,IAAI,EAAE2C,gBAAgB,CAAC;YAEzC;YACA,OAAQ1W,MAAc,CAAC+W,kCAAkC;YAEzDtX,OAAO,EAAE;WACV,MAAM;YACLC,OAAO,CAACK,KAAK,CAAC,wFAAwF,EAAEuT,GAAG,CAACxI,MAAM,CAAC;YACnH;YACA,OAAQ9K,MAAc,CAAC+W,kCAAkC;YACzDlD,MAAM,CAAC,IAAIsB,KAAK,CAAC,gCAAgC7B,GAAG,CAACxI,MAAM,EAAE,CAAC,CAAC;;QAEnE,CAAC;QAEDwI,GAAG,CAAC8B,OAAO,GAAG,MAAK;UACjB1V,OAAO,CAACK,KAAK,CAAC,yFAAyF,CAAC;UACxG;UACA,OAAQC,MAAc,CAAC+W,kCAAkC;UACzDlD,MAAM,CAAC,IAAIsB,KAAK,CAAC,+BAA+B,CAAC,CAAC;QACpD,CAAC;QAED;QACA7B,GAAG,CAACG,YAAY,GAAG,MAAM;QAEzB;QACAH,GAAG,CAAC+B,IAAI,EAAE;MACZ,CAAC,CAAC;IAAC;EACL;EAEA;;;;;EAKQyB,yBAAyBA,CAAC1C,GAAW;IAC3C,MAAM+C,WAAW,GAAGnX,MAAM,CAACoX,QAAQ,CAAChB,QAAQ,KAAK,QAAQ;IACzD,MAAMiB,SAAS,GAAGjD,GAAG,CAACkD,UAAU,CAAC,SAAS,CAAC;IAE3C,IAAIH,WAAW,IAAIE,SAAS,EAAE;MAC5B3X,OAAO,CAAC8J,IAAI,CAAC,+FAA+F,CAAC;MAC7G,OAAO4K,GAAG,CAACmD,OAAO,CAAC,SAAS,EAAE,UAAU,CAAC;;IAG3C,OAAOnD,GAAG;EACZ;EAEA;;;;;EAKQ8C,YAAYA,CAACnD,IAAU,EAAE1I,QAAgB;IAC/C,MAAM+I,GAAG,GAAGpU,MAAM,CAACqU,GAAG,CAACC,eAAe,CAACP,IAAI,CAAC;IAC5C,MAAMQ,IAAI,GAAG3L,QAAQ,CAAC4L,aAAa,CAAC,GAAG,CAAC;IACxCD,IAAI,CAACE,IAAI,GAAGL,GAAG;IACfG,IAAI,CAACG,QAAQ,GAAGrJ,QAAQ;IACxBkJ,IAAI,CAACoC,KAAK,CAACtS,OAAO,GAAG,MAAM;IAE3BuE,QAAQ,CAACkM,IAAI,CAACC,WAAW,CAACR,IAAI,CAAC;IAC/BA,IAAI,CAACS,KAAK,EAAE;IACZpM,QAAQ,CAACkM,IAAI,CAACG,WAAW,CAACV,IAAI,CAAC;IAE/B;IACAvU,MAAM,CAACqU,GAAG,CAACa,eAAe,CAACd,GAAG,CAAC;IAE/B1U,OAAO,CAACC,GAAG,CAAC,qEAAqE,EAAE0L,QAAQ,CAAC;EAC9F;EAEA;;;EAGQmM,eAAeA,CAACpD,GAAW;IACjC,MAAMG,IAAI,GAAG3L,QAAQ,CAAC4L,aAAa,CAAC,GAAG,CAAC;IACxCD,IAAI,CAACE,IAAI,GAAGL,GAAG;IAEf;IACA,MAAMsC,gBAAgB,GAAG,IAAI,CAAC3F,aAAa,EAAEO,WAAW,IAAI,yBAAyB;IACrF5R,OAAO,CAACC,GAAG,CAAC,6EAA6E,EAAE+W,gBAAgB,CAAC;IAE5GnC,IAAI,CAACG,QAAQ,GAAGgC,gBAAgB;IAChC;IACA9N,QAAQ,CAACkM,IAAI,CAACC,WAAW,CAACR,IAAI,CAAC;IAC/BA,IAAI,CAACS,KAAK,EAAE;IACZpM,QAAQ,CAACkM,IAAI,CAACG,WAAW,CAACV,IAAI,CAAC;EACjC;EAEA;;;;EAIAkD,oBAAoBA,CAAA;IAClB,IAAI,IAAI,CAAClF,YAAY,EAAE;MACrB,OAAO,qBAAqB;;IAE9B,OAAO,gBAAgB;EACzB;EAEA;;;;EAIAmF,oBAAoBA,CAAA;IAClB,IAAI,IAAI,CAACnF,YAAY,EAAE;MACrB,OAAO,GAAG,IAAI,CAACC,aAAa,KAAK,IAAI,CAAC3B,eAAe,IAAI;;IAE3D,IAAI,IAAI,CAACE,aAAa,EAAE;MACtB,OAAO,IAAI,CAACA,aAAa,CAAC+B,OAAO,GAAG,iCAAiC,GAAG,gBAAgB;;IAE1F,OAAO,yBAAyB;EAClC;EAEA;;;;EAIA6E,qBAAqBA,CAAA;IACnB,IAAI,IAAI,CAACpF,YAAY,EAAE;MACrB,OAAO,mBAAmB;;IAE5B,IAAI,IAAI,CAACxB,aAAa,EAAE;MACtB,OAAO,IAAI,CAACA,aAAa,CAAC+B,OAAO,GAAG,gBAAgB,GAAG,eAAe;;IAExE,OAAO,cAAc;EACvB;EAEA;;;;EAIA8E,uBAAuBA,CAAA;IACrB,OAAO,IAAI,CAACrF,YAAY,IAAI,IAAI,CAACnF,eAAe,CAACtG,MAAM,KAAK,CAAC;EAC/D;EAEA;;;;EAIA+Q,wBAAwBA,CAAA;IACtB,OAAO,IAAI,CAAC9G,aAAa,EAAE+B,OAAO,KAAK,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC/B,aAAa,CAACiC,UAAU;EAChF;EAEA;;;;EAIAd,qBAAqBA,CAAA;IACnB,IAAI,IAAI,CAACnB,aAAa,EAAEO,WAAW,EAAE;MACnC,OAAO,eAAe,IAAI,CAACP,aAAa,CAACO,WAAW,EAAE;;IAExD,OAAO,sBAAsB;EAC/B;EAEA;;;;EAIAV,oBAAoBA,CAAA;IAClB,OAAO,OAAO5Q,MAAM,CAAC2T,eAAe,KAAK,UAAU;EACrD;EAEA;;;EAGAT,wBAAwBA,CAAA;IACtB,IAAI,IAAI,CAACnC,aAAa,EAAEO,WAAW,EAAE;MACnC5R,OAAO,CAACC,GAAG,CAAC,wFAAwF,CAAC;MAErG;MACA;MACA,MAAMmY,QAAQ,GAAG,IAAI,CAAC/G,aAAa,CAAC+G,QAAQ,IAAI,IAAI,CAAC/G,aAAa,CAACO,WAAW;MAC9E,MAAMyG,QAAQ,GAAG,IAAI,CAAChH,aAAa,CAACgH,QAAQ,IAAI,IAAI,CAAChH,aAAa,CAACO,WAAW;MAE9E5R,OAAO,CAACC,GAAG,CAAC,2EAA2E,EAAE;QAAEmY,QAAQ;QAAEC;MAAQ,CAAE,CAAC;MAEhH,IAAI,CAAC7Z,eAAe,CAAC8Z,mBAAmB,CAACF,QAAQ,EAAEC,QAAQ,CAAC,CAACrZ,SAAS,CAAC;QACrEoB,IAAI,EAAGiU,IAAU,IAAI;UACnBrU,OAAO,CAACC,GAAG,CAAC,6EAA6E,CAAC;UAE1F;UACA,MAAMyU,GAAG,GAAGpU,MAAM,CAACqU,GAAG,CAACC,eAAe,CAACP,IAAI,CAAC;UAC5C,MAAMQ,IAAI,GAAG3L,QAAQ,CAAC4L,aAAa,CAAC,GAAG,CAAC;UACxCD,IAAI,CAACE,IAAI,GAAGL,GAAG;UACfG,IAAI,CAACG,QAAQ,GAAGoD,QAAQ;UACxBvD,IAAI,CAACoC,KAAK,CAACtS,OAAO,GAAG,MAAM;UAE3BuE,QAAQ,CAACkM,IAAI,CAACC,WAAW,CAACR,IAAI,CAAC;UAC/BA,IAAI,CAACS,KAAK,EAAE;UACZpM,QAAQ,CAACkM,IAAI,CAACG,WAAW,CAACV,IAAI,CAAC;UAE/B;UACAvU,MAAM,CAACqU,GAAG,CAACa,eAAe,CAACd,GAAG,CAAC;UAE/B1U,OAAO,CAACC,GAAG,CAAC,iFAAiF,CAAC;QAChG,CAAC;QACDI,KAAK,EAAGA,KAAK,IAAI;UACfL,OAAO,CAACK,KAAK,CAAC,yEAAyE,EAAEA,KAAK,CAAC;UAC/FqT,KAAK,CAAC,sEAAsE,CAAC;QAC/E;OACD,CAAC;KACH,MAAM;MACL1T,OAAO,CAAC8J,IAAI,CAAC,kFAAkF,CAAC;MAChG4J,KAAK,CAAC,6CAA6C,CAAC;;EAExD;EAEA;;;;EAIA6E,4BAA4BA,CAAA;IAC1B,OAAO,IAAI,CAAClH,aAAa,EAAE+B,OAAO,KAAK,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC/B,aAAa,CAACO,WAAW;EACjF;EAAC,QAAAtU,CAAA;qBA3mBUyG,wBAAwB,EAAAhG,+DAAA,CAAAH,sFAAA;EAAA;EAAA,QAAAL,EAAA;UAAxBwG,wBAAwB;IAAAvC,SAAA;IAAAuI,MAAA;MAAA7K,QAAA;MAAAE,QAAA;MAAAsO,eAAA;IAAA;IAAA1D,OAAA;MAAA4I,eAAA;IAAA;IAAA9M,KAAA;IAAAC,IAAA;IAAAkE,MAAA;IAAAjE,QAAA,WAAAwS,kCAAA7W,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QChCrC5D,4DAAA,aAAwC;QAEhCA,oDAAA,kCAA2B;QAAAA,0DAAA,EAAK;QACpCA,4DAAA,WAA+B;QAC7BA,oDAAA,0EACF;QAAAA,0DAAA,EAAI;QAEJA,wDAAA,IAAA0a,uCAAA,iBAKM;QACR1a,0DAAA,EAAM;QAGNA,4DAAA,aAA8D;QAE1DA,wDAAA,IAAA2a,wCAAA,kBAAmD;QACnD3a,wDAAA,KAAA4a,yCAAA,kBAAmF;QACnF5a,wDAAA,KAAA6a,yCAAA,kBAAkG;QAClG7a,wDAAA,KAAA8a,yCAAA,kBAA0E;QAC5E9a,0DAAA,EAAM;QACNA,4DAAA,eAAyB;QACvBA,oDAAA,IACF;QAAAA,0DAAA,EAAM;QAIRA,wDAAA,KAAA+a,wCAAA,kBAQM;QAGN/a,4DAAA,eAA6B;QAIzBA,wDAAA,mBAAAgb,2DAAA;UAAA,OAASnX,GAAA,CAAAmR,YAAA,EAAc;QAAA,EAAC;QAExBhV,oDAAA,IACF;QAAAA,0DAAA,EAAS;QAIXA,wDAAA,KAAAib,wCAAA,mBAoCM;QAGNjb,wDAAA,KAAAkb,wCAAA,kBAgBM;QAGNlb,wDAAA,KAAAmb,wCAAA,kBAGM;QACRnb,0DAAA,EAAM;;;QA1GwBA,uDAAA,GAAgC;QAAhCA,wDAAA,SAAA6D,GAAA,CAAAuW,wBAAA,GAAgC;QAShCpa,uDAAA,GAAiC;QAAjCA,wDAAA,CAAA6D,GAAA,CAAAqW,qBAAA,GAAiC;QAElDla,uDAAA,GAAkB;QAAlBA,wDAAA,SAAA6D,GAAA,CAAAiR,YAAA,CAAkB;QAClB9U,uDAAA,GAA6C;QAA7CA,wDAAA,UAAA6D,GAAA,CAAAiR,YAAA,KAAAjR,GAAA,CAAAyP,aAAA,kBAAAzP,GAAA,CAAAyP,aAAA,CAAA+B,OAAA,EAA6C;QAC7CrV,uDAAA,GAA8D;QAA9DA,wDAAA,UAAA6D,GAAA,CAAAiR,YAAA,IAAAjR,GAAA,CAAAyP,aAAA,KAAAzP,GAAA,CAAAyP,aAAA,CAAA+B,OAAA,CAA8D;QAC9DrV,uDAAA,GAAqC;QAArCA,wDAAA,UAAA6D,GAAA,CAAAiR,YAAA,KAAAjR,GAAA,CAAAyP,aAAA,CAAqC;QAG5CtT,uDAAA,GACF;QADEA,gEAAA,MAAA6D,GAAA,CAAAoW,oBAAA,QACF;QAI+Bja,uDAAA,GAAkB;QAAlBA,wDAAA,SAAA6D,GAAA,CAAAiR,YAAA,CAAkB;QAc/C9U,uDAAA,GAAsC;QAAtCA,wDAAA,aAAA6D,GAAA,CAAAsW,uBAAA,GAAsC;QAGtCna,uDAAA,GACF;QADEA,gEAAA,MAAA6D,GAAA,CAAAmW,oBAAA,QACF;QAI6Bha,uDAAA,GAAgC;QAAhCA,wDAAA,SAAA6D,GAAA,CAAAuW,wBAAA,GAAgC;QAuCpCpa,uDAAA,GAAgC;QAAhCA,wDAAA,SAAA6D,GAAA,CAAA8L,eAAA,CAAAtG,MAAA,KAAgC;QAmBpCrJ,uDAAA,GAAkC;QAAlCA,wDAAA,SAAA6D,GAAA,CAAA8L,eAAA,CAAAtG,MAAA,OAAkC;;;;;;;;;;;;;;;;;;;;;;;;;;AC7GoB;AACX;;;;;;;;ICGhErJ,4DAAA,cAAiD;IAC5CA,oDAAA,+BAAwB;IAAAA,0DAAA,EAAI;;;;;IAgB3BA,4DAAA,WAA2D;IAAAA,oDAAA,sBAAe;IAAAA,0DAAA,EAAO;;;;;IACjFA,4DAAA,WAA4D;IAAAA,oDAAA,uCAAgC;IAAAA,0DAAA,EAAO;;;;;IAFrGA,4DAAA,cAAsG;IACpGA,wDAAA,IAAAqb,gDAAA,mBAAiF;IACjFrb,wDAAA,IAAAsb,gDAAA,mBAAmG;IACrGtb,0DAAA,EAAM;;;;;;IAFGA,uDAAA,GAAkD;IAAlDA,wDAAA,UAAAub,OAAA,GAAA9N,MAAA,CAAA+N,WAAA,CAAAC,GAAA,0BAAAF,OAAA,CAAAG,MAAA,kBAAAH,OAAA,CAAAG,MAAA,aAAkD;IAClD1b,uDAAA,GAAmD;IAAnDA,wDAAA,UAAA2b,OAAA,GAAAlO,MAAA,CAAA+N,WAAA,CAAAC,GAAA,0BAAAE,OAAA,CAAAD,MAAA,kBAAAC,OAAA,CAAAD,MAAA,cAAmD;;;;;IAU1D1b,4DAAA,WAAsB;IAAAA,oDAAA,mBAAY;IAAAA,0DAAA,EAAO;;;;;IACzCA,4DAAA,WAAuB;IAAAA,oDAAA,sBAAe;IAAAA,0DAAA,EAAO;;;;;IAcnDA,4DAAA,cAAgD;IAC9CA,oDAAA,GACF;IAAAA,0DAAA,EAAM;;;;IADJA,uDAAA,GACF;IADEA,gEAAA,MAAAgL,MAAA,CAAA4Q,YAAA,MACF;;;;;IA6BQ5b,4DAAA,eAAqE;IAAAA,oDAAA,GAAsD;;IAAAA,0DAAA,EAAO;;;;IAA7DA,uDAAA,GAAsD;IAAtDA,gEAAA,gBAAAA,yDAAA,OAAA6b,WAAA,CAAAC,SAAA,oBAAsD;;;;;;IAtBjI9b,4DAAA,cAIC;IADCA,wDAAA,mBAAA+b,qEAAA;MAAA,MAAAvS,WAAA,GAAAxJ,2DAAA,CAAAgc,IAAA;MAAA,MAAAH,WAAA,GAAArS,WAAA,CAAAG,SAAA;MAAA,MAAA0J,OAAA,GAAArT,2DAAA;MAAA,OAASA,yDAAA,CAAAqT,OAAA,CAAA4I,aAAA,CAAAJ,WAAA,CAAsB;IAAA,EAAC;IAEhC7b,4DAAA,cAA0B;IACEA,oDAAA,GAAkB;IAAAA,0DAAA,EAAM;IAClDA,4DAAA,cAA6B;IACTA,oDAAA,GAAsB;IAAAA,0DAAA,EAAO;IAC/CA,4DAAA,eAAkB;IAAAA,oDAAA,GAAsB;IAAAA,0DAAA,EAAO;IAC/CA,4DAAA,eAAkB;IAAAA,oDAAA,IAAkD;;IAAAA,0DAAA,EAAO;IAC3EA,4DAAA,gBAAkB;IAAAA,oDAAA,IAAsB;IAAAA,0DAAA,EAAO;IAEjDA,4DAAA,eAA+B;IACNA,oDAAA,IAAgC;IAAAA,0DAAA,EAAO;IAC9DA,4DAAA,gBAAmB;IAAAA,oDAAA,IAAwB;IAAAA,0DAAA,EAAO;IAClDA,4DAAA,gBAA0B;IAAAA,oDAAA,IAA8B;IAAAA,0DAAA,EAAO;IAC/DA,4DAAA,gBAA0B;IAAAA,oDAAA,IAAiC;IAAAA,0DAAA,EAAO;IAEpEA,4DAAA,eAA0B;IACDA,oDAAA,IAAuD;;IAAAA,0DAAA,EAAO;IACrFA,4DAAA,gBAA2B;IAAAA,oDAAA,IAAsD;;IAAAA,0DAAA,EAAO;IACxFA,wDAAA,KAAAkc,uDAAA,mBAAkI;IACpIlc,0DAAA,EAAM;IAERA,4DAAA,eAA8B;IAAAA,oDAAA,cAAC;IAAAA,0DAAA,EAAM;;;;IAnBTA,uDAAA,GAAkB;IAAlBA,+DAAA,CAAA6b,WAAA,CAAAtD,IAAA,CAAkB;IAExBvY,uDAAA,GAAsB;IAAtBA,gEAAA,UAAA6b,WAAA,CAAAM,GAAA,KAAsB;IACtBnc,uDAAA,GAAsB;IAAtBA,gEAAA,UAAA6b,WAAA,CAAAO,GAAA,KAAsB;IACtBpc,uDAAA,GAAkD;IAAlDA,gEAAA,UAAAA,yDAAA,SAAA6b,WAAA,CAAAQ,WAAA,oBAAkD;IAClDrc,uDAAA,GAAsB;IAAtBA,gEAAA,UAAA6b,WAAA,CAAAS,GAAA,KAAsB;IAGjBtc,uDAAA,GAAgC;IAAhCA,gEAAA,eAAA6b,WAAA,CAAAU,QAAA,KAAgC;IACpCvc,uDAAA,GAAwB;IAAxBA,gEAAA,WAAA6b,WAAA,CAAAW,IAAA,KAAwB;IACjBxc,uDAAA,GAA8B;IAA9BA,gEAAA,WAAA6b,WAAA,CAAAY,UAAA,KAA8B;IAC9Bzc,uDAAA,GAAiC;IAAjCA,gEAAA,cAAA6b,WAAA,CAAAa,UAAA,KAAiC;IAGpC1c,uDAAA,GAAuD;IAAvDA,gEAAA,mBAAAA,yDAAA,SAAA6b,WAAA,CAAAc,OAAA,oBAAuD;IACnD3c,uDAAA,GAAsD;IAAtDA,gEAAA,cAAAA,yDAAA,SAAA6b,WAAA,CAAAe,WAAA,oBAAsD;IACnD5c,uDAAA,GAAqC;IAArCA,wDAAA,SAAA6b,WAAA,CAAAC,SAAA,CAAAe,OAAA,OAAqC;;;;;IAzB7E7c,4DAAA,cAAoG;IAC9FA,oDAAA,uBAAgB;IAAAA,0DAAA,EAAK;IACzBA,4DAAA,cAA0B;IACxBA,wDAAA,IAAA8c,+CAAA,oBA0BM;IACR9c,0DAAA,EAAM;;;;IA1BkBA,uDAAA,GAAuB;IAAvBA,wDAAA,YAAAwI,MAAA,CAAAuU,oBAAA,CAAuB;;;;;IAgG7C/c,4DAAA,cAAmE;IAC1DA,oDAAA,sBAAe;IAAAA,0DAAA,EAAQ;IAC9BA,4DAAA,WAAM;IAAAA,oDAAA,GAA+C;;IAAAA,0DAAA,EAAO;;;;IAAtDA,uDAAA,GAA+C;IAA/CA,+DAAA,CAAAA,yDAAA,OAAA4K,OAAA,CAAA9J,WAAA,CAAAgb,SAAA,gBAA+C;;;;;IAMvD9b,4DAAA,cAAkE;IACzDA,oDAAA,cAAO;IAAAA,0DAAA,EAAQ;IACtBA,4DAAA,eAA2B;IAAAA,oDAAA,0CAAmC;IAAAA,0DAAA,EAAO;;;;;;IA7E3EA,4DAAA,cAA8C;IAEtCA,oDAAA,0BAAmB;IAAAA,0DAAA,EAAK;IAC5BA,4DAAA,cAA4B;IAIxBA,wDAAA,mBAAAgd,kEAAA;MAAAhd,2DAAA,CAAAid,IAAA;MAAA,MAAAC,OAAA,GAAAld,2DAAA;MAAA,OAASA,yDAAA,CAAAkd,OAAA,CAAAC,SAAA,EAAW;IAAA,EAAC;IAGrBnd,4DAAA,WAAM;IAAAA,oDAAA,mBAAE;IAAAA,0DAAA,EAAO;IAACA,oDAAA,mBAClB;IAAAA,0DAAA,EAAS;IACTA,4DAAA,iBAKC;IAFCA,wDAAA,mBAAAod,kEAAA;MAAApd,2DAAA,CAAAid,IAAA;MAAA,MAAAI,OAAA,GAAArd,2DAAA;MAAA,OAASA,yDAAA,CAAAqd,OAAA,CAAAC,qBAAA,EAAuB;IAAA,EAAC;IAGjCtd,4DAAA,YAAM;IAAAA,oDAAA,oBAAE;IAAAA,0DAAA,EAAO;IAACA,oDAAA,oBAClB;IAAAA,0DAAA,EAAS;IAGbA,4DAAA,eAAuB;IAEZA,oDAAA,YAAI;IAAAA,0DAAA,EAAQ;IACnBA,4DAAA,YAAM;IAAAA,oDAAA,IAAqB;IAAAA,0DAAA,EAAO;IAEpCA,4DAAA,eAAuB;IACdA,oDAAA,aAAK;IAAAA,0DAAA,EAAQ;IACpBA,4DAAA,YAAM;IAAAA,oDAAA,IAAsB;IAAAA,0DAAA,EAAO;IAErCA,4DAAA,eAAuB;IACdA,oDAAA,YAAI;IAAAA,0DAAA,EAAQ;IACnBA,4DAAA,YAAM;IAAAA,oDAAA,IAAqB;IAAAA,0DAAA,EAAO;IAEpCA,4DAAA,eAAuB;IACdA,oDAAA,sBAAc;IAAAA,0DAAA,EAAQ;IAC7BA,4DAAA,YAAM;IAAAA,oDAAA,IAAiD;;IAAAA,0DAAA,EAAO;IAEhEA,4DAAA,eAAuB;IACdA,oDAAA,YAAI;IAAAA,0DAAA,EAAQ;IACnBA,4DAAA,YAAM;IAAAA,oDAAA,IAAqB;IAAAA,0DAAA,EAAO;IAEpCA,4DAAA,eAAuB;IACdA,oDAAA,iBAAS;IAAAA,0DAAA,EAAQ;IACxBA,4DAAA,YAAM;IAAAA,oDAAA,IAA0B;IAAAA,0DAAA,EAAO;IAEzCA,4DAAA,eAAuB;IACdA,oDAAA,aAAK;IAAAA,0DAAA,EAAQ;IACpBA,4DAAA,YAAM;IAAAA,oDAAA,IAAsB;IAAAA,0DAAA,EAAO;IAErCA,4DAAA,eAAuB;IACdA,oDAAA,uBAAe;IAAAA,0DAAA,EAAQ;IAC9BA,4DAAA,YAAM;IAAAA,oDAAA,IAA4B;IAAAA,0DAAA,EAAO;IAE3CA,4DAAA,eAAuB;IACdA,oDAAA,wBAAgB;IAAAA,0DAAA,EAAQ;IAC/BA,4DAAA,YAAM;IAAAA,oDAAA,IAA4B;IAAAA,0DAAA,EAAO;IAE3CA,4DAAA,eAAuB;IACdA,oDAAA,0BAAkB;IAAAA,0DAAA,EAAQ;IACjCA,4DAAA,YAAM;IAAAA,oDAAA,IAA6C;;IAAAA,0DAAA,EAAO;IAE5DA,4DAAA,eAAuB;IACdA,oDAAA,qBAAa;IAAAA,0DAAA,EAAQ;IAC5BA,4DAAA,YAAM;IAAAA,oDAAA,IAAiD;;IAAAA,0DAAA,EAAO;IAEhEA,wDAAA,KAAAud,gDAAA,kBAGM;IACNvd,4DAAA,eAAuB;IACdA,oDAAA,wBAAgB;IAAAA,0DAAA,EAAQ;IAC/BA,4DAAA,YAAM;IAAAA,oDAAA,IAAsG;IAAAA,0DAAA,EAAO;IAErHA,wDAAA,KAAAwd,gDAAA,kBAGM;IACRxd,0DAAA,EAAM;;;;IAtDIA,uDAAA,IAAqB;IAArBA,+DAAA,CAAAmN,MAAA,CAAArM,WAAA,CAAAqb,GAAA,CAAqB;IAIrBnc,uDAAA,GAAsB;IAAtBA,+DAAA,CAAAmN,MAAA,CAAArM,WAAA,CAAAyX,IAAA,CAAsB;IAItBvY,uDAAA,GAAqB;IAArBA,+DAAA,CAAAmN,MAAA,CAAArM,WAAA,CAAAsb,GAAA,CAAqB;IAIrBpc,uDAAA,GAAiD;IAAjDA,+DAAA,CAAAA,yDAAA,SAAAmN,MAAA,CAAArM,WAAA,CAAAub,WAAA,gBAAiD;IAIjDrc,uDAAA,GAAqB;IAArBA,+DAAA,CAAAmN,MAAA,CAAArM,WAAA,CAAAwb,GAAA,CAAqB;IAIrBtc,uDAAA,GAA0B;IAA1BA,+DAAA,CAAAmN,MAAA,CAAArM,WAAA,CAAAyb,QAAA,CAA0B;IAI1Bvc,uDAAA,GAAsB;IAAtBA,+DAAA,CAAAmN,MAAA,CAAArM,WAAA,CAAA0b,IAAA,CAAsB;IAItBxc,uDAAA,GAA4B;IAA5BA,+DAAA,CAAAmN,MAAA,CAAArM,WAAA,CAAA2b,UAAA,CAA4B;IAI5Bzc,uDAAA,GAA4B;IAA5BA,+DAAA,CAAAmN,MAAA,CAAArM,WAAA,CAAA4b,UAAA,CAA4B;IAI5B1c,uDAAA,GAA6C;IAA7CA,+DAAA,CAAAA,yDAAA,SAAAmN,MAAA,CAAArM,WAAA,CAAA6b,OAAA,gBAA6C;IAI7C3c,uDAAA,GAAiD;IAAjDA,+DAAA,CAAAA,yDAAA,SAAAmN,MAAA,CAAArM,WAAA,CAAA8b,WAAA,gBAAiD;IAEjC5c,uDAAA,GAAyC;IAAzCA,wDAAA,SAAAmN,MAAA,CAAArM,WAAA,CAAAgb,SAAA,CAAAe,OAAA,OAAyC;IAMzD7c,uDAAA,GAAsG;IAAtGA,gEAAA,KAAAmN,MAAA,CAAArM,WAAA,CAAA2D,SAAA,CAAA4E,MAAA,OAAA8D,MAAA,CAAArM,WAAA,CAAA2D,SAAA,CAAA4E,MAAA,sCAAsG;IAEtFrJ,uDAAA,GAAwC;IAAxCA,wDAAA,SAAAmN,MAAA,CAAArM,WAAA,CAAA2D,SAAA,CAAA4E,MAAA,OAAwC;;;AD5JtE,MAKazD,yBAAyB;EAWpCtF,YACUod,EAAe,EACfjd,eAAuC,EACvCkd,mBAAwC;IAFxC,KAAAD,EAAE,GAAFA,EAAE;IACF,KAAAjd,eAAe,GAAfA,eAAe;IACf,KAAAkd,mBAAmB,GAAnBA,mBAAmB;IAbpB,KAAAhd,YAAY,GAAG,KAAK;IACnB,KAAAid,eAAe,GAAG,IAAIxV,uDAAY,EAAe;IAG3D,KAAA1H,OAAO,GAAG,KAAK;IACf,KAAAI,WAAW,GAAuB,IAAI;IACtC,KAAAic,oBAAoB,GAA0B,EAAE;IAChD,KAAAc,oBAAoB,GAAG,KAAK;IAC5B,KAAAjC,YAAY,GAAG,EAAE;IAOf,IAAI,CAACJ,WAAW,GAAG,IAAI,CAACkC,EAAE,CAACI,KAAK,CAAC;MAC/B3B,GAAG,EAAE,CAAC,EAAE,EAAE,CAACf,sDAAU,CAAC2C,QAAQ,EAAE3C,sDAAU,CAAC4C,SAAS,CAAC,CAAC,CAAC,CAAC;KACzD,CAAC;EACJ;EAEAjd,QAAQA,CAAA,GACR;EAEA;;;EAGAkd,QAAQA,CAAA;IACN,IAAI,IAAI,CAACzC,WAAW,CAAC0C,KAAK,EAAE;MAC1B,IAAI,CAACxd,OAAO,GAAG,IAAI;MACnB,IAAI,CAACkb,YAAY,GAAG,EAAE;MACtB,IAAI,CAAC9a,WAAW,GAAG,IAAI;MACvB,IAAI,CAAC+c,oBAAoB,GAAG,KAAK;MAEjC,MAAM1B,GAAG,GAAG,IAAI,CAACX,WAAW,CAACC,GAAG,CAAC,KAAK,CAAC,EAAE0C,KAAK;MAE9C,IAAI,CAAC1d,eAAe,CAAC2d,cAAc,CAACjC,GAAG,CAAC,CAAClb,SAAS,CAAC;QACjDoB,IAAI,EAAGgc,QAA+B,IAAI;UACxC,IAAI,CAACtB,oBAAoB,GAAGsB,QAAQ;UACpC,IAAI,CAACR,oBAAoB,GAAGQ,QAAQ,CAAChV,MAAM,GAAG,CAAC;UAC/C,IAAI,CAAC3I,OAAO,GAAG,KAAK;UAEpB,IAAI2d,QAAQ,CAAChV,MAAM,KAAK,CAAC,EAAE;YACzB,IAAI,CAACuS,YAAY,GAAG,0CAA0C;;QAElE,CAAC;QACDtZ,KAAK,EAAGA,KAAK,IAAI;UACf,IAAI,CAACsZ,YAAY,GAAG,iDAAiD;UACrE,IAAI,CAAClb,OAAO,GAAG,KAAK;UACpBuB,OAAO,CAACK,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;QACvD;OACD,CAAC;;EAEN;EAEA;;;;EAIA2Z,aAAaA,CAACqC,OAA4B;IACxC,IAAI,CAAC5d,OAAO,GAAG,IAAI;IACnB,IAAI,CAACkb,YAAY,GAAG,EAAE;IACtB,IAAI,CAACiC,oBAAoB,GAAG,KAAK;IAEjC,IAAI,CAACpd,eAAe,CAAC8d,mBAAmB,CAACD,OAAO,CAACjd,QAAQ,CAAC,CAACJ,SAAS,CAAC;MACnEoB,IAAI,EAAGvB,WAAwB,IAAI;QACjC,IAAI,CAACA,WAAW,GAAGA,WAAW;QAC9B,IAAI,CAACJ,OAAO,GAAG,KAAK;QACpB;QACA,IAAI,CAACkd,eAAe,CAAClS,IAAI,CAAC5K,WAAW,CAAC;MACxC,CAAC;MACDwB,KAAK,EAAGA,KAAK,IAAI;QACf,IAAI,CAACsZ,YAAY,GAAG,uDAAuD;QAC3E,IAAI,CAAClb,OAAO,GAAG,KAAK;QACpBuB,OAAO,CAACK,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MAC3D;KACD,CAAC;EACJ;EAEA;;;EAGAkc,SAASA,CAAA;IACP,IAAI,CAAChD,WAAW,CAACiD,KAAK,EAAE;IACxB,IAAI,CAAC3d,WAAW,GAAG,IAAI;IACvB,IAAI,CAACic,oBAAoB,GAAG,EAAE;IAC9B,IAAI,CAACc,oBAAoB,GAAG,KAAK;IACjC,IAAI,CAACjC,YAAY,GAAG,EAAE;EACxB;EAEA;;;EAGAuB,SAASA,CAAA;IACP,IAAI,IAAI,CAACrc,WAAW,EAAE;MACpB,IAAI,CAAC6c,mBAAmB,CAACR,SAAS,CAAC,IAAI,CAACrc,WAAW,CAACK,QAAQ,EAAE,IAAI,CAACL,WAAW,CAACO,QAAQ,CAAC;;EAE5F;EAEA;;;EAGAic,qBAAqBA,CAAA;IACnB,IAAI,IAAI,CAACxc,WAAW,EAAE;MACpB,IAAI,CAAC6c,mBAAmB,CAACL,qBAAqB,CAAC,IAAI,CAACxc,WAAW,CAACK,QAAQ,EAAE,IAAI,CAACL,WAAW,CAACO,QAAQ,CAAC;;EAExG;EAAC,QAAA9B,CAAA;qBA1GUqG,yBAAyB,EAAA5F,+DAAA,CAAAH,uDAAA,GAAAG,+DAAA,CAAAqD,sFAAA,GAAArD,+DAAA,CAAAuD,gFAAA;EAAA;EAAA,QAAA/D,EAAA;UAAzBoG,yBAAyB;IAAAnC,SAAA;IAAAuI,MAAA;MAAArL,YAAA;IAAA;IAAAsL,OAAA;MAAA2R,eAAA;IAAA;IAAA7V,KAAA;IAAAC,IAAA;IAAAkE,MAAA;IAAAjE,QAAA,WAAA2W,mCAAAhb,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCVtC5D,4DAAA,aAAyC;QAEjCA,oDAAA,8BAAuB;QAAAA,0DAAA,EAAK;QAEhCA,wDAAA,IAAA6e,wCAAA,iBAEM;QAEN7e,4DAAA,cAA8G;QAA9EA,wDAAA,sBAAA8e,4DAAA;UAAA,OAAYjb,GAAA,CAAAoa,QAAA,EAAU;QAAA,EAAC;QACrDje,4DAAA,aAAwB;QACLA,oDAAA,oDAA6C;QAAAA,0DAAA,EAAQ;QACtEA,uDAAA,eAQE;QACFA,wDAAA,KAAA+e,yCAAA,iBAGM;QACR/e,0DAAA,EAAM;QAENA,4DAAA,cAA0B;QAMtBA,wDAAA,KAAAgf,0CAAA,mBAAyC;QACzChf,wDAAA,KAAAif,0CAAA,mBAA6C;QAC/Cjf,0DAAA,EAAS;QAETA,4DAAA,kBAKC;QAFCA,wDAAA,mBAAAkf,4DAAA;UAAA,OAASrb,GAAA,CAAA2a,SAAA,EAAW;QAAA,EAAC;QAGrBxe,oDAAA,eACF;QAAAA,0DAAA,EAAS;QAIbA,wDAAA,KAAAmf,yCAAA,iBAEM;QACRnf,0DAAA,EAAM;QAGNA,wDAAA,KAAAof,yCAAA,kBA+BM;QAENpf,wDAAA,KAAAqf,yCAAA,oBAgFM;QACRrf,0DAAA,EAAM;;;;;QAnK0BA,uDAAA,GAAmB;QAAnBA,wDAAA,UAAA6D,GAAA,CAAAlD,YAAA,CAAmB;QAI8BX,uDAAA,GAAgC;QAAhCA,yDAAA,cAAA6D,GAAA,CAAAlD,YAAA,CAAgC;QAAvGX,wDAAA,cAAA6D,GAAA,CAAA2X,WAAA,CAAyB;QASzBxb,uDAAA,GAAkF;QAAlFA,yDAAA,YAAAsf,OAAA,GAAAzb,GAAA,CAAA2X,WAAA,CAAAC,GAAA,0BAAA6D,OAAA,CAAAC,OAAA,OAAAD,OAAA,GAAAzb,GAAA,CAAA2X,WAAA,CAAAC,GAAA,0BAAA6D,OAAA,CAAAE,OAAA,EAAkF;QAClFxf,wDAAA,cAAA6D,GAAA,CAAAlD,YAAA,CAA0B;QAEAX,uDAAA,GAAwE;QAAxEA,wDAAA,WAAAyf,OAAA,GAAA5b,GAAA,CAAA2X,WAAA,CAAAC,GAAA,0BAAAgE,OAAA,CAAAF,OAAA,OAAAE,OAAA,GAAA5b,GAAA,CAAA2X,WAAA,CAAAC,GAAA,0BAAAgE,OAAA,CAAAD,OAAA,EAAwE;QAUlGxf,uDAAA,GAA4D;QAA5DA,wDAAA,aAAA6D,GAAA,CAAA2X,WAAA,CAAA+D,OAAA,IAAA1b,GAAA,CAAAnD,OAAA,KAAAmD,GAAA,CAAAlD,YAAA,CAA4D;QAErDX,uDAAA,GAAa;QAAbA,wDAAA,SAAA6D,GAAA,CAAAnD,OAAA,CAAa;QACbV,uDAAA,GAAc;QAAdA,wDAAA,UAAA6D,GAAA,CAAAnD,OAAA,CAAc;QAOrBV,uDAAA,GAAoB;QAApBA,wDAAA,aAAA6D,GAAA,CAAAnD,OAAA,CAAoB;QAOEV,uDAAA,GAAkB;QAAlBA,wDAAA,SAAA6D,GAAA,CAAA+X,YAAA,CAAkB;QAMX5b,uDAAA,GAA6D;QAA7DA,wDAAA,SAAA6D,GAAA,CAAAga,oBAAA,IAAAha,GAAA,CAAAkZ,oBAAA,CAAA1T,MAAA,KAA6D;QAiCvErJ,uDAAA,GAAiB;QAAjBA,wDAAA,SAAA6D,GAAA,CAAA/C,WAAA,CAAiB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnF9C,MAGa6d,mBAAmB;EAE9Bre,YAAoBE,KAAmB;IAAnB,KAAAA,KAAK,GAALA,KAAK;EAAkB;EAE3C;;;;;EAKA2c,SAASA,CAAChc,QAAgB,EAAEE,QAAiB;IAC3C,MAAMqe,EAAE,GAAGvU,QAAQ,CAACwU,cAAc,CAAC,SAAS,CAAC;IAE7C,IAAI,CAACD,EAAE,EAAE;MACPzd,OAAO,CAAC8J,IAAI,CAAC,qCAAqC,CAAC;MACnD;;IAGF,IAAI5K,QAAQ,KAAKye,SAAS,IAAIve,QAAQ,KAAKue,SAAS,EAAE;MACpD;MACAF,EAAE,CAAC1I,IAAI,GAAG,mDAAmD,GAAG7V,QAAQ,GAAG,aAAa,GAAGE,QAAQ,GAAG,IAAI;KAC3G,MAAM,IAAIF,QAAQ,KAAKye,SAAS,EAAE;MACjC;MACAF,EAAE,CAAC1I,IAAI,GAAG,mDAAmD,GAAG7V,QAAQ,GAAG,IAAI;KAChF,MAAM;MACLc,OAAO,CAAC8J,IAAI,CAAC,2CAA2C,CAAC;MACzD;;IAGF;IACA2T,EAAE,CAACnI,KAAK,EAAE;EACZ;EAEA;;;;;EAKA+F,qBAAqBA,CAACnc,QAAgB,EAAEE,QAAiB;IACvD,MAAMqe,EAAE,GAAGvU,QAAQ,CAACwU,cAAc,CAAC,SAAS,CAAC;IAE7C,IAAI,CAACD,EAAE,EAAE;MACPzd,OAAO,CAAC8J,IAAI,CAAC,qCAAqC,CAAC;MACnD;;IAGF,IAAI5K,QAAQ,KAAKye,SAAS,IAAIve,QAAQ,KAAKue,SAAS,EAAE;MACpD;MACAF,EAAE,CAAC1I,IAAI,GAAG,6DAA6D,GAAG7V,QAAQ,GAAG,aAAa,GAAGE,QAAQ,GAAG,IAAI;KACrH,MAAM,IAAIF,QAAQ,KAAKye,SAAS,EAAE;MACjC;MACAF,EAAE,CAAC1I,IAAI,GAAG,6DAA6D,GAAG7V,QAAQ,GAAG,IAAI;KAC1F,MAAM;MACLc,OAAO,CAAC8J,IAAI,CAAC,yDAAyD,CAAC;MACvE;;IAGF;IACA2T,EAAE,CAACnI,KAAK,EAAE;EACZ;EAEA;;;;;EAKMsI,YAAYA,CAACC,MAAc,EAAEC,IAAS;IAAA,IAAAne,KAAA;IAAA,OAAAC,sJAAA;MAC1C;MACA,MAAM6d,EAAE,GAAGvU,QAAQ,CAACwU,cAAc,CAAC,SAAS,CAAC;MAC7C,IAAII,IAAI,CAAC1e,QAAQ,IAAI0e,IAAI,CAAC5e,QAAQ,IAAI4e,IAAI,CAACC,OAAO,EAAE;QAClD,QAAQF,MAAM;UACZ,KAAK,WAAW;YACdle,KAAI,CAACub,SAAS,CAAC4C,IAAI,CAAC5e,QAAQ,EAAE4e,IAAI,CAAC1e,QAAQ,CAAC;YAC5C;UACF,KAAK,WAAW;YACd,IAAI;cACF,MAAMO,KAAI,CAACqe,cAAc,CAACF,IAAI,CAAC;aAChC,CAAC,OAAOzd,KAAK,EAAE;cACdV,KAAI,CAACpB,KAAK,CAAC0f,MAAM,CAAC,mBAAmB,GAAG5d,KAAK,CAAC;;YAEhD;UACF,KAAK,WAAW;YACd,IAAI;cACF,MAAMV,KAAI,CAACue,oBAAoB,CAACJ,IAAI,EAAE,WAAW,CAAC;aACnD,CAAC,OAAOzd,KAAK,EAAE;cACdV,KAAI,CAACpB,KAAK,CAAC0f,MAAM,CAAC,mBAAmB,GAAG5d,KAAK,CAAC;;YAEhD;UACF,KAAK,cAAc;YACjB,IAAI;cACF,MAAMV,KAAI,CAACue,oBAAoB,CAACJ,IAAI,EAAE,cAAc,CAAC;aACtD,CAAC,OAAOzd,KAAK,EAAE;cACdV,KAAI,CAACpB,KAAK,CAAC0f,MAAM,CAAC,sBAAsB,GAAG5d,KAAK,CAAC;;YAEnD;UACF,KAAK,cAAc;YACjB,IAAI;cACF,MAAMV,KAAI,CAACwe,gBAAgB,CAACL,IAAI,CAAC;aAClC,CAAC,OAAOzd,KAAK,EAAE;cACdV,KAAI,CAACpB,KAAK,CAAC0f,MAAM,CAAC,sBAAsB,GAAG5d,KAAK,CAAC;;YAEnD;UACF;YACEqT,KAAK,CAAC,aAAa,GAAGmK,MAAM,GAAG,wBAAwB,CAAC;YACxD;;OAEL,MAAM;QACL;QACA,QAAQA,MAAM;UACZ,KAAK,KAAK;YACR;YACAJ,EAAE,CAAC1I,IAAI,GAAG,0BAA0B,GAAG+I,IAAI,GAAG,SAAS;YACvD;YACAL,EAAE,CAACnI,KAAK,EAAE;YACV;UACF;YACE5B,KAAK,CAAC,aAAa,GAAGmK,MAAM,GAAG,wBAAwB,CAAC;YACxD;;;IAEL;EACH;EAEA;;;;EAIcG,cAAcA,CAACF,IAAS;IAAA,IAAAnK,MAAA;IAAA,OAAA/T,sJAAA;MACpC,IAAI;QACF,IAAI,CAACke,IAAI,CAACC,OAAO,EAAE;UACjB,MAAM,IAAItI,KAAK,CAAC,0CAA0C,CAAC;;QAG7D,MAAM2I,eAAe,SAAU9d,MAAc,CAAC+d,QAAQ,CAACC,oBAAoB,CAAC,eAAe,CAAC;QAC5F,MAAMF,eAAe,CAACG,qBAAqB,CAACT,IAAI,CAACC,OAAO,EAAE,CAAC,CAAC;OAE7D,CAAC,OAAO1d,KAAK,EAAE;QACdsT,MAAI,CAACpV,KAAK,CAAC0f,MAAM,CAAC,oBAAoB,GAAG5d,KAAK,CAAC;QAC/C,MAAMA,KAAK;;IACZ;EACH;EAEA;;;;;EAKc6d,oBAAoBA,CAACJ,IAAS,EAAEU,UAAwC;IAAA,IAAAtH,MAAA;IAAA,OAAAtX,sJAAA;MACpF,IAAI;QACF,MAAM6e,OAAO,GAAGC,UAAU,CAACZ,IAAI,CAACa,UAAU,CAAC;QAC3C,MAAMC,UAAU,GAAGF,UAAU,CAACZ,IAAI,CAACc,UAAU,CAAC;QAE9C,IAAI,EAAEH,OAAO,GAAG,CAAC,CAAC,EAAE;UAClB,MAAM,IAAIhJ,KAAK,CAAC,6CAA6C,GAAG+I,UAAU,CAAC;;QAG7E,MAAMK,iBAAiB,SAAUve,MAAc,CAAC+d,QAAQ,CAACC,oBAAoB,CAAC,sBAAsB,CAAC;QACrG,IAAIE,UAAU,KAAK,WAAW,EAAE;UAC9BK,iBAAiB,CAACC,QAAQ,CAACL,OAAO,EAAEG,UAAU,CAAC;UAC/C1H,MAAI,CAAC3Y,KAAK,CAAC0f,MAAM,CAAC,yCAAyC,GAAGQ,OAAO,GAAG,eAAe,GAAGG,UAAU,CAAC;SACtG,MAAM,IAAIJ,UAAU,KAAK,cAAc,EAAE;UACxCK,iBAAiB,CAACE,eAAe,CAACN,OAAO,EAAEG,UAAU,CAAC;UACtD1H,MAAI,CAAC3Y,KAAK,CAAC0f,MAAM,CAAC,mDAAmD,GAAGQ,OAAO,GAAG,eAAe,GAAGG,UAAU,CAAC;;OAElH,CAAC,OAAOve,KAAK,EAAE;QACd6W,MAAI,CAAC3Y,KAAK,CAAC0f,MAAM,CAACO,UAAU,GAAG,WAAW,GAAGne,KAAK,CAAC;QACnD,MAAMA,KAAK;;IACZ;EACH;EAEA;;;;EAIc8d,gBAAgBA,CAACL,IAAS;IAAA,IAAAkB,MAAA;IAAA,OAAApf,sJAAA;MACtC,IAAI;QACF,IAAI,CAACke,IAAI,CAACC,OAAO,EAAE;UACjB,MAAM,IAAItI,KAAK,CAAC,6CAA6C,CAAC;;QAEhE,IAAI,CAACqI,IAAI,CAAC5e,QAAQ,EAAE;UAClB,MAAM,IAAIuW,KAAK,CAAC,8CAA8C,CAAC;;QAGjE,MAAMvW,QAAQ,GAAG4e,IAAI,CAAC5e,QAAQ;QAC9B,MAAME,QAAQ,GAAG0e,IAAI,CAAC1e,QAAQ;QAC9B,MAAM2e,OAAO,GAAGD,IAAI,CAACC,OAAO;QAE5B,MAAMkB,QAAQ,GAAG,WAAWlB,OAAO,GAAG;QACtC,MAAMmB,cAAc,GAAGpB,IAAI,CAACqB,gBAAgB,GAAG,EAAE,GAAG,CAAC;QACrD,MAAMC,MAAM,GAAG,gBAAgB;QAC/B,MAAMC,cAAc,GAAGvB,IAAI,CAACuB,cAAc,IAAI,EAAE;QAChD,MAAMC,cAAc,GAAGxB,IAAI,CAACyB,UAAU,GAAG,CAAC,GAAG,CAAC;QAE9C,MAAMC,UAAU,GAAG,GAAGtgB,QAAQ,IAAIE,QAAQ,IAAI6f,QAAQ,IAAIC,cAAc,IAAIE,MAAM,IAAIC,cAAc,IAAIC,cAAc,EAAE;QACxH,MAAMG,eAAe,GAAG,0BAA0BD,UAAU,IAAI;QAEhER,MAAI,CAACzgB,KAAK,CAAC0f,MAAM,CAAC,wDAAwD,GAAGuB,UAAU,CAAC;QAExF,MAAM/B,EAAE,GAAGvU,QAAQ,CAACwU,cAAc,CAAC,SAAS,CAAC;QAC7C,IAAID,EAAE,EAAE;UACN;UACAA,EAAE,CAAC1I,IAAI,GAAG,aAAa,GAAG0K,eAAe;UACzC;UACAhC,EAAE,CAACnI,KAAK,EAAE;SACX,MAAM;UACL,MAAM,IAAIG,KAAK,CAAC,qCAAqC,CAAC;;QAGxDuJ,MAAI,CAACzgB,KAAK,CAAC0f,MAAM,CAAC,kDAAkD,CAAC;OAEtE,CAAC,OAAO5d,KAAK,EAAE;QACd2e,MAAI,CAACzgB,KAAK,CAAC0f,MAAM,CAAC,uBAAuB,GAAG5d,KAAK,CAAC;QAClD,MAAMA,KAAK;;IACZ;EACH;EAAC,QAAA/C,CAAA;qBApNUof,mBAAmB,EAAA3e,sDAAA,CAAAH,oFAAA;EAAA;EAAA,QAAAL,EAAA;WAAnBmf,mBAAmB;IAAAiD,OAAA,EAAnBjD,mBAAmB,CAAAkD,IAAA;IAAAC,UAAA,EAFlB;EAAM;;;;;;;;;;;;;;;;;;;;;ACHwB;;;AAmI5C,MAGate,sBAAsB;EAIjClD,YAAoB0hB,aAA4B;IAA5B,KAAAA,aAAa,GAAbA,aAAa;IAFzB,KAAAphB,UAAU,GAAsB,IAAI;EAEQ;EAEpD;;;;EAIAwB,aAAaA,CAAA;IACXH,OAAO,CAACC,GAAG,CAAC,6EAA6E,CAAC;IAC1F,OAAO,IAAI6f,4CAAU,CAAaE,QAAQ,IAAG;MAC3C,IAAI,CAACD,aAAa,CAACE,IAAI,CACrB;QACEC,YAAY,EAAE;UACZC,MAAM,EAAE,CACN;YACE7J,IAAI,EAAE,0BAA0B;YAChC8J,GAAG,EAAE,KAAK;YACV9W,EAAE,EAAE,YAAY;YAChBkW,UAAU,EAAE;cACVa,WAAW,EAAE,eAAe;cAC5BC,WAAW,EAAE;;WAEhB,CACF;UACDC,kBAAkB,EAAE;;OAEvB,EACD,CAAC;QAAErhB,QAAQ,EAAE,CAAC;QAAEE,QAAQ,EAAE;MAAC,CAAE,CAAC,EAC9B,MAAK;QACH,IAAI;UACFY,OAAO,CAACC,GAAG,CAAC,oFAAoF,CAAC;UACjG,MAAMugB,GAAG,GAAG,IAAI,CAACT,aAAa,CAACvG,GAAG,CAAC,YAAY,CAAC;UAEhD,IAAI,CAACgH,GAAG,EAAE;YACRxgB,OAAO,CAACK,KAAK,CAAC,2EAA2E,CAAC;YAC1F2f,QAAQ,CAAC3f,KAAK,CAAC,gCAAgC,CAAC;YAChD;;UAGFL,OAAO,CAACC,GAAG,CAAC,yEAAyE,EAAEugB,GAAG,CAAC;UAC3F,IAAI,CAAC7hB,UAAU,GAAG6hB,GAAG;UACrBR,QAAQ,CAAC5f,IAAI,CAACogB,GAAG,CAAC;UAClBR,QAAQ,CAACS,QAAQ,EAAE;SACpB,CAAC,OAAOpgB,KAAK,EAAE;UACdL,OAAO,CAACK,KAAK,CAAC,mDAAmD,EAAEA,KAAK,CAAC;UACzE2f,QAAQ,CAAC3f,KAAK,CAACA,KAAK,CAAC;;MAEzB,CAAC,CACF;IACH,CAAC,CAAC;EACJ;EAEA;;;;;EAKA8b,cAAcA,CAACjC,GAAW;IACxBla,OAAO,CAACC,GAAG,CAAC,8EAA8E,EAAEia,GAAG,CAAC;IAChG,OAAO,IAAI4F,4CAAU,CAAwBE,QAAQ,IAAG;MACtD,IAAI,CAACD,aAAa,CAACE,IAAI,CACrB;QACEC,YAAY,EAAE;UACZC,MAAM,EAAE,CACN;YACE7J,IAAI,EAAE,0BAA0B;YAChC8J,GAAG,EAAE,KAAK;YACV9W,EAAE,EAAE,eAAe;YACnBkW,UAAU,EAAE;cACVa,WAAW,EAAE,gBAAgB;cAC7BC,WAAW,EAAEI,IAAI,CAACC,SAAS,CAAC;gBAACC,gCAAgC,EAAE;kBAAE1G,GAAG,EAAEA;gBAAG;cAAE,CAAC;;WAE/E,CACF;UACDqG,kBAAkB,EAAE;;OAEvB,EACD,CAAC;QAAErhB,QAAQ,EAAE,CAAC;QAAEE,QAAQ,EAAE;MAAC,CAAE,CAAC,EAC9B,MAAK;QACH,IAAI;UACFY,OAAO,CAACC,GAAG,CAAC,qFAAqF,CAAC;UAClG,MAAMugB,GAAG,GAAG,IAAI,CAACT,aAAa,CAACvG,GAAG,CAAC,eAAe,CAAC;UAEnD,IAAI,CAACgH,GAAG,EAAE;YACRxgB,OAAO,CAACK,KAAK,CAAC,gFAAgF,CAAC;YAC/F2f,QAAQ,CAAC3f,KAAK,CAAC,oCAAoC,CAAC;YACpD;;UAGFL,OAAO,CAACC,GAAG,CAAC,oEAAoE,EAAEugB,GAAG,CAAC;UACtF;UACA,MAAMpE,QAAQ,GAA0B,IAAI,CAACyE,yBAAyB,CAACL,GAAG,CAAC;UAC3ExgB,OAAO,CAACC,GAAG,CAAC,8DAA8D,EAAEmc,QAAQ,CAAC;UACrF4D,QAAQ,CAAC5f,IAAI,CAACgc,QAAQ,CAAC;UACvB4D,QAAQ,CAACS,QAAQ,EAAE;SACpB,CAAC,OAAOpgB,KAAK,EAAE;UACdL,OAAO,CAACK,KAAK,CAAC,oDAAoD,EAAEA,KAAK,CAAC;UAC1E2f,QAAQ,CAAC3f,KAAK,CAACA,KAAK,CAAC;;MAEzB,CAAC,CACF;IACH,CAAC,CAAC;EACJ;EAEA;;;;;EAKAic,mBAAmBA,CAACld,QAAgB;IAClCY,OAAO,CAACC,GAAG,CAAC,gGAAgG,EAAEb,QAAQ,CAAC;IACvH,OAAO,IAAI0gB,4CAAU,CAAcE,QAAQ,IAAG;MAC5C,IAAI,CAACD,aAAa,CAACE,IAAI,CACrB;QACEC,YAAY,EAAE;UACZC,MAAM,EAAE,CACN;YACE7J,IAAI,EAAE,0BAA0B;YAChC8J,GAAG,EAAE,KAAK;YACV9W,EAAE,EAAE,kBAAkB;YACtBkW,UAAU,EAAE;cACVa,WAAW,EAAE,qBAAqB;cAClCC,WAAW,EAAEI,IAAI,CAACC,SAAS,CAAC;gBAACC,gCAAgC,EAAE;kBAAExhB,QAAQ,EAAEA;gBAAQ;cAAE,CAAC;;WAEzF,CACF;UACDmhB,kBAAkB,EAAE;;OAEvB,EACD,CAAC;QAAErhB,QAAQ,EAAE,CAAC;QAAEE,QAAQ,EAAE;MAAC,CAAE,CAAC,EAC9B,MAAK;QACH,IAAI;UACFY,OAAO,CAACC,GAAG,CAAC,0FAA0F,CAAC;UACvG,MAAMugB,GAAG,GAAG,IAAI,CAACT,aAAa,CAACvG,GAAG,CAAC,kBAAkB,CAAC;UAEtD,IAAI,CAACgH,GAAG,EAAE;YACRxgB,OAAO,CAACK,KAAK,CAAC,oFAAoF,CAAC;YACnG2f,QAAQ,CAAC3f,KAAK,CAAC,mCAAmC,CAAC;YACnD;;UAGFL,OAAO,CAACC,GAAG,CAAC,yEAAyE,EAAEugB,GAAG,CAAC;UAC3F;UACA,MAAM3hB,WAAW,GAAgB,IAAI,CAACiiB,gBAAgB,CAACN,GAAG,CAAC;UAC3DxgB,OAAO,CAACC,GAAG,CAAC,uEAAuE,EAAEpB,WAAW,CAAC;UACjGmhB,QAAQ,CAAC5f,IAAI,CAACvB,WAAW,CAAC;UAC1BmhB,QAAQ,CAACS,QAAQ,EAAE;SACpB,CAAC,OAAOpgB,KAAK,EAAE;UACdL,OAAO,CAACK,KAAK,CAAC,yDAAyD,EAAEA,KAAK,CAAC;UAC/E2f,QAAQ,CAAC3f,KAAK,CAACA,KAAK,CAAC;;MAEzB,CAAC,CACF;IACH,CAAC,CAAC;EACJ;EAEA;;;;;;;EAOA0gB,iBAAiBA,CAAC7hB,QAAgB,EAAEE,QAAgB,EAAEuK,wBAAmD;IACvG3J,OAAO,CAACC,GAAG,CAAC,uEAAuE,EAAE;MACnFf,QAAQ;MACRE,QAAQ;MACR2O,YAAY,EAAEpE,wBAAwB,CAACvC,MAAM;MAC7C4G,QAAQ,EAAErE;KACX,CAAC;IACF,OAAO,IAAImW,4CAAU,CAA4BE,QAAQ,IAAG;MAC1D,IAAI,CAACD,aAAa,CAACE,IAAI,CACrB;QACEC,YAAY,EAAE;UACZC,MAAM,EAAE,CACN;YACE7J,IAAI,EAAE,0BAA0B;YAChC8J,GAAG,EAAE,KAAK;YACV9W,EAAE,EAAE,mBAAmB;YACvBkW,UAAU,EAAE;cACVa,WAAW,EAAE,mBAAmB;cAChCC,WAAW,EAAEI,IAAI,CAACC,SAAS,CAAC;gBAC1BC,gCAAgC,EAAE;kBAChC1hB,QAAQ,EAAEA,QAAQ;kBAClBE,QAAQ,EAAEA,QAAQ;kBAClB4hB,mBAAmB,EAAErX;;eAExB;;WAEJ,CACF;UACD4W,kBAAkB,EAAE;;OAEvB,EACD,CAAC;QAAErhB,QAAQ,EAAEA,QAAQ;QAAEE,QAAQ,EAAEA;MAAQ,CAAE,CAAC,EAC5C,MAAK;QACH,IAAI;UACFY,OAAO,CAACC,GAAG,CAAC,wFAAwF,CAAC;UACrG,MAAMugB,GAAG,GAAG,IAAI,CAACT,aAAa,CAACvG,GAAG,CAAC,mBAAmB,CAAC;UAEvD,IAAI,CAACgH,GAAG,EAAE;YACRxgB,OAAO,CAACK,KAAK,CAAC,kFAAkF,CAAC;YACjG2f,QAAQ,CAAC3f,KAAK,CAAC,mCAAmC,CAAC;YACnD;;UAGFL,OAAO,CAACC,GAAG,CAAC,uEAAuE,EAAEugB,GAAG,CAAC;UACzF;UACA,MAAMS,gBAAgB,GAA8B,IAAI,CAACC,qBAAqB,CAACV,GAAG,CAAC;UACnFxgB,OAAO,CAACC,GAAG,CAAC,0EAA0E,EAAEghB,gBAAgB,CAAC;UACzGjB,QAAQ,CAAC5f,IAAI,CAAC6gB,gBAAgB,CAAC;UAC/BjB,QAAQ,CAACS,QAAQ,EAAE;SACpB,CAAC,OAAOpgB,KAAK,EAAE;UACdL,OAAO,CAACK,KAAK,CAAC,uDAAuD,EAAEA,KAAK,CAAC;UAC7E2f,QAAQ,CAAC3f,KAAK,CAACA,KAAK,CAAC;;MAEzB,CAAC,CACF;IACH,CAAC,CAAC;EACJ;EAEA;;;;;;;EAOA8gB,sBAAsBA,CAACjiB,QAAgB,EAAEE,QAAgB,EAAEgiB,uBAAgD;IACzGphB,OAAO,CAACC,GAAG,CAAC,uGAAuG,EAAEmhB,uBAAuB,CAAC;IAC7I,OAAO,IAAItB,4CAAU,CAA6BE,QAAQ,IAAG;MAC3D,IAAI,CAACD,aAAa,CAACE,IAAI,CACrB;QACEC,YAAY,EAAE;UACZC,MAAM,EAAE,CACN;YACE7J,IAAI,EAAE,0BAA0B;YAChC8J,GAAG,EAAE,KAAK;YACV9W,EAAE,EAAE,0BAA0B8X,uBAAuB,CAACvX,eAAe,EAAE;YACvE2V,UAAU,EAAE;cACVa,WAAW,EAAE,wBAAwB;cACrCC,WAAW,EAAEI,IAAI,CAACC,SAAS,CAAC;gBAC1BC,gCAAgC,EAAE;kBAChC1hB,QAAQ,EAAEA,QAAQ;kBAClBE,QAAQ,EAAEA,QAAQ;kBAClBiiB,kBAAkB,EAAED,uBAAuB,CAACvX;;eAE/C;;WAEJ,CACF;UACD0W,kBAAkB,EAAE;;OAEvB,EACD,CAAC;QAAErhB,QAAQ,EAAEA,QAAQ;QAAEE,QAAQ,EAAEA;MAAQ,CAAE,CAAC,EAC5C,MAAK;QACH,IAAI;UACFY,OAAO,CAACC,GAAG,CAAC,6FAA6F,CAAC;UAC1G,MAAMugB,GAAG,GAAG,IAAI,CAACT,aAAa,CAACvG,GAAG,CAAC,0BAA0B4H,uBAAuB,CAACvX,eAAe,EAAE,CAAC;UAEvG,IAAI,CAAC2W,GAAG,EAAE;YACRxgB,OAAO,CAACK,KAAK,CAAC,2GAA2G,CAAC;YAC1H2f,QAAQ,CAAC3f,KAAK,CAAC,uDAAuD,CAAC;YACvE;;UAGFL,OAAO,CAACC,GAAG,CAAC,4EAA4E,EAAEugB,GAAG,CAAC;UAC9F,MAAMc,cAAc,GAAmB,IAAI,CAACC,mCAAmC,CAACf,GAAG,CAAC;UACpFxgB,OAAO,CAACC,GAAG,CAAC,oFAAoF,EAAEqhB,cAAc,CAAC;UAEjH,MAAMzW,QAAQ,GAAqB;YACjCwE,KAAK,EAAE,CAAC;YACRC,SAAS,EAAE,CAAC;YACZC,MAAM,EAAE,CAAC;YACTd,OAAO,EAAE2S,uBAAuB;YAChCI,OAAO,EAAE,CAACF,cAAc;WACzB;UACD,MAAM/S,UAAU,GAAG,IAAI;UACvB,MAAMC,UAAU,GAAG,CAAC8S,cAAc,CAAC;UAEnCtB,QAAQ,CAAC5f,IAAI,CAAC;YAAEyK,QAAQ;YAAE0D,UAAU;YAAEC;UAAU,CAAE,CAAC;UACnDwR,QAAQ,CAACS,QAAQ,EAAE;SACpB,CAAC,OAAOpgB,KAAK,EAAE;UACdL,OAAO,CAACK,KAAK,CAAC,4DAA4D,EAAEA,KAAK,CAAC;UAClF2f,QAAQ,CAAC3f,KAAK,CAACA,KAAK,CAAC;;MAEzB,CAAC,CACF;IACH,CAAC,CAAC;EACJ;EAEA;;;;;;;EAOA8N,6BAA6BA,CAACjP,QAAgB,EAAEE,QAAgB,EAAEuK,wBAAmD;IACnH3J,OAAO,CAACC,GAAG,CAAC,8FAA8F,EAAE;MAC1Gf,QAAQ;MACRE,QAAQ;MACR2O,YAAY,EAAEpE,wBAAwB,CAACvC,MAAM;MAC7C4G,QAAQ,EAAErE;KACX,CAAC;IAEF,OAAO,IAAImW,4CAAU,CAA6BE,QAAQ,IAAG;MAC3D,MAAM3Q,KAAK,GAAG1F,wBAAwB,CAACvC,MAAM;MAC7C,IAAIkI,SAAS,GAAG,CAAC;MACjB,IAAIC,MAAM,GAAG,CAAC;MACd,MAAMf,UAAU,GAAqB,EAAE;MACvC,IAAIiT,YAAY,GAAG,CAAC;MAEpB,MAAMC,WAAW,GAAGA,CAAA,KAAK;QACvB,IAAID,YAAY,IAAIpS,KAAK,EAAE;UACzBrP,OAAO,CAACC,GAAG,CAAC,oFAAoF,CAAC;UACjG,MAAM4K,QAAQ,GAAqB;YACjCwE,KAAK;YACLC,SAAS;YACTC,MAAM;YACNd,OAAO,EAAE,IAAI;YACb+S,OAAO,EAAEhT;WACV;UACDwR,QAAQ,CAAC5f,IAAI,CAAC;YAAEyK,QAAQ;YAAE0D,UAAU,EAAE,IAAI;YAAEC;UAAU,CAAE,CAAC;UACzDwR,QAAQ,CAACS,QAAQ,EAAE;UACnB;;QAGF,MAAMkB,cAAc,GAAGhY,wBAAwB,CAAC8X,YAAY,CAAC;QAC7DzhB,OAAO,CAACC,GAAG,CAAC,gFAAgF,EAAEwhB,YAAY,GAAG,CAAC,EAAE,IAAI,EAAEpS,KAAK,EAAE,GAAG,EAAEsS,cAAc,CAAC;QAEjJ,MAAM9W,QAAQ,GAAqB;UACjCwE,KAAK;UACLC,SAAS;UACTC,MAAM;UACNd,OAAO,EAAEkT,cAAc;UACvBH,OAAO,EAAEhT;SACV;QACDwR,QAAQ,CAAC5f,IAAI,CAAC;UAAEyK,QAAQ;UAAE0D,UAAU,EAAE,KAAK;UAAEC;QAAU,CAAE,CAAC;QAE1D,IAAI,CAAC2S,sBAAsB,CAACjiB,QAAQ,EAAEE,QAAQ,EAAEuiB,cAAc,CAAC,CAAC3iB,SAAS,CAAC;UACxEoB,IAAI,EAAGgO,QAAQ,IAAI;YACjBpO,OAAO,CAACC,GAAG,CAAC,gGAAgG,EAAEmO,QAAQ,CAAC;YACvH,MAAMS,MAAM,GAAGT,QAAQ,CAACI,UAAU,CAAC,CAAC,CAAC;YACrCA,UAAU,CAAChF,IAAI,CAACqF,MAAM,CAAC;YAEvB,IAAIA,MAAM,CAACzD,MAAM,KAAK,CAAC,EAAE;cACvBkE,SAAS,EAAE;cACXtP,OAAO,CAACC,GAAG,CAAC,qGAAqG,EAAE4O,MAAM,CAAChF,eAAe,CAAC;aAC3I,MAAM;cACL0F,MAAM,EAAE;cACRvP,OAAO,CAACC,GAAG,CAAC,iGAAiG,EAAE4O,MAAM,CAAChF,eAAe,EAAE,QAAQ,EAAEgF,MAAM,CAACM,OAAO,CAAC;;YAGlKsS,YAAY,EAAE;YACdC,WAAW,EAAE;UACf,CAAC;UACDrhB,KAAK,EAAGA,KAAK,IAAI;YACfL,OAAO,CAACK,KAAK,CAAC,+FAA+F,EAAEA,KAAK,CAAC;YACrHkP,MAAM,EAAE;YACRkS,YAAY,EAAE;YACdC,WAAW,EAAE;UACf;SACD,CAAC;MACJ,CAAC;MAEDA,WAAW,EAAE;IACf,CAAC,CAAC;EACJ;EAEA;;;;;EAKAzO,aAAaA,CAACD,cAA8B;IAC1ChT,OAAO,CAACC,GAAG,CAAC,uEAAuE,EAAE;MACnFf,QAAQ,EAAE8T,cAAc,CAAC9T,QAAQ;MACjCE,QAAQ,EAAE4T,cAAc,CAAC5T,QAAQ;MACjCoS,SAAS,EAAEwB,cAAc,CAACtF,eAAe,CAACtG;KAC3C,CAAC;IAEF,OAAO,IAAI0Y,4CAAU,CAAkBE,QAAQ,IAAG;MAChD,IAAI,CAACD,aAAa,CAACE,IAAI,CACrB;QACEC,YAAY,EAAE;UACZC,MAAM,EAAE,CACN;YACE7J,IAAI,EAAE,0BAA0B;YAChC8J,GAAG,EAAE,KAAK;YACV9W,EAAE,EAAE,eAAe;YACnBkW,UAAU,EAAE;cACVa,WAAW,EAAE,eAAe;cAC5BC,WAAW,EAAEI,IAAI,CAACC,SAAS,CAAC;gBAC1BC,gCAAgC,EAAE;kBAChC1hB,QAAQ,EAAE8T,cAAc,CAAC9T,QAAQ;kBACjCE,QAAQ,EAAE4T,cAAc,CAAC5T,QAAQ;kBACjCsO,eAAe,EAAEsF,cAAc,CAACtF;;eAEnC;;WAEJ,CACF;UACD6S,kBAAkB,EAAE;;OAEvB,EACD,CAAC;QAAErhB,QAAQ,EAAE8T,cAAc,CAAC9T,QAAQ;QAAEE,QAAQ,EAAE4T,cAAc,CAAC5T;MAAQ,CAAE,CAAC,EAC1E,MAAK;QACH,IAAI;UACFY,OAAO,CAACC,GAAG,CAAC,oFAAoF,CAAC;UACjG,MAAMugB,GAAG,GAAG,IAAI,CAACT,aAAa,CAACvG,GAAG,CAAC,eAAe,CAAC;UAEnD,IAAI,CAACgH,GAAG,EAAE;YACRxgB,OAAO,CAACK,KAAK,CAAC,6EAA6E,CAAC;YAC5F2f,QAAQ,CAAC3f,KAAK,CAAC,kCAAkC,CAAC;YAClD;;UAGFL,OAAO,CAACC,GAAG,CAAC,mEAAmE,EAAEugB,GAAG,CAAC;UACrF,MAAM7Q,eAAe,GAAoB,IAAI,CAACiS,oBAAoB,CAACpB,GAAG,CAAC;UACvExgB,OAAO,CAACC,GAAG,CAAC,qEAAqE,EAAE0P,eAAe,CAAC;UACnGqQ,QAAQ,CAAC5f,IAAI,CAACuP,eAAe,CAAC;UAC9BqQ,QAAQ,CAACS,QAAQ,EAAE;SACpB,CAAC,OAAOpgB,KAAK,EAAE;UACdL,OAAO,CAACK,KAAK,CAAC,mDAAmD,EAAEA,KAAK,CAAC;UACzE2f,QAAQ,CAAC3f,KAAK,CAACA,KAAK,CAAC;;MAEzB,CAAC,CACF;IACH,CAAC,CAAC;EACJ;EAEA;;;;;EAKQwgB,yBAAyBA,CAACL,GAAQ;IACxCxgB,OAAO,CAACC,GAAG,CAAC,sFAAsF,EAAEugB,GAAG,CAAC;IACxG;IACA,IAAIA,GAAG,CAACqB,IAAI,IAAIC,KAAK,CAACC,OAAO,CAACvB,GAAG,CAACqB,IAAI,CAAC,EAAE;MACvC,MAAML,OAAO,GAAGhB,GAAG,CAACqB,IAAI,CAACjY,GAAG,CAAEyS,OAAY,KAAM;QAC9CnC,GAAG,EAAEmC,OAAO,CAACnC,GAAG,IAAI,EAAE;QACtB5D,IAAI,EAAE+F,OAAO,CAAC2F,iBAAiB,IAAI,EAAE;QACrC5H,WAAW,EAAEiC,OAAO,CAAC4F,GAAG,GAAG,IAAI,CAACC,SAAS,CAAC7F,OAAO,CAAC4F,GAAG,CAAC,GAAG,IAAIE,IAAI,EAAE;QACnE/iB,QAAQ,EAAEid,OAAO,CAACjd,QAAQ,IAAI,CAAC;QAC/BF,QAAQ,EAAEmd,OAAO,CAACnd,QAAQ,IAAI,CAAC;QAC/Bib,GAAG,EAAEkC,OAAO,CAAClC,GAAG,IAAI,EAAE;QACtBG,QAAQ,EAAE+B,OAAO,CAAC/B,QAAQ,IAAI,EAAE;QAChCC,IAAI,EAAE8B,OAAO,CAAC9B,IAAI,IAAI,EAAE;QACxBC,UAAU,EAAE6B,OAAO,CAAC7B,UAAU,IAAI,EAAE;QACpCC,UAAU,EAAE4B,OAAO,CAAC5B,UAAU,IAAI,EAAE;QACpCC,OAAO,EAAE2B,OAAO,CAAC3B,OAAO,GAAG,IAAIyH,IAAI,CAAC9F,OAAO,CAAC3B,OAAO,CAAC,GAAG,IAAIyH,IAAI,EAAE;QACjExH,WAAW,EAAE0B,OAAO,CAAC1B,WAAW,GAAG,IAAIwH,IAAI,CAAC9F,OAAO,CAAC1B,WAAW,CAAC,GAAG,IAAIwH,IAAI,EAAE;QAC7EtI,SAAS,EAAEwC,OAAO,CAACxC,SAAS,GAAG,IAAIsI,IAAI,CAAC9F,OAAO,CAACxC,SAAS,CAAC,GAAG,IAAIsI,IAAI,EAAE;QACvE9H,GAAG,EAAEgC,OAAO,CAAChC,GAAG,IAAI,EAAE;QACtBpS,QAAQ,EAAE;OACX,CAAC,CAAC;MACHjI,OAAO,CAACC,GAAG,CAAC,wEAAwE,EAAEuhB,OAAO,CAAC;MAC9F,OAAOA,OAAO;;IAEhBxhB,OAAO,CAAC8J,IAAI,CAAC,wFAAwF,CAAC;IACtG,OAAO,EAAE;EACX;EAEA;;;;;EAKQoY,SAASA,CAACE,OAAe;IAC/BpiB,OAAO,CAACC,GAAG,CAAC,6DAA6D,EAAEmiB,OAAO,CAAC;IACnF,IAAI,CAACA,OAAO,IAAIA,OAAO,KAAK,+BAA+B,EAAE;MAC3DpiB,OAAO,CAACC,GAAG,CAAC,mFAAmF,CAAC;MAChG,OAAO,IAAIkiB,IAAI,EAAE;;IAGnB;IACA,MAAME,MAAM,GAA8B;MACxC,KAAK,EAAE,CAAC;MAAE,KAAK,EAAE,CAAC;MAAE,KAAK,EAAE,CAAC;MAAE,KAAK,EAAE,CAAC;MAAE,KAAK,EAAE,CAAC;MAAE,KAAK,EAAE,CAAC;MAC1D,KAAK,EAAE,CAAC;MAAE,KAAK,EAAE,CAAC;MAAE,KAAK,EAAE,CAAC;MAAE,KAAK,EAAE,CAAC;MAAE,KAAK,EAAE,EAAE;MAAE,KAAK,EAAE;KAC3D;IAED,MAAMC,KAAK,GAAGF,OAAO,CAACG,KAAK,CAAC,GAAG,CAAC;IAChC,IAAID,KAAK,CAAClb,MAAM,KAAK,CAAC,EAAE;MACtB,MAAMob,GAAG,GAAGrjB,QAAQ,CAACmjB,KAAK,CAAC,CAAC,CAAC,CAAC;MAC9B,MAAMG,KAAK,GAAGJ,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;MAC9B,MAAMI,IAAI,GAAGvjB,QAAQ,CAACmjB,KAAK,CAAC,CAAC,CAAC,CAAC;MAE/B,IAAI,CAACK,KAAK,CAACH,GAAG,CAAC,IAAIC,KAAK,KAAK9E,SAAS,IAAI,CAACgF,KAAK,CAACD,IAAI,CAAC,EAAE;QACtD,MAAM7T,MAAM,GAAG,IAAIsT,IAAI,CAACO,IAAI,EAAED,KAAK,EAAED,GAAG,CAAC;QACzCxiB,OAAO,CAACC,GAAG,CAAC,kEAAkE,EAAE4O,MAAM,CAAC;QACvF,OAAOA,MAAM;;;IAIjB;IACA7O,OAAO,CAACC,GAAG,CAAC,oEAAoE,CAAC;IACjF,OAAO,IAAIkiB,IAAI,CAACC,OAAO,CAAC;EAC1B;EAEA;;;;;EAKQtB,gBAAgBA,CAACN,GAAQ;IAC/BxgB,OAAO,CAACC,GAAG,CAAC,6EAA6E,EAAEugB,GAAG,CAAC;IAC/F;IACA,MAAMoC,WAAW,GAAGpC,GAAG,CAACqB,IAAI,IAAIrB,GAAG,CAACqB,IAAI,CAACza,MAAM,GAAG,CAAC,GAAGoZ,GAAG,CAACqB,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE;IACtE7hB,OAAO,CAACC,GAAG,CAAC,kEAAkE,EAAE2iB,WAAW,CAAC;IAE5F;IACA,MAAMpgB,SAAS,GAAsBogB,WAAW,CAACC,OAAO,GAAGD,WAAW,CAACC,OAAO,CAACjZ,GAAG,CAAEP,GAAQ,KAAM;MAChGC,EAAE,EAAED,GAAG,CAACgY,kBAAkB,EAAEnT,QAAQ,EAAE,IAAI,EAAE;MAC5ChG,YAAY,EAAEmB,GAAG,CAACiN,IAAI,IAAI,EAAE;MAC5B1L,YAAY,EAAEvB,GAAG,CAAClB,kBAAkB,IAAI,EAAE;MAC1CE,YAAY,EAAEgB,GAAG,CAACyZ,WAAW,GAAG,IAAIX,IAAI,CAAC9Y,GAAG,CAACyZ,WAAW,CAAC,GAAG,IAAIX,IAAI,EAAE;MACtE7Z,YAAY,EAAE,IAAI,CAACya,cAAc,CAAC1Z,GAAG,CAAC2Z,WAAW,IAAI,CAAC,CAAC;MACvD/a,QAAQ,EAAE,KAAK;MACfgb,cAAc,EAAE5Z,GAAG,CAAC4Z,cAAc,IAAI,EAAE;MACxC9a,kBAAkB,EAAEkB,GAAG,CAAClB,kBAAkB,IAAI,EAAE;MAChD+a,sBAAsB,EAAE7Z,GAAG,CAAC6Z,sBAAsB,IAAI,EAAE;MACxDC,UAAU,EAAE9Z,GAAG,CAAC8Z,UAAU,IAAI,EAAE;MAChCC,UAAU,EAAE/Z,GAAG,CAAC+Z,UAAU,IAAI,EAAE;MAChC7a,SAAS,EAAEc,GAAG,CAACd,SAAS,IAAI,EAAE;MAC9BC,MAAM,EAAEa,GAAG,CAACb,MAAM,IAAI,EAAE;MACxB6a,qBAAqB,EAAEha,GAAG,CAACga,qBAAqB,IAAI,EAAE;MACtDC,gBAAgB,EAAEja,GAAG,CAACia,gBAAgB,IAAI,EAAE;MAC5CC,cAAc,EAAEla,GAAG,CAACka,cAAc,IAAI;KACvC,CAAC,CAAC,GAAG,EAAE;IAERvjB,OAAO,CAACC,GAAG,CAAC,iEAAiE,EAAEuC,SAAS,CAAC;IAEzF,MAAMqM,MAAM,GAAG;MACbqL,GAAG,EAAE0I,WAAW,CAAC1I,GAAG,IAAI,EAAE;MAC1B5D,IAAI,EAAEsM,WAAW,CAACZ,iBAAiB,IAAI,EAAE;MACzC5H,WAAW,EAAEwI,WAAW,CAACX,GAAG,GAAG,IAAI,CAACC,SAAS,CAACU,WAAW,CAACX,GAAG,CAAC,GAAG,IAAIE,IAAI,EAAE;MAC3E3f,SAAS,EAAEA,SAAS;MACpBtD,QAAQ,EAAE0jB,WAAW,CAAC1jB,QAAQ,IAAI,CAAC;MACnCE,QAAQ,EAAEwjB,WAAW,CAACxjB,QAAQ,IAAI,CAAC;MACnCkb,QAAQ,EAAEsI,WAAW,CAACtI,QAAQ,IAAI,EAAE;MACpCC,IAAI,EAAEqI,WAAW,CAACrI,IAAI,IAAI,EAAE;MAC5BC,UAAU,EAAEoI,WAAW,CAACpI,UAAU,IAAI,EAAE;MACxCC,UAAU,EAAEmI,WAAW,CAACnI,UAAU,IAAI,EAAE;MACxCC,OAAO,EAAEkI,WAAW,CAAClI,OAAO,GAAG,IAAIyH,IAAI,CAACS,WAAW,CAAClI,OAAO,CAAC,GAAG,IAAIyH,IAAI,EAAE;MACzExH,WAAW,EAAEiI,WAAW,CAACjI,WAAW,GAAG,IAAIwH,IAAI,CAACS,WAAW,CAACjI,WAAW,CAAC,GAAG,IAAIwH,IAAI,EAAE;MACrFtI,SAAS,EAAE+I,WAAW,CAAC/I,SAAS,GAAG,IAAIsI,IAAI,CAACS,WAAW,CAAC/I,SAAS,CAAC,GAAG,IAAIsI,IAAI,EAAE;MAC/E9H,GAAG,EAAEuI,WAAW,CAACvI,GAAG,IAAI,EAAE;MAC1BF,GAAG,EAAEyI,WAAW,CAACzI,GAAG,IAAI;KACzB;IAEDna,OAAO,CAACC,GAAG,CAAC,oEAAoE,EAAE4O,MAAM,CAAC;IACzF,OAAOA,MAAM;EACf;EAEA;;;;;EAKQkU,cAAcA,CAACS,KAAa;IAClCxjB,OAAO,CAACC,GAAG,CAAC,+DAA+D,EAAEujB,KAAK,CAAC;IACnF,IAAIA,KAAK,KAAK,CAAC,EAAE;MACfxjB,OAAO,CAACC,GAAG,CAAC,+DAA+D,CAAC;MAC5E,OAAO,SAAS;;IAGlB,MAAMwjB,CAAC,GAAG,IAAI;IACd,MAAMC,KAAK,GAAG,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;IACzC,MAAMC,CAAC,GAAGvT,IAAI,CAACwT,KAAK,CAACxT,IAAI,CAACnQ,GAAG,CAACujB,KAAK,CAAC,GAAGpT,IAAI,CAACnQ,GAAG,CAACwjB,CAAC,CAAC,CAAC;IACnD,MAAM5U,MAAM,GAAG6P,UAAU,CAAC,CAAC8E,KAAK,GAAGpT,IAAI,CAACyT,GAAG,CAACJ,CAAC,EAAEE,CAAC,CAAC,EAAElU,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGiU,KAAK,CAACC,CAAC,CAAC;IAE/E3jB,OAAO,CAACC,GAAG,CAAC,+DAA+D,EAAE4O,MAAM,CAAC;IACpF,OAAOA,MAAM;EACf;EAEA;;;;;EAKQqS,qBAAqBA,CAACV,GAAQ;IACpCxgB,OAAO,CAACC,GAAG,CAAC,sFAAsF,EAAEugB,GAAG,CAAC;IACxG,IAAIA,GAAG,CAACsD,uBAAuB,IAAItD,GAAG,CAACsD,uBAAuB,CAACjU,eAAe,EAAE;MAC9E,MAAM2R,OAAO,GAAG;QACd3R,eAAe,EAAE2Q,GAAG,CAACsD,uBAAuB,CAACjU,eAAe,CAACjG,GAAG,CAAEiF,MAAW,KAAM;UACjFhF,eAAe,EAAEgF,MAAM,CAAChF,eAAe,IAAI,CAAC;UAC5Ce,YAAY,EAAEiE,MAAM,CAACjE,YAAY,IAAI,EAAE;UACvCe,QAAQ,EAAEkD,MAAM,CAAClD,QAAQ,IAAI,EAAE;UAC/BP,MAAM,EAAEyD,MAAM,CAACzD,MAAM,IAAI,CAAC;UAC1B2D,QAAQ,EAAEF,MAAM,CAACE,QAAQ,IAAI,EAAE;UAC/BI,OAAO,EAAEN,MAAM,CAACM,OAAO,IAAI,EAAE;UAC7BjH,YAAY,EAAE2G,MAAM,CAAC3G,YAAY,IAAI,EAAE;UACvC6b,WAAW,EAAElV,MAAM,CAACkV,WAAW,IAAI;SACpC,CAAC;OACH;MACD/jB,OAAO,CAACC,GAAG,CAAC,oEAAoE,EAAEuhB,OAAO,CAAC;MAC1F,OAAOA,OAAO;;IAGhB;IACAxhB,OAAO,CAAC8J,IAAI,CAAC,oHAAoH,CAAC;IAClI,OAAO;MACL+F,eAAe,EAAE;KAClB;EACH;EAEA;;;;;EAKQ0R,mCAAmCA,CAACf,GAAQ;IAClDxgB,OAAO,CAACC,GAAG,CAAC,oGAAoG,EAAEugB,GAAG,CAAC;IAEtH;IACA,IAAIA,GAAG,CAACqB,IAAI,IAAIrB,GAAG,CAACqB,IAAI,CAACza,MAAM,GAAG,CAAC,IAAIoZ,GAAG,CAACqB,IAAI,CAAC,CAAC,CAAC,CAACgB,OAAO,IAAIrC,GAAG,CAACqB,IAAI,CAAC,CAAC,CAAC,CAACgB,OAAO,CAACzb,MAAM,GAAG,CAAC,EAAE;MAC5F,MAAM4c,OAAO,GAAGxD,GAAG,CAACqB,IAAI,CAAC,CAAC,CAAC,CAACgB,OAAO,CAAC,CAAC,CAAC;MACtC7iB,OAAO,CAACC,GAAG,CAAC,sFAAsF,EAAE+jB,OAAO,CAAC;MAE5G;MACA,MAAMC,SAAS,GAAGD,OAAO,CAACE,aAAa,KAAK,CAAC;MAC7ClkB,OAAO,CAACC,GAAG,CAAC,2FAA2F,EAAEgkB,SAAS,CAAC;MAEnH;MACA,IAAIhD,gBAAgB,GAAG,IAAI;MAC3B,IAAI+C,OAAO,CAAC/C,gBAAgB,EAAE;QAC5B,IAAI;UACFA,gBAAgB,GAAGP,IAAI,CAACjc,KAAK,CAACuf,OAAO,CAAC/C,gBAAgB,CAAC;UACvDjhB,OAAO,CAACC,GAAG,CAAC,4FAA4F,EAAEghB,gBAAgB,CAAC;SAC5H,CAAC,OAAO5gB,KAAK,EAAE;UACdL,OAAO,CAAC8J,IAAI,CAAC,qGAAqG,EAAEzJ,KAAK,CAAC;;;MAI9H,MAAMwO,MAAM,GAAG;QACbhF,eAAe,EAAEma,OAAO,CAAC3C,kBAAkB,IAAI,CAAC;QAChDzW,YAAY,EAAEoZ,OAAO,CAAC7b,kBAAkB,IAAI,EAAE;QAC9CwD,QAAQ,EAAEqY,OAAO,CAACrY,QAAQ,IAAIqY,OAAO,CAAC1N,IAAI,IAAI,EAAE;QAChDlL,MAAM,EAAE6Y,SAAS,GAAG,CAAC,GAAG,CAAC;QACzBlV,QAAQ,EAAEkS,gBAAgB,EAAEkD,sBAAsB,EAAEC,QAAQ,IAAI,EAAE;QAClEjV,OAAO,EAAE8R,gBAAgB,EAAEkD,sBAAsB,EAAEE,OAAO,KAAKJ,SAAS,GAAG,qBAAqB,GAAG,iBAAiB,CAAC;QACrH/b,YAAY,EAAE8b,OAAO,CAAC1N,IAAI,IAAI,EAAE;QAChCyN,WAAW,EAAEC,OAAO,CAACf,cAAc,IAAI;OACxC;MAEDjjB,OAAO,CAACC,GAAG,CAAC,iFAAiF,EAAE4O,MAAM,CAAC;MACtG,OAAOA,MAAM;;IAGf;IACA,IAAI2R,GAAG,CAAC8D,4BAA4B,IAAI9D,GAAG,CAAC8D,4BAA4B,CAAChD,cAAc,EAAE;MACvF,MAAMzS,MAAM,GAAG;QACbhF,eAAe,EAAE2W,GAAG,CAAC8D,4BAA4B,CAAChD,cAAc,CAACzX,eAAe,IAAI,CAAC;QACrFe,YAAY,EAAE4V,GAAG,CAAC8D,4BAA4B,CAAChD,cAAc,CAAC1W,YAAY,IAAI,EAAE;QAChFe,QAAQ,EAAE6U,GAAG,CAAC8D,4BAA4B,CAAChD,cAAc,CAAC3V,QAAQ,IAAI,EAAE;QACxEP,MAAM,EAAEoV,GAAG,CAAC8D,4BAA4B,CAAChD,cAAc,CAAClW,MAAM,IAAI,CAAC;QACnE2D,QAAQ,EAAEyR,GAAG,CAAC8D,4BAA4B,CAAChD,cAAc,CAACvS,QAAQ,IAAI,EAAE;QACxEI,OAAO,EAAEqR,GAAG,CAAC8D,4BAA4B,CAAChD,cAAc,CAACnS,OAAO,IAAI,EAAE;QACtEjH,YAAY,EAAEsY,GAAG,CAAC8D,4BAA4B,CAAChD,cAAc,CAACpZ,YAAY,IAAI,EAAE;QAChF6b,WAAW,EAAEvD,GAAG,CAAC8D,4BAA4B,CAAChD,cAAc,CAACyC,WAAW,IAAI;OAC7E;MACD/jB,OAAO,CAACC,GAAG,CAAC,0FAA0F,EAAE4O,MAAM,CAAC;MAC/G,OAAOA,MAAM;;IAGf7O,OAAO,CAAC8J,IAAI,CAAC,gHAAgH,CAAC;IAC9H,OAAO;MACLD,eAAe,EAAE,CAAC;MAClBe,YAAY,EAAE,EAAE;MAChBe,QAAQ,EAAE,EAAE;MACZP,MAAM,EAAE,CAAC;MACT2D,QAAQ,EAAE,EAAE;MACZI,OAAO,EAAE,wBAAwB;MACjCjH,YAAY,EAAE,EAAE;MAChB6b,WAAW,EAAE;KACd;EACH;EAEA;;;;;EAKQnC,oBAAoBA,CAACpB,GAAQ;IACnCxgB,OAAO,CAACC,GAAG,CAAC,qFAAqF,EAAEugB,GAAG,CAAC;IAEvG;IACA,IAAIA,GAAG,CAACjP,WAAW,IAAIiP,GAAG,CAACqB,IAAI,IAAIrB,GAAG,CAACqB,IAAI,CAACza,MAAM,GAAG,CAAC,EAAE;MACtD,MAAMmK,WAAW,GAAGiP,GAAG,CAACjP,WAAW;MACnC,MAAMsQ,IAAI,GAAGrB,GAAG,CAACqB,IAAI,CAAC,CAAC,CAAC;MACxB,MAAMoC,SAAS,GAAGzD,GAAG,CAAC+D,KAAK,IAAI/D,GAAG,CAAC+D,KAAK,CAACC,UAAU,IAAIhE,GAAG,CAAC+D,KAAK,CAACC,UAAU,CAACpZ,MAAM,KAAK,GAAG;MAE1F,MAAMyD,MAAM,GAAG;QACbuE,OAAO,EAAE6Q,SAAS;QAClB3Q,UAAU,EAAE/B,WAAW,CAACgB,WAAW,IAAI,EAAE;QACzCX,WAAW,EAAEL,WAAW,CAACkT,WAAW,IAAI,yBAAyB;QACjEtV,OAAO,EAAEqR,GAAG,CAAC+D,KAAK,EAAEG,IAAI,KAAKT,SAAS,GAAG,gCAAgC,GAAG,gBAAgB,CAAC;QAC7F3S,YAAY,EAAEC,WAAW,CAACoT,gBAAgB,IAAI,EAAE;QAChDC,iBAAiB,EAAErT,WAAW,CAACqT,iBAAiB,IAAI/C,IAAI,CAAC+C,iBAAiB,IAAI,EAAE;QAChFrS,WAAW,EAAEhB,WAAW,CAACgB,WAAW,IAAI,EAAE;QAC1C6F,QAAQ,EAAE7G,WAAW,CAAC6G,QAAQ,IAAI,EAAE;QACpCC,QAAQ,EAAE9G,WAAW,CAAC8G,QAAQ,IAAI,EAAE;QACpC9G,WAAW,EAAE;UACXkT,WAAW,EAAElT,WAAW,CAACkT,WAAW,IAAI,yBAAyB;UACjEE,gBAAgB,EAAEpT,WAAW,CAACoT,gBAAgB,IAAI,EAAE;UACpDnT,SAAS,EAAED,WAAW,CAACC,SAAS,IAAI,CAAC;UACrCoT,iBAAiB,EAAErT,WAAW,CAACqT,iBAAiB,IAAI/C,IAAI,CAAC+C,iBAAiB,IAAI,EAAE;UAChFrS,WAAW,EAAEhB,WAAW,CAACgB,WAAW,IAAI,EAAE;UAC1C6F,QAAQ,EAAE7G,WAAW,CAAC6G,QAAQ,IAAI,EAAE;UACpCC,QAAQ,EAAE9G,WAAW,CAAC8G,QAAQ,IAAI,EAAE,CAAC;;OAExC;;MACDrY,OAAO,CAACC,GAAG,CAAC,0EAA0E,EAAE4O,MAAM,CAAC;MAC/F,OAAOA,MAAM;;IAGf;IACA,IAAI2R,GAAG,CAACqE,mBAAmB,EAAE;MAC3B,MAAMN,KAAK,GAAG/D,GAAG,CAACqE,mBAAmB;MACrC,MAAMhW,MAAM,GAAG;QACbuE,OAAO,EAAEmR,KAAK,CAACnR,OAAO,KAAK,IAAI,IAAImR,KAAK,CAACnR,OAAO,KAAK,CAAC;QACtDE,UAAU,EAAEiR,KAAK,CAACjR,UAAU,IAAI,EAAE;QAClC1B,WAAW,EAAE2S,KAAK,CAAC3S,WAAW,IAAI,yBAAyB;QAC3DzC,OAAO,EAAEoV,KAAK,CAACpV,OAAO,IAAI,mBAAmB;QAC7CmC,YAAY,EAAEiT,KAAK,CAACjT,YAAY,IAAI,EAAE;QACtCsT,iBAAiB,EAAEL,KAAK,CAACK,iBAAiB,IAAI,EAAE;QAChDrS,WAAW,EAAEgS,KAAK,CAAChS,WAAW,IAAI,EAAE;QACpC6F,QAAQ,EAAEmM,KAAK,CAACnM,QAAQ,IAAI,EAAE;QAC9BC,QAAQ,EAAEkM,KAAK,CAAClM,QAAQ,IAAI,EAAE;QAC9B9G,WAAW,EAAE;UACXkT,WAAW,EAAEF,KAAK,CAAC3S,WAAW,IAAI,yBAAyB;UAC3D+S,gBAAgB,EAAEJ,KAAK,CAACjT,YAAY,IAAI,EAAE;UAC1CE,SAAS,EAAE+S,KAAK,CAAC/S,SAAS,IAAI,CAAC;UAC/BoT,iBAAiB,EAAEL,KAAK,CAACK,iBAAiB,IAAI,EAAE;UAChDrS,WAAW,EAAEgS,KAAK,CAAChS,WAAW,IAAI,EAAE;UACpC6F,QAAQ,EAAEmM,KAAK,CAACnM,QAAQ,IAAI,EAAE;UAC9BC,QAAQ,EAAEkM,KAAK,CAAClM,QAAQ,IAAI,EAAE,CAAC;;OAElC;;MACDrY,OAAO,CAACC,GAAG,CAAC,0EAA0E,EAAE4O,MAAM,CAAC;MAC/F,OAAOA,MAAM;;IAGf;IACA,IAAI2R,GAAG,CAAC+D,KAAK,IAAI/D,GAAG,CAAC+D,KAAK,CAACC,UAAU,EAAE;MACrC,MAAMP,SAAS,GAAGzD,GAAG,CAAC+D,KAAK,CAACC,UAAU,CAACpZ,MAAM,KAAK,GAAG;MACrD,MAAMyD,MAAM,GAAG;QACbuE,OAAO,EAAE6Q,SAAS;QAClB3Q,UAAU,EAAEkN,GAAG,CAAClN,UAAU,IAAI,EAAE;QAChC1B,WAAW,EAAE4O,GAAG,CAAC5O,WAAW,IAAI,yBAAyB;QACzDzC,OAAO,EAAEqR,GAAG,CAAC+D,KAAK,CAACG,IAAI,KAAKT,SAAS,GAAG,gCAAgC,GAAG,gBAAgB,CAAC;QAC5F3S,YAAY,EAAEkP,GAAG,CAAClP,YAAY,IAAI,EAAE;QACpCsT,iBAAiB,EAAEpE,GAAG,CAACoE,iBAAiB,IAAI,EAAE;QAC9CrS,WAAW,EAAEiO,GAAG,CAACjO,WAAW,IAAI,EAAE;QAClC6F,QAAQ,EAAEoI,GAAG,CAACpI,QAAQ,IAAI,EAAE;QAC5BC,QAAQ,EAAEmI,GAAG,CAACnI,QAAQ,IAAI,EAAE;QAC5B9G,WAAW,EAAE;UACXkT,WAAW,EAAEjE,GAAG,CAAC5O,WAAW,IAAI,yBAAyB;UACzD+S,gBAAgB,EAAEnE,GAAG,CAAClP,YAAY,IAAI,EAAE;UACxCE,SAAS,EAAEgP,GAAG,CAAChP,SAAS,IAAI,CAAC;UAC7BoT,iBAAiB,EAAEpE,GAAG,CAACoE,iBAAiB,IAAI,EAAE;UAC9CrS,WAAW,EAAEiO,GAAG,CAACjO,WAAW,IAAI,EAAE;UAClC6F,QAAQ,EAAEoI,GAAG,CAACpI,QAAQ,IAAI,EAAE;UAC5BC,QAAQ,EAAEmI,GAAG,CAACnI,QAAQ,IAAI,EAAE,CAAC;;OAEhC;;MACDrY,OAAO,CAACC,GAAG,CAAC,2EAA2E,EAAE4O,MAAM,CAAC;MAChG,OAAOA,MAAM;;IAGf7O,OAAO,CAAC8J,IAAI,CAAC,iGAAiG,CAAC;IAC/G,OAAO;MACLsJ,OAAO,EAAE,KAAK;MACdjE,OAAO,EAAE,wBAAwB;MACjCyC,WAAW,EAAE;KACd;EACH;EAEA;;;;EAIAkT,mBAAmBA,CAAA;IACjB,OAAO,IAAI,CAACnmB,UAAU;EACxB;EAEA;;;;EAIA4X,oBAAoBA,CAAA;IAClBvW,OAAO,CAACC,GAAG,CAAC,8EAA8E,CAAC;IAE3F,OAAO,IAAI6f,4CAAU,CAAuCE,QAAQ,IAAG;MACrE,IAAI,CAACD,aAAa,CAACE,IAAI,CACrB;QACEC,YAAY,EAAE;UACZC,MAAM,EAAE,CACN;YACE7J,IAAI,EAAE,0BAA0B;YAChC8J,GAAG,EAAE,KAAK;YACV9W,EAAE,EAAE,mBAAmB;YACvBkW,UAAU,EAAE;cACVa,WAAW,EAAE,sBAAsB;cACnCC,WAAW,EAAE;;WAEhB,CACF;UACDC,kBAAkB,EAAE;;OAEvB,EACD,CAAC;QAAErhB,QAAQ,EAAE,CAAC;QAAEE,QAAQ,EAAE;MAAC,CAAE,CAAC,EAC9B,MAAK;QACH,IAAI;UACFY,OAAO,CAACC,GAAG,CAAC,0EAA0E,CAAC;UACvF,MAAMugB,GAAG,GAAG,IAAI,CAACT,aAAa,CAACvG,GAAG,CAAC,mBAAmB,CAAC;UAEvD,IAAI,CAACgH,GAAG,EAAE;YACRxgB,OAAO,CAACK,KAAK,CAAC,gFAAgF,CAAC;YAC/F2f,QAAQ,CAAC3f,KAAK,CAAC,8BAA8B,CAAC;YAC9C;;UAGF;UACA,IAAImW,WAAW,GAAG;YAChBC,QAAQ,EAAE,EAAE;YACZM,QAAQ,EAAE;WACX;UAED;UACA,IAAIyJ,GAAG,CAACuE,uBAAuB,EAAE;YAC/BvO,WAAW,GAAG;cACZC,QAAQ,EAAE+J,GAAG,CAACuE,uBAAuB,CAACtO,QAAQ,IAAI,EAAE;cACpDM,QAAQ,EAAEyJ,GAAG,CAACuE,uBAAuB,CAAChO,QAAQ,IAAI;aACnD;WACF,MAAM,IAAIyJ,GAAG,CAAC/J,QAAQ,IAAI+J,GAAG,CAACzJ,QAAQ,EAAE;YACvC;YACAP,WAAW,GAAG;cACZC,QAAQ,EAAE+J,GAAG,CAAC/J,QAAQ;cACtBM,QAAQ,EAAEyJ,GAAG,CAACzJ;aACf;WACF,MAAM;YACL/W,OAAO,CAACK,KAAK,CAAC,qGAAqG,EAAEmgB,GAAG,CAAC;YACzHR,QAAQ,CAAC3f,KAAK,CAAC,kDAAkD,CAAC;YAClE;;UAGFL,OAAO,CAACC,GAAG,CAAC,yEAAyE,EAAEuW,WAAW,CAAC;UACnGwJ,QAAQ,CAAC5f,IAAI,CAACoW,WAAW,CAAC;UAC1BwJ,QAAQ,CAACS,QAAQ,EAAE;SACpB,CAAC,OAAOpgB,KAAK,EAAE;UACdL,OAAO,CAACK,KAAK,CAAC,0DAA0D,EAAEA,KAAK,CAAC;UAChF2f,QAAQ,CAAC3f,KAAK,CAACA,KAAK,CAAC;;MAEzB,CAAC,CACF;IACH,CAAC,CAAC;EACJ;EAEA;;;;;;;EAOAiY,mBAAmBA,CAACF,QAAgB,EAAEC,QAAgB;IAAA,IAAA1Y,KAAA;IACpDK,OAAO,CAACC,GAAG,CAAC,+FAA+F,EAAE;MAAEmY,QAAQ;MAAEC;IAAQ,CAAE,CAAC;IAEpI,OAAO,IAAIyH,4CAAU,CAAOE,QAAQ,IAAG;MACrC;MACA,MAAMgF,WAAW,GAAG1kB,MAAM,CAACoX,QAAQ,CAACf,IAAI;MACxC,MAAMjC,GAAG,GAAG,GAAGpU,MAAM,CAACoX,QAAQ,CAAChB,QAAQ,KAAKsO,WAAW,mCAAmC;MAE1FhlB,OAAO,CAACC,GAAG,CAAC,6DAA6D,EAAEyU,GAAG,CAAC;MAE/E;MACA,MAAMuQ,QAAQ,GAAG,IAAIC,QAAQ,EAAE;MAC/BD,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAE/M,QAAQ,CAAC;MACrC6M,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAE9M,QAAQ,CAAC;MAErC;MACA,MAAMzE,GAAG,GAAG,IAAIC,cAAc,EAAE;MAChCD,GAAG,CAACE,IAAI,CAAC,MAAM,EAAEY,GAAG,CAAC;MAErB;MACAd,GAAG,CAACG,YAAY,GAAG,MAAM;MAEzB;MACA,MAAMqR,SAAS;QAAA,IAAAC,IAAA,GAAAzlB,sJAAA,CAAG,aAAW;UAC3B,IAAI;YACF,IAAKU,MAAc,CAAC2T,eAAe,EAAE;cACnCjU,OAAO,CAACC,GAAG,CAAC,2EAA2E,CAAC;cACxF,MAAOK,MAAc,CAAC2T,eAAe,CAACL,GAAG,CAAC;aAC3C,MAAM;cACL5T,OAAO,CAACC,GAAG,CAAC,gGAAgG,CAAC;cAC7G;cACA,IAAI;gBACF,MAAMuW,WAAW,SAAS7W,KAAI,CAAC4W,oBAAoB,EAAE,CAAC+O,SAAS,EAAE;gBACjE,IAAI9O,WAAW,EAAE;kBACf,MAAM+O,UAAU,GAAG,GAAG/O,WAAW,CAACC,QAAQ,IAAID,WAAW,CAACO,QAAQ,EAAE;kBACpE,MAAMyO,eAAe,GAAGC,IAAI,CAACF,UAAU,CAAC;kBACxC3R,GAAG,CAAC8R,gBAAgB,CAAC,eAAe,EAAE,SAASF,eAAe,EAAE,CAAC;iBAClE,MAAM;kBACLxlB,OAAO,CAAC8J,IAAI,CAAC,0EAA0E,CAAC;;eAE3F,CAAC,OAAO6b,SAAS,EAAE;gBAClB3lB,OAAO,CAAC8J,IAAI,CAAC,mFAAmF,EAAE6b,SAAS,CAAC;;;WAGjH,CAAC,OAAOC,SAAS,EAAE;YAClB5lB,OAAO,CAAC8J,IAAI,CAAC,+EAA+E,EAAE8b,SAAS,CAAC;;UAG1G;UACAhS,GAAG,CAACQ,MAAM,GAAG,MAAK;YAChB,IAAIR,GAAG,CAACxI,MAAM,KAAK,GAAG,EAAE;cACtBpL,OAAO,CAACC,GAAG,CAAC,sEAAsE,CAAC;cACnF+f,QAAQ,CAAC5f,IAAI,CAACwT,GAAG,CAACxF,QAAQ,CAAC;cAC3B4R,QAAQ,CAACS,QAAQ,EAAE;aACpB,MAAM;cACLzgB,OAAO,CAACK,KAAK,CAAC,+EAA+E,EAAEuT,GAAG,CAACxI,MAAM,CAAC;cAC1G4U,QAAQ,CAAC3f,KAAK,CAAC,IAAIoV,KAAK,CAAC,gCAAgC7B,GAAG,CAACxI,MAAM,EAAE,CAAC,CAAC;;UAE3E,CAAC;UAEDwI,GAAG,CAAC8B,OAAO,GAAG,MAAK;YACjB1V,OAAO,CAACK,KAAK,CAAC,gFAAgF,CAAC;YAC/F2f,QAAQ,CAAC3f,KAAK,CAAC,IAAIoV,KAAK,CAAC,+BAA+B,CAAC,CAAC;UAC5D,CAAC;UAED;UACA7B,GAAG,CAAC+B,IAAI,CAACsP,QAAQ,CAAC;QACpB,CAAC;QAAA,gBA5CKG,SAASA,CAAA;UAAA,OAAAC,IAAA,CAAAQ,KAAA,OAAAC,SAAA;QAAA;MAAA,GA4Cd;MAEDV,SAAS,EAAE,CAACjQ,KAAK,CAAC9U,KAAK,IAAG;QACxBL,OAAO,CAACK,KAAK,CAAC,+DAA+D,EAAEA,KAAK,CAAC;QACrF2f,QAAQ,CAAC3f,KAAK,CAACA,KAAK,CAAC;MACvB,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EAAC,QAAA/C,CAAA;qBAj7BUiE,sBAAsB,EAAAxD,sDAAA,CAAAH,qFAAA;EAAA;EAAA,QAAAL,EAAA;WAAtBgE,sBAAsB;IAAAoe,OAAA,EAAtBpe,sBAAsB,CAAAqe,IAAA;IAAAC,UAAA,EAFrB;EAAM;;;;;;;;;;;;;;;;;;;;;;IEtHZ9hB,4DAAA,eAAuD;IACrDA,oDAAA,GACF;IAAAA,0DAAA,EAAO;;;;;IADLA,uDAAA,GACF;IADEA,gEAAA,OAAAqO,MAAA,CAAA4Z,cAAA,CAAA5Z,MAAA,CAAA0R,IAAA,CAAAmI,MAAA,eACF;;;;;IACAloB,4DAAA,eAAwD;IACtDA,oDAAA,GACF;IAAAA,0DAAA,EAAO;;;;;IADLA,uDAAA,GACF;IADEA,gEAAA,OAAA8K,MAAA,CAAAqd,aAAA,CAAArd,MAAA,CAAAiV,IAAA,CAAAmI,MAAA,GAAA7e,MAAA,YACF;;;;;IAqBMrJ,4DAAA,eAGC;IACCA,oDAAA,GACF;IAAAA,0DAAA,EAAO;;;;;;IADLA,uDAAA,GACF;IADEA,gEAAA,MAAAqT,OAAA,CAAA+U,eAAA,CAAA/U,OAAA,CAAA0M,IAAA,CAAAmI,MAAA,EAAAG,UAAA,QACF;;;;;IAMEroB,4DAAA,WAAyC;IACvCA,oDAAA,GACF;IAAAA,0DAAA,EAAO;;;;;;IADLA,uDAAA,GACF;IADEA,gEAAA,OAAAkd,OAAA,CAAA+K,cAAA,CAAA/K,OAAA,CAAA6C,IAAA,CAAAmI,MAAA,EAAAG,UAAA,SACF;;;;;IACAroB,4DAAA,WAA0C;IACxCA,oDAAA,GACF;IAAAA,0DAAA,EAAO;;;;;;IADLA,uDAAA,GACF;IADEA,gEAAA,OAAAsU,OAAA,CAAA6T,aAAA,CAAA7T,OAAA,CAAAyL,IAAA,CAAAmI,MAAA,EAAAG,UAAA,GAAAhf,MAAA,OACF;;;;;IAVFrJ,4DAAA,eAGC;IACCA,oDAAA,GACA;IAAAA,wDAAA,IAAAsoB,2EAAA,mBAEO;IACPtoB,wDAAA,IAAAuoB,2EAAA,mBAEO;IACTvoB,0DAAA,EAAO;;;;;;IAPLA,uDAAA,GACA;IADAA,gEAAA,MAAAiK,OAAA,CAAAue,YAAA,CAAAve,OAAA,CAAA8V,IAAA,CAAAmI,MAAA,EAAAG,UAAA,QACA;IAAOroB,uDAAA,GAAgC;IAAhCA,wDAAA,SAAAiK,OAAA,CAAA+Z,OAAA,CAAA/Z,OAAA,CAAA8V,IAAA,CAAAmI,MAAA,EAAAG,UAAA,GAAgC;IAGhCroB,uDAAA,GAAiC;IAAjCA,wDAAA,SAAAiK,OAAA,CAAAwe,QAAA,CAAAxe,OAAA,CAAA8V,IAAA,CAAAmI,MAAA,EAAAG,UAAA,GAAiC;;;;;IApB9CroB,4DAAA,cAGC;IACsBA,oDAAA,GAAa;IAAAA,0DAAA,EAAM;IACxCA,4DAAA,cAAuB;IACrBA,wDAAA,IAAA0oB,oEAAA,mBAKO;IACP1oB,wDAAA,IAAA2oB,oEAAA,mBAWO;IACT3oB,0DAAA,EAAM;;;;;;IApBeA,uDAAA,GAAa;IAAbA,gEAAA,KAAAqoB,UAAA,MAAa;IAG7BroB,uDAAA,GAAsC;IAAtCA,wDAAA,UAAA4J,OAAA,CAAAgf,YAAA,CAAAhf,OAAA,CAAAmW,IAAA,CAAAmI,MAAA,EAAAG,UAAA,GAAsC;IAMtCroB,uDAAA,GAAqC;IAArCA,wDAAA,SAAA4J,OAAA,CAAAgf,YAAA,CAAAhf,OAAA,CAAAmW,IAAA,CAAAmI,MAAA,EAAAG,UAAA,GAAqC;;;;;IAjB9CroB,4DAAA,cAGC;IACCA,wDAAA,IAAA6oB,6DAAA,kBAyBM;IACR7oB,0DAAA,EAAM;;;;;IAzBiBA,uDAAA,GAA2B;IAA3BA,wDAAA,YAAA6I,MAAA,CAAAsf,aAAA,CAAAtf,MAAA,CAAAkX,IAAA,CAAAmI,MAAA,GAA2B;;;;;IAsC5CloB,4DAAA,eAGC;IACCA,oDAAA,GACF;IAAAA,0DAAA,EAAO;;;;;IADLA,uDAAA,GACF;IADEA,gEAAA,MAAA8oB,OAAA,CAAAV,eAAA,CAAAW,QAAA,OACF;;;;;IAME/oB,4DAAA,WAA4B;IAC1BA,oDAAA,GACF;IAAAA,0DAAA,EAAO;;;;;IADLA,uDAAA,GACF;IADEA,gEAAA,OAAAgpB,OAAA,CAAAf,cAAA,CAAAc,QAAA,QACF;;;;;IACA/oB,4DAAA,WAA6B;IAC3BA,oDAAA,GACF;IAAAA,0DAAA,EAAO;;;;;IADLA,uDAAA,GACF;IADEA,gEAAA,OAAAkP,OAAA,CAAAiZ,aAAA,CAAAY,QAAA,EAAA1f,MAAA,OACF;;;;;IAVFrJ,4DAAA,eAGC;IACCA,oDAAA,GACA;IAAAA,wDAAA,IAAAipB,2EAAA,mBAEO;IACPjpB,wDAAA,IAAAkpB,2EAAA,mBAEO;IACTlpB,0DAAA,EAAO;;;;;IAPLA,uDAAA,GACA;IADAA,gEAAA,MAAAmpB,OAAA,CAAAX,YAAA,CAAAO,QAAA,OACA;IAAO/oB,uDAAA,GAAmB;IAAnBA,wDAAA,SAAAmpB,OAAA,CAAAnF,OAAA,CAAA+E,QAAA,EAAmB;IAGnB/oB,uDAAA,GAAoB;IAApBA,wDAAA,SAAAmpB,OAAA,CAAAV,QAAA,CAAAM,QAAA,EAAoB;;;;;IApBjC/oB,4DAAA,cAGC;IAC0BA,oDAAA,GAAU;IAAAA,0DAAA,EAAM;IACzCA,4DAAA,cAAyB;IACvBA,wDAAA,IAAAopB,oEAAA,mBAKO;IACPppB,wDAAA,IAAAqpB,oEAAA,mBAWO;IACTrpB,0DAAA,EAAM;;;;;;IApBmBA,uDAAA,GAAU;IAAVA,gEAAA,MAAAspB,KAAA,OAAU;IAG9BtpB,uDAAA,GAAyB;IAAzBA,wDAAA,UAAAupB,OAAA,CAAAX,YAAA,CAAAG,QAAA,EAAyB;IAMzB/oB,uDAAA,GAAwB;IAAxBA,wDAAA,SAAAupB,OAAA,CAAAX,YAAA,CAAAG,QAAA,EAAwB;;;;;IAjBjC/oB,4DAAA,cAGC;IACCA,wDAAA,IAAAwpB,6DAAA,kBAyBM;IACRxpB,0DAAA,EAAM;;;;;IAzBeA,uDAAA,GAAc;IAAdA,wDAAA,YAAAgJ,MAAA,CAAA+W,IAAA,CAAAmI,MAAA,EAAc;;;;;IA4BnCloB,4DAAA,cAGC;IAEGA,oDAAA,GACF;IAAAA,0DAAA,EAAO;;;;;IADLA,uDAAA,GACF;IADEA,gEAAA,MAAAypB,MAAA,CAAArB,eAAA,CAAAqB,MAAA,CAAA1J,IAAA,CAAAmI,MAAA,QACF;;;;;IAIFloB,4DAAA,cAGC;IACCA,uDAAA,mCAK4B;IAC9BA,0DAAA,EAAM;;;;;IALFA,uDAAA,GAAkB;IAAlBA,wDAAA,SAAA0pB,OAAA,CAAA3J,IAAA,CAAAmI,MAAA,EAAkB,SAAAwB,OAAA,CAAAC,WAAA,CAAAzB,MAAA,uBAAAwB,OAAA,CAAAE,gBAAA,kBAAAF,OAAA,CAAAG,YAAA;;;;;IAvF1B7pB,4DAAA,cAGC;IAGGA,wDAAA,IAAA8pB,uDAAA,kBA8BM;IAGN9pB,wDAAA,IAAA+pB,uDAAA,kBA8BM;IAGN/pB,wDAAA,IAAAgqB,uDAAA,kBAOM;IAGNhqB,wDAAA,IAAAiqB,uDAAA,kBAUM;IACRjqB,0DAAA,EAAM;;;;;IAtFDA,uDAAA,GAAyB;IAAzBA,wDAAA,SAAAgL,MAAA,CAAAyd,QAAA,CAAAzd,MAAA,CAAA+U,IAAA,CAAAmI,MAAA,GAAyB;IAiCzBloB,uDAAA,GAAwB;IAAxBA,wDAAA,SAAAgL,MAAA,CAAAgZ,OAAA,CAAAhZ,MAAA,CAAA+U,IAAA,CAAAmI,MAAA,GAAwB;IAiCxBloB,uDAAA,GAA8B;IAA9BA,wDAAA,UAAAgL,MAAA,CAAA4d,YAAA,CAAA5d,MAAA,CAAA+U,IAAA,CAAAmI,MAAA,GAA8B;IAU9BloB,uDAAA,GAA6B;IAA7BA,wDAAA,SAAAgL,MAAA,CAAA4d,YAAA,CAAA5d,MAAA,CAAA+U,IAAA,CAAAmI,MAAA,GAA6B;;;;;;IA3GtCloB,4DAAA,aAGC;IAKGA,wDAAA,mBAAAkqB,gEAAA;MAAA,MAAA1gB,WAAA,GAAAxJ,2DAAA,CAAAmqB,IAAA;MAAA,MAAAjC,MAAA,GAAA1e,WAAA,CAAAG,SAAA;MAAA,MAAAygB,OAAA,GAAApqB,2DAAA;MAAA,OAASA,yDAAA,CAAAoqB,OAAA,CAAAC,UAAA,CAAWD,OAAA,CAAAT,WAAA,CAAAzB,MAAA,CAAgB,CAAC;IAAA,EAAC;IAEtCloB,4DAAA,aAA0B;IACEA,oDAAA,GAAkD;IAAAA,0DAAA,EAAO;IACnFA,4DAAA,cAA0B;IAAAA,oDAAA,GAAoB;IAAAA,0DAAA,EAAO;IACrDA,4DAAA,cAA2B;IAAAA,oDAAA,GAA+B;IAAAA,0DAAA,EAAO;IACjEA,wDAAA,IAAAsqB,iDAAA,kBAEO;IACPtqB,wDAAA,KAAAuqB,kDAAA,kBAEO;IACTvqB,0DAAA,EAAM;IAIRA,wDAAA,KAAAwqB,iDAAA,iBA8FM;IACRxqB,0DAAA,EAAM;;;;;IAhHFA,uDAAA,GAAmD;IAAnDA,yDAAA,aAAAkJ,MAAA,CAAAuhB,cAAA,CAAAvhB,MAAA,CAAAygB,WAAA,CAAAzB,MAAA,GAAmD;IAIvBloB,uDAAA,GAAkD;IAAlDA,+DAAA,CAAAkJ,MAAA,CAAAuhB,cAAA,CAAAvhB,MAAA,CAAAygB,WAAA,CAAAzB,MAAA,yBAAkD;IAClDloB,uDAAA,GAAoB;IAApBA,+DAAA,CAAAkJ,MAAA,CAAAwhB,SAAA,CAAAxC,MAAA,EAAoB;IACnBloB,uDAAA,GAA+B;IAA/BA,gEAAA,MAAAkJ,MAAA,CAAAsf,YAAA,CAAAtf,MAAA,CAAA6W,IAAA,CAAAmI,MAAA,QAA+B;IAC7BloB,uDAAA,GAAwB;IAAxBA,wDAAA,SAAAkJ,MAAA,CAAA8a,OAAA,CAAA9a,MAAA,CAAA6W,IAAA,CAAAmI,MAAA,GAAwB;IAGxBloB,uDAAA,GAAyB;IAAzBA,wDAAA,SAAAkJ,MAAA,CAAAuf,QAAA,CAAAvf,MAAA,CAAA6W,IAAA,CAAAmI,MAAA,GAAyB;IASvDloB,uDAAA,GAAsC;IAAtCA,wDAAA,SAAAkJ,MAAA,CAAAuhB,cAAA,CAAAvhB,MAAA,CAAAygB,WAAA,CAAAzB,MAAA,GAAsC;;;ADzB7C,MAKaniB,2BAA2B;EALxCzF,YAAA;IAMW,KAAAyf,IAAI,GAAQ,IAAI;IAChB,KAAA4K,IAAI,GAAW,EAAE;IACjB,KAAAf,gBAAgB,GAAgB,IAAIgB,GAAG,EAAE;IACzC,KAAAf,YAAY,GAA2B,MAAK,CAAE,CAAC;IAExD,KAAA9F,KAAK,GAAGA,KAAK;IACb,KAAApB,IAAI,GAAGA,IAAI;;EAEX;;;EAGA6F,YAAYA,CAACrK,KAAU;IACrB,IAAIA,KAAK,KAAK,IAAI,EAAE,OAAO,MAAM;IACjC,IAAIA,KAAK,KAAKyB,SAAS,EAAE,OAAO,WAAW;IAC3C,IAAImE,KAAK,CAACC,OAAO,CAAC7F,KAAK,CAAC,EAAE,OAAO,OAAO;IACxC,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE,OAAO,QAAQ;IAC9C,OAAO,OAAOA,KAAK;EACrB;EAEA;;;EAGAyK,YAAYA,CAACzK,KAAU;IACrB,OAAOA,KAAK,KAAK,IAAI,IACdA,KAAK,KAAKyB,SAAS,KAClB,OAAOzB,KAAK,KAAK,QAAQ,IAAI4F,KAAK,CAACC,OAAO,CAAC7F,KAAK,CAAC,CAAC;EAC5D;EAEA;;;EAGAiK,eAAeA,CAACjK,KAAU;IACxB,IAAIA,KAAK,KAAK,IAAI,EAAE,OAAO,MAAM;IACjC,IAAIA,KAAK,KAAKyB,SAAS,EAAE,OAAO,WAAW;IAC3C,IAAI,OAAOzB,KAAK,KAAK,QAAQ,EAAE,OAAO,IAAIA,KAAK,GAAG;IAClD,IAAI,OAAOA,KAAK,KAAK,SAAS,EAAE,OAAOA,KAAK,CAAChO,QAAQ,EAAE;IACvD,IAAI,OAAOgO,KAAK,KAAK,QAAQ,EAAE,OAAOA,KAAK,CAAChO,QAAQ,EAAE;IACtD,OAAOwS,IAAI,CAACC,SAAS,CAACzE,KAAK,CAAC;EAC9B;EAEA;;;EAGAgK,aAAaA,CAAC0C,GAAQ;IACpB,IAAI,CAACA,GAAG,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE,OAAO,EAAE;IAC9C,OAAOC,MAAM,CAACC,IAAI,CAACF,GAAG,CAAC;EACzB;EAEA;;;EAGA5C,cAAcA,CAAC+C,GAAU;IACvB,OAAOjH,KAAK,CAACC,OAAO,CAACgH,GAAG,CAAC,GAAGA,GAAG,CAAC3hB,MAAM,GAAG,CAAC;EAC5C;EAEA;;;EAGAof,QAAQA,CAACtK,KAAU;IACjB,OAAOA,KAAK,KAAK,IAAI,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAI,CAAC4F,KAAK,CAACC,OAAO,CAAC7F,KAAK,CAAC;EAC7E;EAEA;;;EAGA6F,OAAOA,CAAC7F,KAAU;IAChB,OAAO4F,KAAK,CAACC,OAAO,CAAC7F,KAAK,CAAC;EAC7B;EAEA;;;EAGAuM,SAASA,CAACO,GAAW;IACnB,OAAOA,GAAG,CAACnR,OAAO,CAAC,UAAU,EAAE,KAAK,CAAC,CAC1BA,OAAO,CAAC,IAAI,EAAEoR,GAAG,IAAIA,GAAG,CAACC,WAAW,EAAE,CAAC,CACvCC,IAAI,EAAE;EACnB;EAEA;;;EAGAzB,WAAWA,CAACsB,GAAW;IACrB,OAAO,IAAI,CAACN,IAAI,GAAG,GAAG,IAAI,CAACA,IAAI,IAAIM,GAAG,EAAE,GAAGA,GAAG;EAChD;EAEA;;;EAGAR,cAAcA,CAACE,IAAY;IACzB,OAAO,IAAI,CAACf,gBAAgB,CAACyB,GAAG,CAACV,IAAI,CAAC;EACxC;EAEA;;;EAGAN,UAAUA,CAACM,IAAY;IACrB,IAAI,CAACd,YAAY,CAACc,IAAI,CAAC;EACzB;EAAC,QAAAprB,CAAA;qBAlGUwG,2BAA2B;EAAA;EAAA,QAAAvG,EAAA;UAA3BuG,2BAA2B;IAAAtC,SAAA;IAAAuI,MAAA;MAAA+T,IAAA;MAAA4K,IAAA;MAAAf,gBAAA;MAAAC,YAAA;IAAA;IAAA9hB,KAAA;IAAAC,IAAA;IAAAkE,MAAA;IAAAjE,QAAA,WAAAqjB,qCAAA1nB,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCPxC5D,4DAAA,aAAkC;QAChCA,wDAAA,IAAAurB,0CAAA,kBAuHM;QACRvrB,0DAAA,EAAM;;;QAvHcA,uDAAA,GAAsB;QAAtBA,wDAAA,YAAA6D,GAAA,CAAAskB,aAAA,CAAAtkB,GAAA,CAAAkc,IAAA,EAAsB;;;4HDK7Bha,2BAA2B;IAAAylB,MAAA;EAAA;;;;;;;;;;;;;;;;;;;;;;;;;IGEtCxrB,4DAAA,aAA+C;IAIdA,oDAAA,0BAAmB;IAAAA,0DAAA,EAAO;IACnDA,4DAAA,eAAyB;IAAAA,oDAAA,GAAkD;IAAAA,0DAAA,EAAO;IAEpFA,4DAAA,cAAuB;IACIA,oDAAA,uBAAe;IAAAA,0DAAA,EAAO;IAC/CA,4DAAA,gBAAyB;IAAAA,oDAAA,IAAsC;IAAAA,0DAAA,EAAO;IAK5EA,4DAAA,eAAyB;IAEjBA,oDAAA,+BAAuB;IAAAA,0DAAA,EAAK;IAChCA,4DAAA,eAA6B;IAGzBA,wDAAA,mBAAAyrB,qEAAA;MAAAzrB,2DAAA,CAAA0rB,GAAA;MAAA,MAAArd,MAAA,GAAArO,2DAAA;MAAA,OAASA,yDAAA,CAAAqO,MAAA,CAAAub,gBAAA,CAAA+B,KAAA,EAAwB;IAAA,EAAC;IAElC3rB,oDAAA,sBACF;IAAAA,0DAAA,EAAS;IACTA,4DAAA,kBAGC;IADCA,wDAAA,mBAAA4rB,qEAAA;MAAA5rB,2DAAA,CAAA0rB,GAAA;MAAA,MAAA1gB,MAAA,GAAAhL,2DAAA;MAAA,OAASA,yDAAA,CAAAgL,MAAA,CAAA6gB,SAAA,EAAW;IAAA,EAAC;IAErB7rB,oDAAA,oBACF;IAAAA,0DAAA,EAAS;IAIPA,4DAAA,eAA0B;IAC9BA,uDAAA,oCAK4B;IAC9BA,0DAAA,EAAM;;;;IAnCuBA,uDAAA,GAAkD;IAAlDA,gEAAA,KAAAkJ,MAAA,CAAAyZ,IAAA,CAAAC,SAAA,CAAA1Z,MAAA,CAAAtI,UAAA,EAAAyI,MAAA,gBAAkD;IAIlDrJ,uDAAA,GAAsC;IAAtCA,+DAAA,CAAAkJ,MAAA,CAAAif,aAAA,CAAAjf,MAAA,CAAAtI,UAAA,EAAAyI,MAAA,CAAsC;IA0B/DrJ,uDAAA,IAAmB;IAAnBA,wDAAA,SAAAkJ,MAAA,CAAAtI,UAAA,CAAmB,iCAAAsI,MAAA,CAAA0gB,gBAAA,kBAAA1gB,MAAA,CAAAmhB,UAAA,CAAAyB,IAAA,CAAA5iB,MAAA;;;;;IAS3BlJ,4DAAA,cAA2C;IAEXA,oDAAA,mBAAE;IAAAA,0DAAA,EAAM;IACpCA,4DAAA,SAAI;IAAAA,oDAAA,iCAA0B;IAAAA,0DAAA,EAAK;IACnCA,4DAAA,QAAG;IAAAA,oDAAA,wEAAiE;IAAAA,0DAAA,EAAI;;;ADtD9E,MAKa8F,4BAA4B;EASvCxF,YAAA;IARS,KAAAM,UAAU,GAAsB,IAAI;IAE7C,KAAAF,OAAO,GAAG,KAAK;IACf,KAAA4B,KAAK,GAAkB,IAAI;IAC3B,KAAAsnB,gBAAgB,GAAgB,IAAIgB,GAAG,EAAE;IACzC,KAAA7G,KAAK,GAAGA,KAAK,CAAC,CAAC;IACf,KAAApB,IAAI,GAAGA,IAAI,CAAC,CAAC;EAEG;;EAEhB5hB,QAAQA,CAAA,GACR;EAEA;;;;EAIAgrB,aAAaA,CAACC,UAAkB;IAC9B,IAAI,CAAC3B,UAAU,CAAC2B,UAAU,CAAC;EAC7B;EAEA;;;;;EAKAC,iBAAiBA,CAACD,UAAkB;IAClC,OAAO,IAAI,CAACvB,cAAc,CAACuB,UAAU,CAAC;EACxC;EAEA;;;;;EAKAxD,YAAYA,CAACrK,KAAU;IACrB,IAAIA,KAAK,KAAK,IAAI,EAAE,OAAO,MAAM;IACjC,IAAIA,KAAK,KAAKyB,SAAS,EAAE,OAAO,WAAW;IAC3C,IAAImE,KAAK,CAACC,OAAO,CAAC7F,KAAK,CAAC,EAAE,OAAO,OAAO;IACxC,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE,OAAO,QAAQ;IAC9C,OAAO,OAAOA,KAAK;EACrB;EAEA;;;;;EAKAyK,YAAYA,CAACzK,KAAU;IACrB,OAAOA,KAAK,KAAK,IAAI,IACdA,KAAK,KAAKyB,SAAS,KAClB,OAAOzB,KAAK,KAAK,QAAQ,IAAI4F,KAAK,CAACC,OAAO,CAAC7F,KAAK,CAAC,CAAC;EAC5D;EAEA;;;;;EAKAiK,eAAeA,CAACjK,KAAU;IACxB,IAAIA,KAAK,KAAK,IAAI,EAAE,OAAO,MAAM;IACjC,IAAIA,KAAK,KAAKyB,SAAS,EAAE,OAAO,WAAW;IAC3C,IAAI,OAAOzB,KAAK,KAAK,QAAQ,EAAE,OAAO,IAAIA,KAAK,GAAG;IAClD,IAAI,OAAOA,KAAK,KAAK,SAAS,EAAE,OAAOA,KAAK,CAAChO,QAAQ,EAAE;IACvD,IAAI,OAAOgO,KAAK,KAAK,QAAQ,EAAE,OAAOA,KAAK,CAAChO,QAAQ,EAAE;IACtD,OAAOwS,IAAI,CAACC,SAAS,CAACzE,KAAK,CAAC;EAC9B;EAEA;;;;;EAKAgK,aAAaA,CAAC0C,GAAQ;IACpB,IAAI,CAACA,GAAG,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE,OAAO,EAAE;IAC9C,OAAOC,MAAM,CAACC,IAAI,CAACF,GAAG,CAAC;EACzB;EAEA;;;;;EAKA5C,cAAcA,CAAC+C,GAAU;IACvB,OAAOjH,KAAK,CAACC,OAAO,CAACgH,GAAG,CAAC,GAAGA,GAAG,CAAC3hB,MAAM,GAAG,CAAC;EAC5C;EAEA;;;;;EAKAqhB,SAASA,CAACO,GAAW;IACnB,OAAOA,GAAG,CAACnR,OAAO,CAAC,UAAU,EAAE,KAAK,CAAC,CAC1BA,OAAO,CAAC,IAAI,EAAEoR,GAAG,IAAIA,GAAG,CAACC,WAAW,EAAE,CAAC,CACvCC,IAAI,EAAE;EACnB;EAEA;;;;;EAKA3C,QAAQA,CAACtK,KAAU;IACjB,OAAOA,KAAK,KAAK,IAAI,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAI,CAAC4F,KAAK,CAACC,OAAO,CAAC7F,KAAK,CAAC;EAC7E;EAEA;;;;;EAKA6F,OAAOA,CAAC7F,KAAU;IAChB,OAAO4F,KAAK,CAACC,OAAO,CAAC7F,KAAK,CAAC;EAC7B;EAEA;;;EAGA0N,SAASA,CAAA;IACP,IAAI,IAAI,CAACjrB,UAAU,EAAE;MACnB,IAAI,CAACgpB,gBAAgB,CAAC+B,KAAK,EAAE;MAC7B,IAAI,CAACO,kBAAkB,CAAC,IAAI,CAACtrB,UAAU,EAAE,EAAE,CAAC;;EAEhD;EAEA;;;;;EAKAsrB,kBAAkBA,CAACrB,GAAQ,EAAEF,IAAY;IACvC,IAAI,CAACE,GAAG,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE;IAErC,MAAME,IAAI,GAAG,IAAI,CAAC5C,aAAa,CAAC0C,GAAG,CAAC;IACpCE,IAAI,CAACpf,OAAO,CAACsf,GAAG,IAAG;MACjB,MAAMkB,QAAQ,GAAGxB,IAAI,GAAG,GAAGA,IAAI,IAAIM,GAAG,EAAE,GAAGA,GAAG;MAC9C,IAAI,CAACrB,gBAAgB,CAACwC,GAAG,CAACD,QAAQ,CAAC;MAEnC;MACA,IAAI,IAAI,CAACvD,YAAY,CAACiC,GAAG,CAACI,GAAG,CAAC,CAAC,EAAE;QAC/B,IAAI,CAACiB,kBAAkB,CAACrB,GAAG,CAACI,GAAG,CAAC,EAAEkB,QAAQ,CAAC;;IAE/C,CAAC,CAAC;EACJ;EAEA;;;;;;EAMAE,cAAcA,CAACxB,GAAQ,EAAEF,IAAY;IACnC,IAAI,CAACA,IAAI,EAAE,OAAOE,GAAG;IACrB,OAAOF,IAAI,CAACnG,KAAK,CAAC,GAAG,CAAC,CAAC8H,MAAM,CAAC,CAAC5b,OAAO,EAAEua,GAAG,KAAKva,OAAO,GAAGua,GAAG,CAAC,EAAEJ,GAAG,CAAC;EACtE;EAEA;;;;;EAKAJ,cAAcA,CAACE,IAAY;IACzB,OAAO,IAAI,CAACf,gBAAgB,CAACyB,GAAG,CAACV,IAAI,CAAC;EACxC;EAEA;;;;EAIAN,UAAUA,CAACM,IAAY;IACrB,IAAI,IAAI,CAACf,gBAAgB,CAACyB,GAAG,CAACV,IAAI,CAAC,EAAE;MACnC,IAAI,CAACf,gBAAgB,CAAC2C,MAAM,CAAC5B,IAAI,CAAC;KACnC,MAAM;MACL,IAAI,CAACf,gBAAgB,CAACwC,GAAG,CAACzB,IAAI,CAAC;;EAEnC;EAAC,QAAAprB,CAAA;qBAjLUuG,4BAA4B;EAAA;EAAA,QAAAtG,EAAA;UAA5BsG,4BAA4B;IAAArC,SAAA;IAAAuI,MAAA;MAAApL,UAAA;IAAA;IAAAmH,KAAA;IAAAC,IAAA;IAAAkE,MAAA;IAAAjE,QAAA,WAAAukB,sCAAA5oB,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCRzC5D,4DAAA,aAA4C;QAEpCA,oDAAA,2BAAoB;QAAAA,0DAAA,EAAK;QAC7BA,4DAAA,aAA2B;QACzBA,uDAAA,cAAkE;QAClEA,4DAAA,cAA0B;QAAAA,oDAAA,GAA8D;QAAAA,0DAAA,EAAO;QAInGA,wDAAA,IAAAysB,2CAAA,kBA0CM;QAENzsB,wDAAA,IAAA0sB,2CAAA,iBAMM;QACR1sB,0DAAA,EAAM;;;QAxD+BA,uDAAA,GAA2B;QAA3BA,yDAAA,WAAA6D,GAAA,CAAAjD,UAAA,CAA2B;QAChCZ,uDAAA,GAA8D;QAA9DA,+DAAA,CAAA6D,GAAA,CAAAjD,UAAA,+CAA8D;QAI/DZ,uDAAA,GAAgB;QAAhBA,wDAAA,SAAA6D,GAAA,CAAAjD,UAAA,CAAgB;QA4CrBZ,uDAAA,GAAiB;QAAjBA,wDAAA,UAAA6D,GAAA,CAAAjD,UAAA,CAAiB;;;;;;;;;;;;;;;;;;;;;;ACrD8B;AAElE,MAAM8G,WAAW,GAAG;EACvBE,UAAU,EAAE+kB,sDAAY;EACxB9kB,cAAc,EAAEA,wDAAc;EAC9BC,SAAS,EAAEA,mDAAS;EACpB8kB,UAAU,EAAE;CACb;;;;;;;;;;;;;;ACL0C;AAG7CC,sEAAA,EAAwB,CAACE,eAAe,CAAC9lB,sDAAS,CAAC,CAChDmQ,KAAK,CAAC4V,GAAG,IAAI/qB,OAAO,CAACK,KAAK,CAAC0qB,GAAG,CAAC,CAAC;;;;;;;;;;;;;;;;ACNnC;AACA;AACO,MAAML,YAAY,GAAG,0BAA0B;AAC/C,MAAM9kB,cAAc,GAAG,QAAQ;AAC/B,MAAMC,SAAS,GAAG,kBAAkB","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/component-version/component-version.component.ts","./src/app/component-version/component-version.component.html","./src/app/document-list/document-list.component.ts","./src/app/document-list/document-list.component.html","./src/app/document-tracking/document-tracking.component.ts","./src/app/document-tracking/document-tracking.component.html","./src/app/extract-download/extract-download.component.ts","./src/app/extract-download/extract-download.component.html","./src/app/patient-selection/patient-selection.component.ts","./src/app/patient-selection/patient-selection.component.html","./src/app/services/cerner-action.service.ts","./src/app/services/document-extract.service.ts","./src/app/system-configuration/nested-object-viewer.component.ts","./src/app/system-configuration/nested-object-viewer.component.html","./src/app/system-configuration/system-configuration.component.ts","./src/app/system-configuration/system-configuration.component.html","./src/environments/environment.ts","./src/main.ts","./src/app/version.js"],"sourcesContent":["import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {useHash: true})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from \"@angular/router\";\nimport { mPageService } from '@clinicaloffice/clinical-office-mpage-core';\nimport { CUSTOM_DATE_FORMATS } from './app.module';\nimport { DocumentExtractService, DmsMediaInstanceRequest } from './services/document-extract.service';\nimport { DocumentTrackingComponent } from './document-tracking/document-tracking.component';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  @ViewChild(DocumentTrackingComponent) documentTrackingComponent!: DocumentTrackingComponent;\n  \n  loading = true;\n  configLoaded = false;\n  configData: any = null;\n  showBackToTop = false;\n  patientInfo: any = null;\n\n  constructor(\n    public activatedRoute: ActivatedRoute, \n    public mPage: mPageService,\n    private documentService: DocumentExtractService\n  ) {}\n\n  ngOnInit(): void {\n    // Grab any parameters in the URL (Used in Cerner Components)\n    this.activatedRoute.queryParams.subscribe(params => {\n      this.mPage.personId = params['personId'] ? parseInt(params['personId']) : this.mPage.personId;\n      this.mPage.encntrId = params['encounterId'] ? parseInt(params['encounterId']) : this.mPage.encntrId;\n      this.mPage.prsnlId = params['userId'] ? parseInt(params['userId']) : this.mPage.prsnlId;\n    });\n\n    // Perform MPage Initialization\n    setTimeout((e: any) => {\n      this.mPage.setMaxInstances(4, true, 'ORG', false);\n      \n      // Wait for service to be ready before loading configuration\n      this.waitForServiceReady();\n    }, 0);\n\n    // Setup back to top functionality\n    this.setupBackToTop();\n  }\n\n  async waitForServiceReady(): Promise<void> {\n    while (!this.mPage.serviceReady) {\n      // Polling loop to wait for MPage service initialization\n      // Service readiness is required before making API calls to Cerner\n      await new Promise(resolve => setTimeout(resolve, 1000));\n    }\n    \n    // MPage service is now ready for API interactions\n    console.log('MPage service is ready, loading configuration...');\n    \n    // Load configuration data\n    this.loadConfiguration();\n  }\n\n  private loadConfiguration(): void {\n    this.documentService.getConfigData().subscribe({\n      next: (configData) => {\n        console.log('Configuration loaded successfully:', configData);\n        this.configData = configData;\n        this.configLoaded = true;\n        this.loading = false;\n      },\n      error: (error) => {\n        console.error('Failed to load configuration:', error);\n        this.loading = false;\n        // Continue without configuration for now\n      }\n    });\n  }\n\n  /**\n   * Setup back to top functionality\n   */\n  private setupBackToTop(): void {\n    window.addEventListener('scroll', () => {\n      this.showBackToTop = window.pageYOffset > 400;\n    });\n  }\n\n  /**\n   * Scroll to top of the page\n   */\n  scrollToTop(): void {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n  }\n\n  /**\n   * Handle patient selection from patient-selection component\n   * @param patientInfo The selected patient information\n   */\n  onPatientSelected(patientInfo: any): void {\n    this.patientInfo = patientInfo;\n  }\n\n  /**\n   * Handle download request from document-list component\n   * @param downloadData The download request data\n   */\n  onDownloadRequest(downloadData: {personId: number, encntrId: number, dmsMediaInstanceRequests: DmsMediaInstanceRequest[]}): void {\n    // Pass the download request to the document tracking component\n    if (this.documentTrackingComponent) {\n      this.documentTrackingComponent.handleDownloadRequest(downloadData);\n    }\n  }\n\n}\n","<div class=\"app-container\">\n  <!-- Hidden element for Cerner APPLINK actions -->\n  <a id=\"applink\" href=\"#\" style=\"display: none;\"></a>\n  \n  <app-component-version></app-component-version>\n  \n  <h1>CHS Document Extract</h1>\n  \n  <div class=\"loading-overlay\" *ngIf=\"loading\">\n    <div class=\"loading-content\">\n      <div class=\"loading-spinner\"></div>\n      <p>Initializing application...</p>\n    </div>\n  </div>\n  \n  <div class=\"main-content\" [class.loading]=\"loading\">\n    <app-patient-selection [configLoaded]=\"configLoaded\" (patientSelected)=\"onPatientSelected($event)\"></app-patient-selection>\n    \n    <app-document-list \n      [documents]=\"patientInfo?.documents || []\" \n      [loading]=\"loading\"\n      [patientInfo]=\"patientInfo\"\n      (downloadRequest)=\"onDownloadRequest($event)\">\n    </app-document-list>\n    \n    <app-document-tracking \n      [currentPatient]=\"patientInfo\"\n      (downloadRequest)=\"onDownloadRequest($event)\">\n    </app-document-tracking>\n    \n    <app-system-configuration [configData]=\"configData\"></app-system-configuration>\n  </div>\n\n  <!-- Back to Top Button -->\n  <div class=\"back-to-top\" \n       [class.visible]=\"showBackToTop\" \n       (click)=\"scrollToTop()\"\n       title=\"Back to top\">\n    <i class=\"back-to-top-icon\">↑</i>\n  </div>\n  \n  <mpage-log-component></mpage-log-component>\n</div>\n","import { NgModule, ErrorHandler, APP_INITIALIZER } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ClinicalOfficeMpageModule, MaterialModule, ErrorHandlerService, ConfigService } from '@clinicaloffice/clinical-office-mpage-core'\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MatLuxonDateModule, LuxonDateAdapter } from '@angular/material-luxon-adapter';\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from '@angular/material/form-field';\nimport { ComponentVersionComponent } from './component-version/component-version.component';\nimport { PatientSelectionComponent } from './patient-selection/patient-selection.component';\nimport { DocumentListComponent } from './document-list/document-list.component';\nimport { DocumentTrackingComponent } from './document-tracking/document-tracking.component';\nimport { SystemConfigurationComponent } from './system-configuration/system-configuration.component';\nimport { NestedObjectViewerComponent } from './system-configuration/nested-object-viewer.component';\nimport { ExtractDownloadComponent } from './extract-download/extract-download.component';\nimport { NZ_I18N } from 'ng-zorro-antd/i18n';\nimport { en_US } from 'ng-zorro-antd/i18n';\nimport { registerLocaleData } from '@angular/common';\nimport en from '@angular/common/locales/en';\nimport { HttpClientModule } from '@angular/common/http';\n\nregisterLocaleData(en);\n\nexport const configFactory = (configService: ConfigService) => {\n  return () => configService.loadConfig();\n}\n\n// Custom date formats\nexport const CUSTOM_DATE_FORMATS = {\n  parse: {\n    dateInput: ['dd-MMM-yyyy'],\n  },\n  display: {\n    dateInput: 'dd-MMM-yyyy',\n    dateTimeLabel: 'dd-MMM-yyyy HH:mm',\n    monthYearLabel: 'MMM yyyy',\n    dateA11yLabel: 'LL',\n    monthYearA11yLabel: 'MMMM yyyy',\n  }\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ComponentVersionComponent,\n    PatientSelectionComponent,\n    DocumentListComponent,\n    DocumentTrackingComponent,\n    SystemConfigurationComponent,\n    NestedObjectViewerComponent,\n    ExtractDownloadComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    ClinicalOfficeMpageModule,\n    MaterialModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatLuxonDateModule,\n    HttpClientModule\n    //    MatMomentDateModule\n  ],\n  providers: [\n    {\n      provide: APP_INITIALIZER,\n      useFactory: configFactory,\n      deps: [ConfigService],\n      multi: true\n    },\n    { provide: ErrorHandler, useClass: ErrorHandlerService },\n    { provide: DateAdapter, useClass: LuxonDateAdapter, deps: [MAT_DATE_LOCALE] },\n//    { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { appearance: 'outline' } },\n    {\n      provide: MAT_DATE_FORMATS, useValue: CUSTOM_DATE_FORMATS\n    },\n{ provide: NZ_I18N, useValue: en_US }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import { Component } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n\n@Component({\n  selector: 'app-component-version',\n  templateUrl: './component-version.component.html',\n  styleUrls: ['./component-version.component.scss']\n})\nexport class ComponentVersionComponent {\n\n  currentApplicationVersion = environment.appVersion;\n  packageVersion = environment.packageVersion;\n  gitBranch = environment.gitBranch;\n\n}\n","{{currentApplicationVersion}}","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { PatientDocument, PatientInfo, DmsMediaInstanceRequest } from '../services/document-extract.service';\n\n@Component({\n  selector: 'app-document-list',\n  templateUrl: './document-list.component.html',\n  styleUrls: ['./document-list.component.scss']\n})\nexport class DocumentListComponent implements OnInit {\n  @Input() documents: PatientDocument[] = [];\n  @Input() loading = false;\n  @Input() patientInfo: PatientInfo | null = null;\n  @Output() documentSelectionChange = new EventEmitter<PatientDocument[]>();\n  @Output() downloadRequest = new EventEmitter<{personId: number, encntrId: number, dmsMediaInstanceRequests: DmsMediaInstanceRequest[]}>();\n\n  selectedDocuments: PatientDocument[] = [];\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  /**\n   * Toggles selection of a document\n   * @param document The document to toggle\n   */\n  toggleDocumentSelection(document: PatientDocument): void {\n    console.log('[DocumentListComponent] toggleDocumentSelection() - Toggling document:', document);\n    const index = this.selectedDocuments.findIndex(doc => doc.id === document.id);\n    \n    if (index > -1) {\n      // Remove from selection\n      console.log('[DocumentListComponent] toggleDocumentSelection() - Removing document from selection');\n      this.selectedDocuments.splice(index, 1);\n      document.selected = false;\n    } else {\n      // Add to selection\n      console.log('[DocumentListComponent] toggleDocumentSelection() - Adding document to selection');\n      this.selectedDocuments.push(document);\n      document.selected = true;\n    }\n\n    console.log('[DocumentListComponent] toggleDocumentSelection() - Updated selected documents:', this.selectedDocuments);\n    this.documentSelectionChange.emit(this.selectedDocuments);\n  }\n\n  /**\n   * Selects all documents\n   */\n  selectAll(): void {\n    console.log('[DocumentListComponent] selectAll() - Selecting all documents, count:', this.documents.length);\n    this.documents.forEach(doc => {\n      doc.selected = true;\n    });\n    this.selectedDocuments = [...this.documents];\n    console.log('[DocumentListComponent] selectAll() - All documents selected:', this.selectedDocuments);\n    this.documentSelectionChange.emit(this.selectedDocuments);\n  }\n\n  /**\n   * Deselects all documents\n   */\n  deselectAll(): void {\n    console.log('[DocumentListComponent] deselectAll() - Deselecting all documents');\n    this.documents.forEach(doc => {\n      doc.selected = false;\n    });\n    this.selectedDocuments = [];\n    console.log('[DocumentListComponent] deselectAll() - All documents deselected');\n    this.documentSelectionChange.emit(this.selectedDocuments);\n  }\n\n  /**\n   * Initiates download of selected documents\n   */\n  downloadSelected(): void {\n    console.log('[DocumentListComponent] downloadSelected() - Starting download for selected documents');\n    console.log('[DocumentListComponent] downloadSelected() - Selected documents count:', this.selectedDocuments.length);\n    console.log('[DocumentListComponent] downloadSelected() - Patient info:', this.patientInfo);\n    \n    if (this.selectedDocuments.length > 0 && this.patientInfo) {\n      const dmsMediaInstanceRequests: DmsMediaInstanceRequest[] = this.selectedDocuments.map(doc => ({\n        mediaInstanceId: parseInt(doc.id)\n      }));\n      \n      console.log('[DocumentListComponent] downloadSelected() - Created download requests:', dmsMediaInstanceRequests);\n      \n      const downloadData = {\n        personId: this.patientInfo.personId,\n        encntrId: this.patientInfo.encntrId,\n        dmsMediaInstanceRequests: dmsMediaInstanceRequests\n      };\n      \n      console.log('[DocumentListComponent] downloadSelected() - Emitting download request:', downloadData);\n      this.downloadRequest.emit(downloadData);\n    } else {\n      console.warn('[DocumentListComponent] downloadSelected() - No documents selected or patient info missing');\n    }\n  }\n\n  /**\n   * Checks if all documents are selected\n   */\n  get allSelected(): boolean {\n    return this.documents.length > 0 && this.selectedDocuments.length === this.documents.length;\n  }\n\n  /**\n   * Checks if some documents are selected\n   */\n  get someSelected(): boolean {\n    return this.selectedDocuments.length > 0 && this.selectedDocuments.length < this.documents.length;\n  }\n\n\n} ","<div class=\"document-list-container\">\n  <div class=\"list-header\">\n    <h3>Patient Documents</h3>\n    <div class=\"header-actions\" *ngIf=\"documents.length > 0\">\n      <button \n        class=\"btn btn-outline\"\n        (click)=\"selectAll()\"\n        [disabled]=\"allSelected\"\n      >\n        Select All\n      </button>\n      <button \n        class=\"btn btn-outline\"\n        (click)=\"deselectAll()\"\n        [disabled]=\"selectedDocuments.length === 0\"\n      >\n        Deselect All\n      </button>\n      <button \n        class=\"btn btn-primary\"\n        (click)=\"downloadSelected()\"\n        [disabled]=\"selectedDocuments.length === 0\"\n      >\n        Download Selected ({{ selectedDocuments.length }})\n      </button>\n    </div>\n  </div>\n\n  <div class=\"loading-container\" *ngIf=\"loading\">\n    <div class=\"loading-spinner\"></div>\n    <p>Loading documents...</p>\n  </div>\n\n  <div class=\"no-documents\" *ngIf=\"!loading && documents.length === 0\">\n    <p>No documents found for this patient.</p>\n  </div>\n\n  <div class=\"documents-table\" *ngIf=\"!loading && documents.length > 0\">\n    <table>\n      <thead>\n        <tr>\n          <th class=\"checkbox-column\">\n            <input \n              type=\"checkbox\" \n              [checked]=\"allSelected\"\n              [indeterminate]=\"someSelected\"\n              (change)=\"allSelected ? deselectAll() : selectAll()\"\n            />\n          </th>\n          <th>Document Name</th>\n          <th>Content Type</th>\n          <th>Date Created</th>\n          <th>Size</th>\n          <th>Media Type</th>\n          <th>Application</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr \n          *ngFor=\"let document of documents\"\n          [class.selected]=\"document.selected\"\n          (click)=\"toggleDocumentSelection(document)\"\n        >\n          <td class=\"checkbox-column\">\n            <input \n              type=\"checkbox\" \n              [checked]=\"document.selected\"\n              (click)=\"$event.stopPropagation()\"\n              (change)=\"toggleDocumentSelection(document)\"\n            />\n          </td>\n          <td class=\"document-name\">{{ document.documentName }}</td>\n          <td class=\"document-type\">{{ document.contentTypeDisplay }}</td>\n          <td class=\"document-date\">{{ document.documentDate | date:'MM/dd/yyyy' }}</td>\n          <td class=\"document-size\">{{ document.documentSize }}</td>\n          <td class=\"media-type\">{{ document.mediaType }}</td>\n          <td class=\"app-context\">{{ document.appCtx }}</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n\n  <div class=\"selection-summary\" *ngIf=\"selectedDocuments.length > 0\">\n    <p>{{ selectedDocuments.length }} document(s) selected</p>\n  </div>\n</div> ","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { DocumentExtractService, PatientInfo, DmsMediaInstanceRequest, DownloadDocumentsResponse, SequentialDownloadResponse, DownloadProgress, DownloadedFile, ExtractResponse } from '../services/document-extract.service';\n\nexport interface DownloadStatus {\n  documentId: string;\n  status: 'pending' | 'downloading' | 'completed' | 'failed';\n  progress?: number;\n  error?: string;\n  filename?: string;\n  documentName?: string;\n  documentType?: string;\n}\n\n@Component({\n  selector: 'app-document-tracking',\n  templateUrl: './document-tracking.component.html',\n  styleUrls: ['./document-tracking.component.scss']\n})\nexport class DocumentTrackingComponent implements OnInit {\n  @Input() currentPatient: PatientInfo | null = null;\n  @Output() downloadRequest = new EventEmitter<{personId: number, encntrId: number, dmsMediaInstanceRequests: DmsMediaInstanceRequest[]}>();\n  \n  downloadQueue: DownloadStatus[] = [];\n  completedDownloads: DownloadStatus[] = [];\n  failedDownloads: DownloadStatus[] = [];\n  isDownloading = false;\n  downloadedFiles: DownloadedFile[] = [];\n  showExtractComponent = false;\n\n  constructor(private documentService: DocumentExtractService) { }\n\n  ngOnInit(): void {\n    console.log('[DocumentTrackingComponent] ngOnInit() - Component initialized');\n  }\n\n  /**\n   * Handles download request from parent component\n   * @param downloadData The download request data\n   */\n  handleDownloadRequest(downloadData: {personId: number, encntrId: number, dmsMediaInstanceRequests: DmsMediaInstanceRequest[]}): void {\n    console.log('[DocumentTrackingComponent] handleDownloadRequest() - Received download request:', downloadData);\n    this.startDownload(downloadData.personId, downloadData.encntrId, downloadData.dmsMediaInstanceRequests);\n  }\n\n  /**\n   * Clears all download state to start fresh\n   */\n  private clearDownloadState(): void {\n    console.log('[DocumentTrackingComponent] clearDownloadState() - Clearing all download state');\n    this.downloadQueue = [];\n    this.completedDownloads = [];\n    this.failedDownloads = [];\n    this.downloadedFiles = [];\n    this.showExtractComponent = false;\n  }\n\n  /**\n   * Starts the download process for selected documents\n   * @param personId The patient's person ID\n   * @param encntrId The patient's encounter ID\n   * @param dmsMediaInstanceRequests Array of document media instance requests to download\n   */\n  startDownload(personId: number, encntrId: number, dmsMediaInstanceRequests: DmsMediaInstanceRequest[]): void {\n    console.log('[DocumentTrackingComponent] startDownload() - Starting download process with parameters:', {\n      personId,\n      encntrId,\n      requestCount: dmsMediaInstanceRequests.length,\n      requests: dmsMediaInstanceRequests\n    });\n    \n    if (dmsMediaInstanceRequests.length === 0) {\n      console.warn('[DocumentTrackingComponent] startDownload() - No download requests provided');\n      return;\n    }\n\n    // Clear previous download state\n    this.clearDownloadState();\n    \n    this.isDownloading = true;\n    console.log('[DocumentTrackingComponent] startDownload() - Set isDownloading to true');\n    \n    // Initialize download queue\n    this.downloadQueue = dmsMediaInstanceRequests.map(request => ({\n      documentId: request.mediaInstanceId.toString(),\n      status: 'pending' as const\n    }));\n    \n    console.log('[DocumentTrackingComponent] startDownload() - Initialized download queue:', this.downloadQueue);\n\n    // Start the sequential download process\n    console.log('[DocumentTrackingComponent] startDownload() - Calling document service for sequential download');\n    this.documentService.downloadDocumentsSequentially(personId, encntrId, dmsMediaInstanceRequests).subscribe({\n      next: (response: SequentialDownloadResponse) => {\n        console.log('[DocumentTrackingComponent] startDownload() - Received sequential download response:', response);\n        this.handleSequentialDownloadResponse(response);\n      },\n      error: (error) => {\n        console.error('[DocumentTrackingComponent] startDownload() - Sequential download error:', error);\n        this.handleDownloadError(error);\n      }\n    });\n  }\n\n  /**\n   * Handles sequential download response with progress updates\n   * @param response The sequential download response from the service\n   */\n  private handleSequentialDownloadResponse(response: SequentialDownloadResponse): void {\n    console.log('[DocumentTrackingComponent] handleSequentialDownloadResponse() - Processing sequential download response:', response);\n    \n    const { progress, isComplete, allResults } = response;\n    \n    // Update progress for current download\n    if (progress.current) {\n      console.log('[DocumentTrackingComponent] handleSequentialDownloadResponse() - Processing current download:', progress.current);\n      const queueItem = this.downloadQueue.find(item => \n        item.documentId === progress.current!.mediaInstanceId.toString()\n      );\n      \n      if (queueItem) {\n        console.log('[DocumentTrackingComponent] handleSequentialDownloadResponse() - Found queue item for current download:', queueItem);\n        queueItem.status = 'downloading';\n        queueItem.progress = 50; // Indicate download in progress\n      }\n    }\n    \n    // Process completed results\n    allResults.forEach((result, index) => {\n      console.log('[DocumentTrackingComponent] handleSequentialDownloadResponse() - Processing result:', result);\n      const queueItem = this.downloadQueue.find(item => \n        item.documentId === result.mediaInstanceId.toString()\n      );\n\n      if (queueItem) {\n        console.log('[DocumentTrackingComponent] handleSequentialDownloadResponse() - Found queue item for result:', queueItem);\n        \n        // Update queue item with result details\n        queueItem.filename = result.filename;\n        queueItem.documentName = result.documentName;\n        queueItem.documentType = result.documentType;\n        \n        if (result.status === 1) {\n          // Download successful\n          console.log('[DocumentTrackingComponent] handleSequentialDownloadResponse() - Download successful for:', result.mediaInstanceId);\n          queueItem.status = 'completed';\n          queueItem.progress = 100;\n          this.moveToCompleted(queueItem);\n          \n          // Add to downloaded files for extract\n          if (result.fullpath && result.filename) {\n            const downloadedFile: DownloadedFile = {\n              filename: result.filename,\n              fullpath: result.fullpath,\n              documentName: result.documentName,\n              documentType: result.documentType,\n              mediaInstanceId: result.mediaInstanceId\n            };\n            \n            // Check if this file is already in the downloaded files list to prevent duplicates\n            const existingFile = this.downloadedFiles.find(file => \n              file.mediaInstanceId === result.mediaInstanceId\n            );\n            \n            if (!existingFile) {\n              this.downloadedFiles.push(downloadedFile);\n              console.log('[DocumentTrackingComponent] handleSequentialDownloadResponse() - Added to downloaded files:', downloadedFile);\n            } else {\n              console.log('[DocumentTrackingComponent] handleSequentialDownloadResponse() - File already exists in downloaded files, skipping:', result.mediaInstanceId);\n            }\n          }\n        } else {\n          // Download failed\n          console.log('[DocumentTrackingComponent] handleSequentialDownloadResponse() - Download failed for:', result.mediaInstanceId, 'Error:', result.message);\n          queueItem.status = 'failed';\n          queueItem.error = result.message;\n          this.moveToFailed(queueItem);\n        }\n      } else {\n        console.warn('[DocumentTrackingComponent] handleSequentialDownloadResponse() - No queue item found for mediaInstanceId:', result.mediaInstanceId);\n      }\n    });\n\n    // Check if all downloads are complete\n    if (isComplete) {\n      console.log('[DocumentTrackingComponent] handleSequentialDownloadResponse() - All downloads completed. Progress:', progress);\n      console.log('[DocumentTrackingComponent] handleSequentialDownloadResponse() - Setting isDownloading to false and clearing queue');\n      this.isDownloading = false;\n      this.downloadQueue = [];\n      \n      // Show extract component if we have downloaded files\n      if (this.downloadedFiles.length > 0) {\n        console.log('[DocumentTrackingComponent] handleSequentialDownloadResponse() - Showing extract component with', this.downloadedFiles.length, 'files');\n        this.showExtractComponent = true;\n      }\n      \n      // Log final summary\n      console.log('[DocumentTrackingComponent] handleSequentialDownloadResponse() - Download Summary:', {\n        total: progress.total,\n        completed: progress.completed,\n        failed: progress.failed,\n        successRate: progress.total > 0 ? (progress.completed / progress.total * 100).toFixed(1) + '%' : '0%',\n        downloadedFilesCount: this.downloadedFiles.length\n      });\n    }\n  }\n\n  /**\n   * Handles extract completion\n   * @param extractResponse The extract response\n   */\n  handleExtractComplete(extractResponse: ExtractResponse): void {\n    console.log('[DocumentTrackingComponent] handleExtractComplete() - Extract completed:', extractResponse);\n    // Handle extract completion - could show success message or reset state\n  }\n\n  /**\n   * Handles successful download response\n   * @param response The download response from the service\n   */\n  private handleDownloadResponse(response: DownloadDocumentsResponse): void {\n    console.log('[DocumentTrackingComponent] handleDownloadResponse() - Processing download response:', response);\n    // Process each download result\n    response.downloadResults.forEach((result, index) => {\n      console.log('[DocumentTrackingComponent] handleDownloadResponse() - Processing result:', result);\n      // Find corresponding item in download queue\n      const queueItem = this.downloadQueue.find(item => \n        item.documentId === result.mediaInstanceId.toString()\n      );\n\n      if (queueItem) {\n        console.log('[DocumentTrackingComponent] handleDownloadResponse() - Found queue item:', queueItem);\n        if (result.status === 1) {\n          // Download successful\n          console.log('[DocumentTrackingComponent] handleDownloadResponse() - Download successful for:', result.mediaInstanceId);\n          queueItem.status = 'completed';\n          queueItem.progress = 100;\n          this.moveToCompleted(queueItem);\n        } else {\n          // Download failed\n          console.log('[DocumentTrackingComponent] handleDownloadResponse() - Download failed for:', result.mediaInstanceId, 'Error:', result.message);\n          queueItem.status = 'failed';\n          queueItem.error = result.message;\n          this.moveToFailed(queueItem);\n        }\n      } else {\n        console.warn('[DocumentTrackingComponent] handleDownloadResponse() - No queue item found for mediaInstanceId:', result.mediaInstanceId);\n      }\n    });\n\n    // Clear download queue after processing\n    console.log('[DocumentTrackingComponent] handleDownloadResponse() - Clearing download queue and setting isDownloading to false');\n    this.isDownloading = false;\n    this.downloadQueue = [];\n  }\n\n  /**\n   * Handles download errors\n   * @param error The error from the download service\n   */\n  private handleDownloadError(error: any): void {\n    console.error('[DocumentTrackingComponent] handleDownloadError() - Download error:', error);\n    \n    // Mark all pending items as failed\n    console.log('[DocumentTrackingComponent] handleDownloadError() - Marking all pending items as failed');\n    this.downloadQueue.forEach(item => {\n      if (item.status === 'pending' || item.status === 'downloading') {\n        console.log('[DocumentTrackingComponent] handleDownloadError() - Marking item as failed:', item);\n        item.status = 'failed';\n        item.error = 'Download failed';\n        this.moveToFailed(item);\n      }\n    });\n\n    console.log('[DocumentTrackingComponent] handleDownloadError() - Setting isDownloading to false and clearing queue');\n    this.isDownloading = false;\n    this.downloadQueue = [];\n  }\n\n  /**\n   * Moves a completed download to the completed list\n   * @param item The completed download item\n   */\n  private moveToCompleted(item: DownloadStatus): void {\n    console.log('[DocumentTrackingComponent] moveToCompleted() - Moving item to completed list:', item);\n    \n    // Check if this item is already in the completed list to prevent duplicates\n    const existingItem = this.completedDownloads.find(completed => \n      completed.documentId === item.documentId\n    );\n    \n    if (existingItem) {\n      console.log('[DocumentTrackingComponent] moveToCompleted() - Item already exists in completed list, skipping:', item.documentId);\n      return;\n    }\n    \n    this.completedDownloads.push(item);\n    console.log('[DocumentTrackingComponent] moveToCompleted() - Completed downloads count:', this.completedDownloads.length);\n  }\n\n  /**\n   * Moves a failed download to the failed list\n   * @param item The failed download item\n   */\n  private moveToFailed(item: DownloadStatus): void {\n    console.log('[DocumentTrackingComponent] moveToFailed() - Moving item to failed list:', item);\n    \n    // Check if this item is already in the failed list to prevent duplicates\n    const existingItem = this.failedDownloads.find(failed => \n      failed.documentId === item.documentId\n    );\n    \n    if (existingItem) {\n      console.log('[DocumentTrackingComponent] moveToFailed() - Item already exists in failed list, skipping:', item.documentId);\n      return;\n    }\n    \n    this.failedDownloads.push(item);\n    console.log('[DocumentTrackingComponent] moveToFailed() - Failed downloads count:', this.failedDownloads.length);\n  }\n\n  /**\n   * Retries a failed download\n   * @param item The failed download item to retry\n   */\n  retryDownload(item: DownloadStatus): void {\n    console.log('[DocumentTrackingComponent] retryDownload() - Retrying download for item:', item);\n    \n    if (!this.currentPatient) {\n      console.error('[DocumentTrackingComponent] retryDownload() - No current patient available for retry');\n      return;\n    }\n\n    // Remove from failed list\n    const index = this.failedDownloads.findIndex(failed => failed.documentId === item.documentId);\n    if (index > -1) {\n      console.log('[DocumentTrackingComponent] retryDownload() - Removing item from failed list');\n      this.failedDownloads.splice(index, 1);\n    }\n\n    // Add to download queue\n    console.log('[DocumentTrackingComponent] retryDownload() - Adding item to download queue');\n    this.downloadQueue.push({\n      documentId: item.documentId,\n      status: 'pending'\n    });\n\n    // Create download request for this single item\n    const retryRequest: DmsMediaInstanceRequest = {\n      mediaInstanceId: parseInt(item.documentId)\n    };\n    console.log('[DocumentTrackingComponent] retryDownload() - Created retry request:', retryRequest);\n\n    // Start sequential download for this single item using current patient context\n    console.log('[DocumentTrackingComponent] retryDownload() - Starting sequential download with current patient context');\n    this.startDownload(this.currentPatient.personId, this.currentPatient.encntrId, [retryRequest]);\n  }\n\n  /**\n   * Clears completed downloads\n   */\n  clearCompleted(): void {\n    this.completedDownloads = [];\n  }\n\n  /**\n   * Clears failed downloads\n   */\n  clearFailed(): void {\n    this.failedDownloads = [];\n  }\n\n  /**\n   * Gets the status text for display\n   * @param status The download status\n   * @returns Status text\n   */\n  getStatusText(status: string): string {\n    switch (status) {\n      case 'pending': return 'Pending';\n      case 'downloading': return 'Downloading';\n      case 'completed': return 'Completed';\n      case 'failed': return 'Failed';\n      default: return 'Unknown';\n    }\n  }\n\n  /**\n   * Gets the status class for styling\n   * @param status The download status\n   * @returns CSS class name\n   */\n  getStatusClass(status: string): string {\n    switch (status) {\n      case 'pending': return 'status-pending';\n      case 'downloading': return 'status-downloading';\n      case 'completed': return 'status-completed';\n      case 'failed': return 'status-failed';\n      default: return 'status-unknown';\n    }\n  }\n\n  /**\n   * Gets the current download progress percentage\n   * @returns Progress percentage as a number\n   */\n  getDownloadProgress(): number {\n    if (this.downloadQueue.length === 0) return 0;\n    \n    const totalItems = this.downloadQueue.length;\n    const completedItems = this.downloadQueue.filter(item => item.status === 'completed').length;\n    const failedItems = this.downloadQueue.filter(item => item.status === 'failed').length;\n    \n    return Math.round(((completedItems + failedItems) / totalItems) * 100);\n  }\n\n  /**\n   * Gets the current download status text\n   * @returns Status text for display\n   */\n  getCurrentDownloadStatus(): string {\n    if (!this.isDownloading) return 'No downloads in progress';\n    \n    const totalItems = this.downloadQueue.length;\n    const completedItems = this.downloadQueue.filter(item => item.status === 'completed').length;\n    const failedItems = this.downloadQueue.filter(item => item.status === 'failed').length;\n    const downloadingItems = this.downloadQueue.filter(item => item.status === 'downloading').length;\n    const pendingItems = this.downloadQueue.filter(item => item.status === 'pending').length;\n    \n    if (downloadingItems > 0) {\n      const downloadingItem = this.downloadQueue.find(item => item.status === 'downloading');\n      return `Downloading: ${downloadingItem?.documentName || 'Document'} (${completedItems + failedItems + 1}/${totalItems})`;\n    }\n    \n    return `Processing: ${completedItems + failedItems}/${totalItems} completed`;\n  }\n} ","<div class=\"document-tracking-container\">\n  <div class=\"tracking-header\">\n    <h3>Document Download Tracking</h3>\n  </div>\n\n  <!-- Download Progress Overview -->\n  <div class=\"progress-overview\" *ngIf=\"isDownloading\">\n    <div class=\"progress-info\">\n      <div class=\"progress-status\">{{ getCurrentDownloadStatus() }}</div>\n      <div class=\"progress-bar-overall\">\n        <div \n          class=\"progress-fill-overall\" \n          [style.width.%]=\"getDownloadProgress()\"\n        ></div>\n      </div>\n      <div class=\"progress-text-overall\">{{ getDownloadProgress() }}% Complete</div>\n    </div>\n  </div>\n\n  <!-- Active Downloads -->\n  <div class=\"tracking-section\" *ngIf=\"downloadQueue.length > 0\">\n    <h4>Active Downloads</h4>\n    <div class=\"download-list\">\n      <div \n        *ngFor=\"let item of downloadQueue\" \n        class=\"download-item\"\n        [class]=\"getStatusClass(item.status)\"\n      >\n        <div class=\"download-info\">\n          <div class=\"document-details\">\n            <div class=\"document-name\" *ngIf=\"item.documentName\">{{ item.documentName }}</div>\n            <div class=\"document-id\">Document ID: {{ item.documentId }}</div>\n            <div class=\"document-type\" *ngIf=\"item.documentType\">{{ item.documentType }}</div>\n          </div>\n          <div class=\"status\">{{ getStatusText(item.status) }}</div>\n        </div>\n        \n        <div class=\"progress-container\" *ngIf=\"item.status === 'downloading'\">\n          <div class=\"progress-bar\">\n            <div \n              class=\"progress-fill\" \n              [style.width.%]=\"item.progress || 0\"\n            ></div>\n          </div>\n          <div class=\"progress-text\">{{ item.progress || 0 }}%</div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- Completed Downloads -->\n  <div class=\"tracking-section\" *ngIf=\"completedDownloads.length > 0\">\n    <div class=\"section-header\">\n      <h4>Completed Downloads</h4>\n      <button class=\"btn btn-outline\" (click)=\"clearCompleted()\">\n        Clear All\n      </button>\n    </div>\n    <div class=\"download-list\">\n      <div \n        *ngFor=\"let item of completedDownloads\" \n        class=\"download-item status-completed\"\n      >\n        <div class=\"download-info\">\n          <div class=\"document-details\">\n            <div class=\"document-name\" *ngIf=\"item.documentName\">{{ item.documentName }}</div>\n            <div class=\"document-id\">Document ID: {{ item.documentId }}</div>\n            <div class=\"document-type\" *ngIf=\"item.documentType\">{{ item.documentType }}</div>\n            <div class=\"filename\" *ngIf=\"item.filename\">File: {{ item.filename }}</div>\n          </div>\n          <div class=\"status\">{{ getStatusText(item.status) }}</div>\n        </div>\n        <div class=\"completion-indicator\">\n          <span class=\"checkmark\">✓</span>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- Failed Downloads -->\n  <div class=\"tracking-section\" *ngIf=\"failedDownloads.length > 0\">\n    <div class=\"section-header\">\n      <h4>Failed Downloads</h4>\n      <button class=\"btn btn-outline\" (click)=\"clearFailed()\">\n        Clear All\n      </button>\n    </div>\n    <div class=\"download-list\">\n      <div \n        *ngFor=\"let item of failedDownloads\" \n        class=\"download-item status-failed\"\n      >\n        <div class=\"download-info\">\n          <div class=\"document-details\">\n            <div class=\"document-name\" *ngIf=\"item.documentName\">{{ item.documentName }}</div>\n            <div class=\"document-id\">Document ID: {{ item.documentId }}</div>\n            <div class=\"document-type\" *ngIf=\"item.documentType\">{{ item.documentType }}</div>\n          </div>\n          <div class=\"status\">{{ getStatusText(item.status) }}</div>\n          <div class=\"error-message\" *ngIf=\"item.error\">{{ item.error }}</div>\n        </div>\n        <button class=\"btn btn-retry\" (click)=\"retryDownload(item)\">\n          Retry\n        </button>\n      </div>\n    </div>\n  </div>\n\n  <!-- Extract Download Component -->\n  <div class=\"extract-section\" *ngIf=\"showExtractComponent && currentPatient\">\n    <app-extract-download\n      [personId]=\"currentPatient.personId\"\n      [encntrId]=\"currentPatient.encntrId\"\n      [downloadedFiles]=\"downloadedFiles\"\n      (extractComplete)=\"handleExtractComplete($event)\"\n    ></app-extract-download>\n  </div>\n\n  <!-- No Activity Message -->\n  <div class=\"no-activity\" *ngIf=\"downloadQueue.length === 0 && completedDownloads.length === 0 && failedDownloads.length === 0 && !showExtractComponent\">\n    <p>No download activity to track.</p>\n    <p>Select documents from the document list to start downloading.</p>\n  </div>\n</div> ","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { DocumentExtractService, ExtractRequest, DownloadedFile, ExtractResponse } from '../services/document-extract.service';\n\n// Declare global functions that may be available in MPage environment\ndeclare global {\n  interface Window {\n    MPAGES_SVC_AUTH?: (xhr: XMLHttpRequest) => Promise<any>;\n    g_ExtractDownloadXMLHttpRequestObj?: XMLHttpRequest;\n    showSaveFilePicker?: (options?: {\n      suggestedName?: string;\n      types?: Array<{\n        description: string;\n        accept: Record<string, string[]>;\n      }>;\n    }) => Promise<FileSystemFileHandle>;\n  }\n  \n  interface FileSystemFileHandle {\n    createWritable(): Promise<FileSystemWritableFileStream>;\n  }\n  \n  interface FileSystemWritableFileStream {\n    write(data: any): Promise<void>;\n    close(): Promise<void>;\n  }\n}\n\n@Component({\n  selector: 'app-extract-download',\n  templateUrl: './extract-download.component.html',\n  styleUrls: ['./extract-download.component.scss']\n})\nexport class ExtractDownloadComponent implements OnInit {\n  @Input() personId: number = 0;\n  @Input() encntrId: number = 0;\n  @Input() downloadedFiles: DownloadedFile[] = [];\n  @Output() extractComplete = new EventEmitter<ExtractResponse>();\n\n  isExtracting = false;\n  extractProgress = 0;\n  extractStatus = '';\n  extractResult: ExtractResponse | null = null;\n\n  constructor(private documentService: DocumentExtractService) { }\n\n  ngOnInit(): void {\n    console.log('[ExtractDownloadComponent] ngOnInit() - Component initialized with:', {\n      personId: this.personId,\n      encntrId: this.encntrId,\n      downloadedFilesCount: this.downloadedFiles.length\n    });\n  }\n\n  /**\n   * TrackBy function for ngFor optimization\n   * @param index The index of the item\n   * @param file The file object\n   * @returns The filename as the track key\n   */\n  trackByFilename(index: number, file: DownloadedFile): string {\n    return file.filename;\n  }\n\n  /**\n   * Starts the extract process to create metadata file and zip archive\n   */\n  startExtract(): void {\n    console.log('[ExtractDownloadComponent] startExtract() - Starting extract process');\n    \n    if (this.downloadedFiles.length === 0) {\n      console.warn('[ExtractDownloadComponent] startExtract() - No downloaded files available for extract');\n      return;\n    }\n\n    this.isExtracting = true;\n    this.extractProgress = 0;\n    this.extractStatus = 'Preparing extract request...';\n    this.extractResult = null;\n\n    console.log('[ExtractDownloadComponent] startExtract() - Creating extract request with files:', this.downloadedFiles);\n\n    // Create the extract request\n    const extractRequest: ExtractRequest = {\n      personId: this.personId,\n      encntrId: this.encntrId,\n      downloadedFiles: this.downloadedFiles\n    };\n\n    this.extractStatus = 'Sending extract request to server...';\n    this.extractProgress = 25;\n\n    this.documentService.createExtract(extractRequest).subscribe({\n      next: (response: ExtractResponse) => {\n        console.log('[ExtractDownloadComponent] startExtract() - Received extract response:', response);\n        this.handleExtractResponse(response);\n      },\n      error: (error: any) => {\n        console.error('[ExtractDownloadComponent] startExtract() - Extract error:', error);\n        this.handleExtractError(error);\n      }\n    });\n  }\n\n  /**\n   * Handles successful extract response\n   * @param response The extract response from the service\n   */\n  private handleExtractResponse(response: ExtractResponse): void {\n    console.log('[ExtractDownloadComponent] handleExtractResponse() - Processing extract response:', response);\n    \n    this.extractProgress = 100;\n    this.extractStatus = response.success ? 'Extract completed successfully!' : 'Extract failed';\n    this.extractResult = response;\n    this.isExtracting = false;\n\n    if (response.success) {\n      console.log('[ExtractDownloadComponent] handleExtractResponse() - Extract successful, emitting result');\n      this.extractComplete.emit(response);\n    }\n  }\n\n  /**\n   * Handles extract errors\n   * @param error The error from the extract service\n   */\n  private handleExtractError(error: any): void {\n    console.error('[ExtractDownloadComponent] handleExtractError() - Extract error:', error);\n    \n    this.extractProgress = 0;\n    this.extractStatus = 'Extract failed';\n    this.extractResult = {\n      success: false,\n      message: error.message || 'Extract process failed'\n    };\n    this.isExtracting = false;\n  }\n\n  /**\n   * Downloads the created zip file with MPage authentication\n   * Incorporates patterns from mediagallery-o1.js for proper authentication handling\n   */\n  async downloadZipFile(): Promise<void> {\n    if (this.extractResult?.zipFileUrl) {\n      console.log('[ExtractDownloadComponent] downloadZipFile() - Downloading zip file:', this.extractResult.zipFileUrl);\n      \n      try {\n        // Use the new authenticated download method\n        await this.downloadWithAuthentication(this.extractResult.zipFileUrl);\n        \n      } catch (error) {\n        console.error('[ExtractDownloadComponent] downloadZipFile() - Download error:', error);\n        \n        // Try the Basic Auth method as fallback\n        console.log('[ExtractDownloadComponent] downloadZipFile() - Trying Basic Auth fallback');\n        try {\n          await this.downloadWithFileTransfer();\n        } catch (fallbackError) {\n          console.error('[ExtractDownloadComponent] downloadZipFile() - Basic Auth fallback also failed:', fallbackError);\n          // Show user-friendly error message\n          alert('Download failed. Please try again or contact your administrator.');\n        }\n      }\n    }\n  }\n\n  /**\n   * Downloads the created zip file using MPAGES_SVC_AUTH\n   * This method follows the pattern from mediagallery-o1.js for Edge authentication\n   */\n  async downloadWithMPagesAuth(): Promise<void> {\n    if (!this.extractResult?.downloadUrl) {\n      console.warn('[ExtractDownloadComponent] downloadWithMPagesAuth() - No downloadUrl available');\n      alert('No download URL available.');\n      return;\n    }\n\n    console.log('[ExtractDownloadComponent] downloadWithMPagesAuth() - Starting MPages authenticated download');\n    console.log('[ExtractDownloadComponent] downloadWithMPagesAuth() - Download URL:', this.extractResult.downloadUrl);\n    console.log('[ExtractDownloadComponent] downloadWithMPagesAuth() - Extract Result:', this.extractResult);\n    \n    try {\n      // Use the downloadUrl from the service\n      const downloadUrl = this.extractResult.downloadUrl;\n      \n      // Create XMLHttpRequest for authenticated download\n      const xhr = new XMLHttpRequest();\n      \n      // Open the request\n      xhr.open('GET', downloadUrl);\n      \n      // Set response type to blob for binary data\n      xhr.responseType = 'blob';\n      \n      // Apply MPAGES_SVC_AUTH if available (from discern meta declarations)\n      let authPromise = Promise.resolve();\n      \n      if (window.MPAGES_SVC_AUTH) {\n        console.log('[ExtractDownloadComponent] downloadWithMPagesAuth() - Applying MPAGES_SVC_AUTH');\n        authPromise = window.MPAGES_SVC_AUTH(xhr);\n      } else {\n        console.log('[ExtractDownloadComponent] downloadWithMPagesAuth() - MPAGES_SVC_AUTH not available');\n      }\n      \n      // Wait for authentication to complete\n      await authPromise;\n      \n      // Create promise for the download\n      const downloadPromise = new Promise<void>((resolve, reject) => {\n        xhr.onload = () => {\n          if (xhr.status === 200) {\n            console.log('[ExtractDownloadComponent] downloadWithMPagesAuth() - Download successful');\n            \n            // Get the blob response\n            const blob = xhr.response as Blob;\n            \n            // Use the descriptive filename from the extract response\n            let filename = this.extractResult?.zipFileName || 'extracted_documents.zip';\n            \n            console.log('[ExtractDownloadComponent] downloadWithMPagesAuth() - Original filename:', this.extractResult?.zipFileName);\n            console.log('[ExtractDownloadComponent] downloadWithMPagesAuth() - Filename before extension check:', filename);\n            \n            // Ensure filename has .zip extension\n            if (!filename.toLowerCase().endsWith('.zip')) {\n              filename += '.zip';\n            }\n            \n            console.log('[ExtractDownloadComponent] downloadWithMPagesAuth() - Final filename:', filename);\n            console.log('[ExtractDownloadComponent] downloadWithMPagesAuth() - Blob size:', blob.size);\n            console.log('[ExtractDownloadComponent] downloadWithMPagesAuth() - Blob type:', blob.type);\n            \n            // Create a temporary URL for the blob\n            const url = window.URL.createObjectURL(blob);\n            \n            // Create a download link\n            const link = document.createElement('a');\n            link.href = url;\n            link.download = filename;\n            \n            // In Edge/Chrome, we can use the File System Access API for save dialog\n            if ('showSaveFilePicker' in window) {\n              this.saveWithFileSystemAPI(blob, filename)\n                .then(() => resolve())\n                .catch(() => {\n                  // Fallback to standard download\n                  document.body.appendChild(link);\n                  link.click();\n                  document.body.removeChild(link);\n                  window.URL.revokeObjectURL(url);\n                  resolve();\n                });\n            } else {\n              // Standard download\n              document.body.appendChild(link);\n              link.click();\n              document.body.removeChild(link);\n              window.URL.revokeObjectURL(url);\n              resolve();\n            }\n          } else {\n            console.error('[ExtractDownloadComponent] downloadWithMPagesAuth() - Download failed with status:', xhr.status);\n            reject(new Error(`Download failed with status: ${xhr.status}`));\n          }\n        };\n        \n        xhr.onerror = () => {\n          console.error('[ExtractDownloadComponent] downloadWithMPagesAuth() - Network error during download');\n          reject(new Error('Network error during download'));\n        };\n        \n        // Send the request\n        xhr.send();\n      });\n      \n      await downloadPromise;\n      \n    } catch (error) {\n      console.error('[ExtractDownloadComponent] downloadWithMPagesAuth() - Error:', error);\n      alert('Download failed. Please try another method.');\n    }\n  }\n\n  /**\n   * Uses the File System Access API to show a save dialog\n   * @param blob The blob to save\n   * @param suggestedName The suggested filename\n   */\n  private async saveWithFileSystemAPI(blob: Blob, suggestedName: string): Promise<void> {\n    try {\n      // Request file handle with save dialog\n      const handle = await (window as any).showSaveFilePicker({\n        suggestedName: suggestedName,\n        types: [{\n          description: 'Zip files',\n          accept: {\n            'application/zip': ['.zip']\n          }\n        }]\n      });\n      \n      // Create a writable stream\n      const writable = await handle.createWritable();\n      \n      // Write the blob to the file\n      await writable.write(blob);\n      \n      // Close the file\n      await writable.close();\n      \n      console.log('[ExtractDownloadComponent] saveWithFileSystemAPI() - File saved successfully');\n    } catch (error) {\n      if ((error as any).name === 'AbortError') {\n        console.log('[ExtractDownloadComponent] saveWithFileSystemAPI() - User cancelled save dialog');\n      } else {\n        console.error('[ExtractDownloadComponent] saveWithFileSystemAPI() - Error:', error);\n      }\n      throw error;\n    }\n  }\n\n  /**\n   * Downloads using the downloadUrl with embedded credentials\n   */\n  downloadWithUrlCredentials(): void {\n    if (this.extractResult?.downloadUrl) {\n      console.log('[ExtractDownloadComponent] downloadWithUrlCredentials() - Downloading with URL credentials:', this.extractResult.downloadUrl);\n      console.log('[ExtractDownloadComponent] downloadWithUrlCredentials() - Extract Result:', this.extractResult);\n      \n      // Get system credentials and embed them in the URL\n      this.documentService.getSystemCredentials().subscribe({\n        next: (credentials) => {\n          console.log('[ExtractDownloadComponent] downloadWithUrlCredentials() - Got credentials for user:', credentials.username);\n          try {\n            // Create URL with embedded credentials manually to avoid URL encoding issues\n            const downloadUrl = this.extractResult!.downloadUrl!;\n            const url = new URL(downloadUrl);\n            \n            console.log('[ExtractDownloadComponent] downloadWithUrlCredentials() - Original download URL:', downloadUrl);\n            console.log('[ExtractDownloadComponent] downloadWithUrlCredentials() - Parsed URL parts:', {\n              protocol: url.protocol,\n              host: url.host,\n              pathname: url.pathname,\n              search: url.search\n            });\n            \n            // Manually construct the URL with credentials to avoid encoding issues\n            const protocol = url.protocol;\n            const host = url.host;\n            const pathname = url.pathname;\n            const search = url.search;\n            \n            // Create URL with credentials in the format: protocol://username:password@host/path\n            const urlWithCredentials = `${protocol}//${credentials.username}:${credentials.password}@${host}${pathname}${search}`;\n            \n            console.log('[ExtractDownloadComponent] downloadWithUrlCredentials() - Final URL with credentials:', urlWithCredentials);\n            \n            // Create download link\n            const link = document.createElement('a');\n            link.href = urlWithCredentials;\n            \n            let downloadFilename = this.extractResult?.zipFileName || 'extracted_documents.zip';\n            if (!downloadFilename.toLowerCase().endsWith('.zip')) {\n              downloadFilename += '.zip';\n            }\n            \n            link.download = downloadFilename;\n            // Remove target=\"_blank\" to prevent cross-origin SecurityError\n            link.style.display = 'none';\n            \n            console.log('[ExtractDownloadComponent] downloadWithUrlCredentials() - Download filename:', downloadFilename);\n            console.log('[ExtractDownloadComponent] downloadWithUrlCredentials() - Link element created:', {\n              href: link.href,\n              download: link.download\n            });\n            \n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n            \n            console.log('[ExtractDownloadComponent] downloadWithUrlCredentials() - Download initiated');\n          } catch (error) {\n            console.error('[ExtractDownloadComponent] downloadWithUrlCredentials() - Error creating URL:', error);\n            alert('Failed to create download URL. Please try another method.');\n          }\n        },\n        error: (error) => {\n          console.error('[ExtractDownloadComponent] downloadWithUrlCredentials() - Error getting credentials:', error);\n          alert('Failed to get system credentials. Please try another method.');\n        }\n      });\n    } else {\n      console.warn('[ExtractDownloadComponent] downloadWithUrlCredentials() - No downloadUrl available');\n      alert('No download URL available.');\n    }\n  }\n\n  /**\n   * Downloads file with MPage authentication, following patterns from mediagallery-o1.js\n   * @param url The URL to download from\n   */\n  private async downloadWithAuthentication(url: string): Promise<void> {\n    console.log('[ExtractDownloadComponent] downloadWithAuthentication() - Starting authenticated download');\n    \n    // Check for mixed content and try HTTPS if needed\n    const processedUrl = this.processUrlForMixedContent(url);\n    \n    // Create XMLHttpRequest for authenticated download\n    const xhr = new XMLHttpRequest();\n    \n    // Make XMLHttpRequest globally accessible (following mediagallery-o1.js pattern)\n    (window as any).g_ExtractDownloadXMLHttpRequestObj = xhr;\n    \n    // Open the request first\n    xhr.open('GET', processedUrl);\n    \n    // Apply MPage authentication if available\n    if (window.MPAGES_SVC_AUTH) {\n      console.log('[ExtractDownloadComponent] downloadWithAuthentication() - Applying MPAGES_SVC_AUTH');\n      \n      // Apply MPAGES_SVC_AUTH directly (from discern meta declarations)\n      try {\n        await window.MPAGES_SVC_AUTH(xhr);\n        console.log('[ExtractDownloadComponent] downloadWithAuthentication() - MPAGES_SVC_AUTH applied successfully');\n      } catch (error) {\n        console.warn('[ExtractDownloadComponent] downloadWithAuthentication() - MPAGES_SVC_AUTH failed, continuing without auth:', error);\n      }\n    } else {\n      console.log('[ExtractDownloadComponent] downloadWithAuthentication() - MPAGES_SVC_AUTH not available');\n    }\n    \n    return new Promise((resolve, reject) => {\n      xhr.onload = () => {\n        if (xhr.status === 200) {\n          console.log('[ExtractDownloadComponent] downloadWithAuthentication() - Download successful');\n          \n          // Create blob and download\n          const blob = new Blob([xhr.response], { \n            type: xhr.getResponseHeader('Content-Type') || 'application/zip' \n          });\n          \n          const downloadFilename = this.extractResult?.zipFileName || 'extracted_documents.zip';\n          this.downloadBlob(blob, downloadFilename);\n          \n          // Clean up global reference\n          delete (window as any).g_ExtractDownloadXMLHttpRequestObj;\n          \n          resolve();\n        } else {\n          console.error('[ExtractDownloadComponent] downloadWithAuthentication() - Download failed with status:', xhr.status);\n          // Clean up global reference\n          delete (window as any).g_ExtractDownloadXMLHttpRequestObj;\n          reject(new Error(`Download failed with status: ${xhr.status}`));\n        }\n      };\n      \n      xhr.onerror = () => {\n        console.error('[ExtractDownloadComponent] downloadWithAuthentication() - Network error during download');\n        // Clean up global reference\n        delete (window as any).g_ExtractDownloadXMLHttpRequestObj;\n        reject(new Error('Network error during download'));\n      };\n      \n      // Set response type for binary data\n      xhr.responseType = 'blob';\n      \n      // Send the request\n      xhr.send();\n    });\n  }\n\n  /**\n   * Processes URL to handle mixed content issues\n   * @param url The original URL\n   * @returns Processed URL\n   */\n  private processUrlForMixedContent(url: string): string {\n    const isHttpsPage = window.location.protocol === 'https:';\n    const isHttpUrl = url.startsWith('http://');\n    \n    if (isHttpsPage && isHttpUrl) {\n      console.warn('[ExtractDownloadComponent] processUrlForMixedContent() - Mixed content detected, trying HTTPS');\n      return url.replace('http://', 'https://');\n    }\n    \n    return url;\n  }\n\n  /**\n   * Downloads a blob with the specified filename\n   * @param blob The blob to download\n   * @param filename The filename for the download\n   */\n  private downloadBlob(blob: Blob, filename: string): void {\n    const url = window.URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = filename;\n    link.style.display = 'none';\n    \n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    \n    // Clean up the object URL\n    window.URL.revokeObjectURL(url);\n    \n    console.log('[ExtractDownloadComponent] downloadBlob() - Download initiated for:', filename);\n  }\n\n  /**\n   * Helper method to perform the actual download (legacy method)\n   */\n  private downloadWithUrl(url: string): void {\n    const link = document.createElement('a');\n    link.href = url;\n    \n    // Use the descriptive filename from the extract response\n    const downloadFilename = this.extractResult?.zipFileName || 'extracted_documents.zip';\n    console.log('[ExtractDownloadComponent] downloadWithUrl() - Using filename for download:', downloadFilename);\n    \n    link.download = downloadFilename;\n    // Remove target=\"_blank\" to prevent cross-origin SecurityError\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }\n\n  /**\n   * Gets the extract button text based on current state\n   * @returns Button text\n   */\n  getExtractButtonText(): string {\n    if (this.isExtracting) {\n      return 'Creating Extract...';\n    }\n    return 'Create Extract';\n  }\n\n  /**\n   * Gets the extract status text for display\n   * @returns Status text\n   */\n  getExtractStatusText(): string {\n    if (this.isExtracting) {\n      return `${this.extractStatus} (${this.extractProgress}%)`;\n    }\n    if (this.extractResult) {\n      return this.extractResult.success ? 'Extract completed successfully!' : 'Extract failed';\n    }\n    return 'Ready to create extract';\n  }\n\n  /**\n   * Gets the CSS class for the extract status\n   * @returns CSS class name\n   */\n  getExtractStatusClass(): string {\n    if (this.isExtracting) {\n      return 'status-extracting';\n    }\n    if (this.extractResult) {\n      return this.extractResult.success ? 'status-success' : 'status-failed';\n    }\n    return 'status-ready';\n  }\n\n  /**\n   * Checks if the extract button should be disabled\n   * @returns True if button should be disabled\n   */\n  isExtractButtonDisabled(): boolean {\n    return this.isExtracting || this.downloadedFiles.length === 0;\n  }\n\n  /**\n   * Checks if the download button should be shown\n   * @returns True if download button should be shown\n   */\n  shouldShowDownloadButton(): boolean {\n    return this.extractResult?.success === true && !!this.extractResult.zipFileUrl;\n  }\n\n  /**\n   * Gets the download button text with filename\n   * @returns Download button text\n   */\n  getDownloadButtonText(): string {\n    if (this.extractResult?.zipFileName) {\n      return `📥 Download ${this.extractResult.zipFileName}`;\n    }\n    return '📥 Download Zip File';\n  }\n\n  /**\n   * Checks if MPage authentication is available\n   * @returns True if MPAGES_SVC_AUTH is available\n   */\n  isMPageAuthAvailable(): boolean {\n    return typeof window.MPAGES_SVC_AUTH === 'function';\n  }\n\n  /**\n   * Downloads the extract file using the fileTransfer/retrieveFile endpoint\n   */\n  downloadWithFileTransfer(): void {\n    if (this.extractResult?.zipFileName) {\n      console.log('[ExtractDownloadComponent] downloadWithFileTransfer() - Starting fileTransfer download');\n      \n      // Use the actual fileName and nodeName from the response if available\n      // Otherwise fall back to using zipFileName for both\n      const fileName = this.extractResult.fileName || this.extractResult.zipFileName;\n      const nodeName = this.extractResult.nodeName || this.extractResult.zipFileName;\n      \n      console.log('[ExtractDownloadComponent] downloadWithFileTransfer() - Using parameters:', { fileName, nodeName });\n      \n      this.documentService.downloadExtractFile(fileName, nodeName).subscribe({\n        next: (blob: Blob) => {\n          console.log('[ExtractDownloadComponent] downloadWithFileTransfer() - Download successful');\n          \n          // Create download link for the blob\n          const url = window.URL.createObjectURL(blob);\n          const link = document.createElement('a');\n          link.href = url;\n          link.download = fileName;\n          link.style.display = 'none';\n          \n          document.body.appendChild(link);\n          link.click();\n          document.body.removeChild(link);\n          \n          // Clean up the object URL\n          window.URL.revokeObjectURL(url);\n          \n          console.log('[ExtractDownloadComponent] downloadWithFileTransfer() - File download initiated');\n        },\n        error: (error) => {\n          console.error('[ExtractDownloadComponent] downloadWithFileTransfer() - Download error:', error);\n          alert('FileTransfer download failed. Please try the other download methods.');\n        }\n      });\n    } else {\n      console.warn('[ExtractDownloadComponent] downloadWithFileTransfer() - No zipFileName available');\n      alert('No file information available for download.');\n    }\n  }\n\n  /**\n   * Checks if the fileTransfer download button should be shown\n   * @returns True if fileTransfer button should be shown\n   */\n  shouldShowFileTransferButton(): boolean {\n    return this.extractResult?.success === true && !!this.extractResult.zipFileName;\n  }\n} ","<div class=\"extract-download-container\">\n  <div class=\"extract-header\">\n    <h3>Document Extract & Download</h3>\n    <p class=\"extract-description\">\n      Create a metadata file and zip archive from downloaded documents.\n    </p>\n    <!-- Authentication Status Indicator -->\n    <div class=\"auth-status\" *ngIf=\"shouldShowDownloadButton()\">\n      <small class=\"auth-info\">\n        <span *ngIf=\"isMPageAuthAvailable()\" class=\"auth-available\">🔐 MPage Authentication Available</span>\n        <span *ngIf=\"!isMPageAuthAvailable()\" class=\"auth-unavailable\">⚠️ Using Alternative Download Methods</span>\n      </small>\n    </div>\n  </div>\n\n  <!-- Extract Status -->\n  <div class=\"extract-status\" [class]=\"getExtractStatusClass()\">\n    <div class=\"status-icon\">\n      <span *ngIf=\"isExtracting\" class=\"spinner\">⏳</span>\n      <span *ngIf=\"!isExtracting && extractResult?.success\" class=\"success-icon\">✓</span>\n      <span *ngIf=\"!isExtracting && extractResult && !extractResult.success\" class=\"error-icon\">✗</span>\n      <span *ngIf=\"!isExtracting && !extractResult\" class=\"ready-icon\">📁</span>\n    </div>\n    <div class=\"status-text\">\n      {{ getExtractStatusText() }}\n    </div>\n  </div>\n\n  <!-- Progress Bar -->\n  <div class=\"progress-container\" *ngIf=\"isExtracting\">\n    <div class=\"progress-bar\">\n      <div \n        class=\"progress-fill\" \n        [style.width.%]=\"extractProgress\"\n      ></div>\n    </div>\n    <div class=\"progress-text\">{{ extractProgress }}%</div>\n  </div>\n\n  <!-- Extract Button -->\n  <div class=\"extract-actions\">\n    <button \n      class=\"btn btn-primary\" \n      [disabled]=\"isExtractButtonDisabled()\"\n      (click)=\"startExtract()\"\n    >\n      {{ getExtractButtonText() }}\n    </button>\n  </div>\n\n  <!-- Download Section -->\n  <div class=\"download-section\" *ngIf=\"shouldShowDownloadButton()\">\n    <div class=\"download-info\">\n      <h4>Extract Complete</h4>\n      <p>Your document extract has been created successfully.</p>\n      <div class=\"file-info\" *ngIf=\"extractResult\">\n        <div class=\"file-detail\">\n          <strong>Zip File:</strong> {{ extractResult.zipFileName || 'extracted_documents.zip' }}\n        </div>\n        <div class=\"file-detail\" *ngIf=\"extractResult.metadataFile\">\n          <strong>Metadata File:</strong> {{ extractResult.metadataFile }}\n        </div>\n        <div class=\"file-detail\" *ngIf=\"extractResult.extractInfo?.fileCount\">\n          <strong>Files Included:</strong> {{ extractResult.extractInfo?.fileCount }} documents\n        </div>\n        <div class=\"file-detail\" *ngIf=\"extractResult.message\">\n          <strong>Status:</strong> {{ extractResult.message }}\n        </div>\n      </div>\n    </div>\n    <div class=\"download-actions\">\n      <button \n        class=\"btn btn-primary\" \n        (click)=\"downloadWithMPagesAuth()\"\n        title=\"Download with MPAGES_SVC_AUTH (recommended for Edge)\"\n        *ngIf=\"isMPageAuthAvailable() && extractResult?.downloadUrl\"\n      >\n        📥 Download (MPage Auth)\n      </button>\n      <button \n        class=\"btn btn-success\" \n        (click)=\"downloadWithUrlCredentials()\"\n        title=\"Download with URL credentials\"\n      >\n        {{ getDownloadButtonText() }}\n      </button>\n    </div>\n  </div>\n\n  <!-- File Summary -->\n  <div class=\"file-summary\" *ngIf=\"downloadedFiles.length > 0\">\n    <h4>Files to Extract ({{ downloadedFiles.length }})</h4>\n    <div class=\"file-list\">\n      <div \n        *ngFor=\"let file of downloadedFiles; trackBy: trackByFilename\" \n        class=\"file-item\"\n      >\n        <div class=\"file-info\">\n          <div class=\"file-name\">{{ file.documentName || file.filename }}</div>\n          <div class=\"file-details\">\n            <span class=\"file-type\">{{ file.documentType }}</span>\n            <span class=\"file-path\">{{ file.filename }}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- No Files Message -->\n  <div class=\"no-files\" *ngIf=\"downloadedFiles.length === 0\">\n    <p>No downloaded files available for extract.</p>\n    <p>Complete document downloads first to enable extract functionality.</p>\n  </div>\n</div> ","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { DocumentExtractService, PatientInfo, PatientSearchResult } from '../services/document-extract.service';\nimport { CernerActionService } from '../services/cerner-action.service';\n\n@Component({\n  selector: 'app-patient-selection',\n  templateUrl: './patient-selection.component.html',\n  styleUrls: ['./patient-selection.component.scss']\n})\nexport class PatientSelectionComponent implements OnInit {\n  @Input() configLoaded = false;\n  @Output() patientSelected = new EventEmitter<PatientInfo>();\n  \n  patientForm: FormGroup;\n  loading = false;\n  patientInfo: PatientInfo | null = null;\n  patientSearchResults: PatientSearchResult[] = [];\n  showPatientSelection = false;\n  errorMessage = '';\n\n  constructor(\n    private fb: FormBuilder,\n    private documentService: DocumentExtractService,\n    private cernerActionService: CernerActionService\n  ) {\n    this.patientForm = this.fb.group({\n      fin: ['', [Validators.required, Validators.minLength(1)]]\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  /**\n   * Handles form submission to search for patients\n   */\n  onSubmit(): void {\n    if (this.patientForm.valid) {\n      this.loading = true;\n      this.errorMessage = '';\n      this.patientInfo = null;\n      this.showPatientSelection = false;\n\n      const fin = this.patientForm.get('fin')?.value;\n\n      this.documentService.searchPatients(fin).subscribe({\n        next: (patients: PatientSearchResult[]) => {\n          this.patientSearchResults = patients;\n          this.showPatientSelection = patients.length > 0;\n          this.loading = false;\n          \n          if (patients.length === 0) {\n            this.errorMessage = 'No patients found with the provided FIN.';\n          }\n        },\n        error: (error) => {\n          this.errorMessage = 'Error searching for patients. Please try again.';\n          this.loading = false;\n          console.error('Error searching for patients:', error);\n        }\n      });\n    }\n  }\n\n  /**\n   * Selects a patient and loads their documents\n   * @param patient The selected patient\n   */\n  selectPatient(patient: PatientSearchResult): void {\n    this.loading = true;\n    this.errorMessage = '';\n    this.showPatientSelection = false;\n\n    this.documentService.getPatientDocuments(patient.encntrId).subscribe({\n      next: (patientInfo: PatientInfo) => {\n        this.patientInfo = patientInfo;\n        this.loading = false;\n        // Emit the patient information to parent component\n        this.patientSelected.emit(patientInfo);\n      },\n      error: (error) => {\n        this.errorMessage = 'Error retrieving patient documents. Please try again.';\n        this.loading = false;\n        console.error('Error fetching patient documents:', error);\n      }\n    });\n  }\n\n  /**\n   * Resets the form and clears patient data\n   */\n  resetForm(): void {\n    this.patientForm.reset();\n    this.patientInfo = null;\n    this.patientSearchResults = [];\n    this.showPatientSelection = false;\n    this.errorMessage = '';\n  }\n\n  /**\n   * Opens the patient chart using Cerner actions\n   */\n  openChart(): void {\n    if (this.patientInfo) {\n      this.cernerActionService.openChart(this.patientInfo.personId, this.patientInfo.encntrId);\n    }\n  }\n\n  /**\n   * Opens the MMF Multimedia Manager for the patient using Cerner actions\n   */\n  openMultimediaManager(): void {\n    if (this.patientInfo) {\n      this.cernerActionService.openMultimediaManager(this.patientInfo.personId, this.patientInfo.encntrId);\n    }\n  }\n} ","<div class=\"patient-selection-container\">\n  <div class=\"form-section\">\n    <h2>Patient Document Lookup</h2>\n    \n    <div class=\"config-status\" *ngIf=\"!configLoaded\">\n      <p>Loading configuration...</p>\n    </div>\n    \n    <form [formGroup]=\"patientForm\" (ngSubmit)=\"onSubmit()\" class=\"patient-form\" [class.disabled]=\"!configLoaded\">\n      <div class=\"form-field\">\n        <label for=\"fin\">Patient FIN (Financial Identification Number)</label>\n        <input \n          id=\"fin\"\n          type=\"text\" \n          formControlName=\"fin\"\n          placeholder=\"Enter patient FIN\"\n          class=\"form-input\"\n          [class.error]=\"patientForm.get('fin')?.invalid && patientForm.get('fin')?.touched\"\n          [disabled]=\"!configLoaded\"\n        />\n        <div class=\"error-message\" *ngIf=\"patientForm.get('fin')?.invalid && patientForm.get('fin')?.touched\">\n          <span *ngIf=\"patientForm.get('fin')?.errors?.['required']\">FIN is required</span>\n          <span *ngIf=\"patientForm.get('fin')?.errors?.['minlength']\">FIN must be at least 1 character</span>\n        </div>\n      </div>\n\n      <div class=\"form-actions\">\n        <button \n          type=\"submit\" \n          class=\"btn btn-primary\"\n          [disabled]=\"patientForm.invalid || loading || !configLoaded\"\n        >\n          <span *ngIf=\"loading\">Searching...</span>\n          <span *ngIf=\"!loading\">Search Patients</span>\n        </button>\n        \n        <button \n          type=\"button\" \n          class=\"btn btn-secondary\"\n          (click)=\"resetForm()\"\n          [disabled]=\"loading\"\n        >\n          Reset\n        </button>\n      </div>\n    </form>\n\n    <div class=\"error-message\" *ngIf=\"errorMessage\">\n      {{ errorMessage }}\n    </div>\n  </div>\n\n  <!-- Patient Search Results -->\n  <div class=\"patient-search-results\" *ngIf=\"showPatientSelection && patientSearchResults.length > 0\">\n    <h3>Select a Patient</h3>\n    <div class=\"patient-list\">\n      <div \n        *ngFor=\"let patient of patientSearchResults\" \n        class=\"patient-item\"\n        (click)=\"selectPatient(patient)\"\n      >\n        <div class=\"patient-info\">\n          <div class=\"patient-name\">{{ patient.name }}</div>\n          <div class=\"patient-details\">\n            <span class=\"fin\">FIN: {{ patient.fin }}</span>\n            <span class=\"mrn\">MRN: {{ patient.mrn }}</span>\n            <span class=\"dob\">DOB: {{ patient.dateOfBirth | date:'MM/dd/yyyy' }}</span>\n            <span class=\"sex\">Sex: {{ patient.sex }}</span>\n          </div>\n          <div class=\"encounter-details\">\n            <span class=\"facility\">Facility: {{ patient.facility }}</span>\n            <span class=\"unit\">Unit: {{ patient.unit }}</span>\n            <span class=\"encntr-type\">Type: {{ patient.encntrType }}</span>\n            <span class=\"med-service\">Service: {{ patient.medService }}</span>\n          </div>\n          <div class=\"date-details\">\n            <span class=\"reg-date\">Registration: {{ patient.regDtTm | date:'MM/dd/yyyy' }}</span>\n            <span class=\"arrival-date\">Arrival: {{ patient.arrivalDtTm | date:'MM/dd/yyyy' }}</span>\n            <span class=\"discharge-date\" *ngIf=\"patient.dischDtTm.getTime() > 0\">Discharge: {{ patient.dischDtTm | date:'MM/dd/yyyy' }}</span>\n          </div>\n        </div>\n        <div class=\"select-indicator\">→</div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"patient-info\" *ngIf=\"patientInfo\">\n    <div class=\"patient-info-header\">\n      <h3>Patient Information</h3>\n      <div class=\"action-buttons\">\n        <button \n          type=\"button\" \n          class=\"btn btn-primary open-chart-btn\"\n          (click)=\"openChart()\"\n          title=\"Open patient chart in PowerChart\"\n        >\n          <span>📋</span> Open Chart\n        </button>\n        <button \n          type=\"button\" \n          class=\"btn btn-secondary multimedia-btn\"\n          (click)=\"openMultimediaManager()\"\n          title=\"Open MMF Multimedia Manager for this patient\"\n        >\n          <span>📷</span> Multimedia\n        </button>\n      </div>\n    </div>\n    <div class=\"info-grid\">\n      <div class=\"info-item\">\n        <label>FIN:</label>\n        <span>{{ patientInfo.fin }}</span>\n      </div>\n      <div class=\"info-item\">\n        <label>Name:</label>\n        <span>{{ patientInfo.name }}</span>\n      </div>\n      <div class=\"info-item\">\n        <label>MRN:</label>\n        <span>{{ patientInfo.mrn }}</span>\n      </div>\n      <div class=\"info-item\">\n        <label>Date of Birth:</label>\n        <span>{{ patientInfo.dateOfBirth | date:'MM/dd/yyyy' }}</span>\n      </div>\n      <div class=\"info-item\">\n        <label>Sex:</label>\n        <span>{{ patientInfo.sex }}</span>\n      </div>\n      <div class=\"info-item\">\n        <label>Facility:</label>\n        <span>{{ patientInfo.facility }}</span>\n      </div>\n      <div class=\"info-item\">\n        <label>Unit:</label>\n        <span>{{ patientInfo.unit }}</span>\n      </div>\n      <div class=\"info-item\">\n        <label>Encounter Type:</label>\n        <span>{{ patientInfo.encntrType }}</span>\n      </div>\n      <div class=\"info-item\">\n        <label>Medical Service:</label>\n        <span>{{ patientInfo.medService }}</span>\n      </div>\n      <div class=\"info-item\">\n        <label>Registration Date:</label>\n        <span>{{ patientInfo.regDtTm | date:'MM/dd/yyyy' }}</span>\n      </div>\n      <div class=\"info-item\">\n        <label>Arrival Date:</label>\n        <span>{{ patientInfo.arrivalDtTm | date:'MM/dd/yyyy' }}</span>\n      </div>\n      <div class=\"info-item\" *ngIf=\"patientInfo.dischDtTm.getTime() > 0\">\n        <label>Discharge Date:</label>\n        <span>{{ patientInfo.dischDtTm | date:'MM/dd/yyyy' }}</span>\n      </div>\n      <div class=\"info-item\">\n        <label>Documents Found:</label>\n        <span>{{ patientInfo.documents.length }} {{ patientInfo.documents.length === 1 ? 'document' : 'documents' }}</span>\n      </div>\n      <div class=\"info-item\" *ngIf=\"patientInfo.documents.length === 0\">\n        <label>Status:</label>\n        <span class=\"no-documents\">No documents found for this patient</span>\n      </div>\n    </div>\n  </div>\n</div> ","import { Injectable } from '@angular/core';\nimport { mPageService } from '@clinicaloffice/clinical-office-mpage-core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CernerActionService {\n\n  constructor(private mPage: mPageService) { }\n\n  /**\n   * Opens a patient chart using the APPLINK command\n   * @param personId The person ID of the patient\n   * @param encntrId The encounter ID (optional)\n   */\n  openChart(personId: number, encntrId?: number): void {\n    const el = document.getElementById('applink');\n    \n    if (!el) {\n      console.warn('Element with id \"applink\" not found');\n      return;\n    }\n\n    if (personId !== undefined && encntrId !== undefined) {\n      // @ts-ignore\n      el.href = 'javascript:APPLINK(0,\"Powerchart.exe\",\"/PERSONID=' + personId + ' /ENCNTRID=' + encntrId + '\")';\n    } else if (personId !== undefined) {\n      // @ts-ignore\n      el.href = 'javascript:APPLINK(0,\"Powerchart.exe\",\"/PERSONID=' + personId + '\")';\n    } else {\n      console.warn('personId is required for OPENCHART action');\n      return;\n    }\n\n    // Execute chart opening action via APPLINK\n    el.click();\n  }\n\n  /**\n   * Launches the MMF Multimedia Manager for a patient using the APPLINK command\n   * @param personId The person ID of the patient\n   * @param encntrId The encounter ID (optional)\n   */\n  openMultimediaManager(personId: number, encntrId?: number): void {\n    const el = document.getElementById('applink');\n    \n    if (!el) {\n      console.warn('Element with id \"applink\" not found');\n      return;\n    }\n\n    if (personId !== undefined && encntrId !== undefined) {\n      // @ts-ignore\n      el.href = 'javascript:APPLINK(0,\"mmfmultimediamanager.exe\",\"/PERSONID=' + personId + ' /ENCNTRID=' + encntrId + '\")';\n    } else if (personId !== undefined) {\n      // @ts-ignore\n      el.href = 'javascript:APPLINK(0,\"mmfmultimediamanager.exe\",\"/PERSONID=' + personId + '\")';\n    } else {\n      console.warn('personId is required for OPEN_MULTIMEDIA_MANAGER action');\n      return;\n    }\n\n    // Execute multimedia manager opening action via APPLINK\n    el.click();\n  }\n\n  /**\n   * Handles Cerner actions such as OPENCHART, VIEWORDER, APPT_VIEW, and APPT_HX_VIEW.\n   * @param action The Cerner action to perform\n   * @param data The data required for the action\n   */\n  async CernerAction(action: string, data: any): Promise<void> {\n    // Process Cerner action with provided data\n    const el = document.getElementById('applink');\n    if (data.encntrId || data.personId || data.orderId) {\n      switch (action) {\n        case 'OPENCHART':\n          this.openChart(data.personId, data.encntrId);\n          break;\n        case 'VIEWORDER':\n          try {\n            await this.viewOrderAsync(data);\n          } catch (error) {\n            this.mPage.putLog('VIEWORDER error: ' + error);\n          }\n          break;\n        case 'APPT_VIEW':\n          try {\n            await this.viewAppointmentAsync(data, 'APPT_VIEW');\n          } catch (error) {\n            this.mPage.putLog('APPT_VIEW error: ' + error);\n          }\n          break;\n        case 'APPT_HX_VIEW':\n          try {\n            await this.viewAppointmentAsync(data, 'APPT_HX_VIEW');\n          } catch (error) {\n            this.mPage.putLog('APPT_HX_VIEW error: ' + error);\n          }\n          break;\n        case 'MODIFY_ORDER':\n          try {\n            await this.modifyOrderAsync(data);\n          } catch (error) {\n            this.mPage.putLog('MODIFY_ORDER error: ' + error);\n          }\n          break;\n        default:\n          alert('The action ' + action + ' has not been defined.');\n          break;\n      }\n    } else {\n      // Handle actions that don't require patient context (encntrId or personId)\n      switch (action) {\n        case 'URL':\n          // @ts-ignore\n          el.href = 'javascript:APPLINK(100,\"' + data + '\", \"\");';\n          // @ts-ignore\n          el.click();\n          break;\n        default:\n          alert('The action ' + action + ' has not been defined.');\n          break;\n      }\n    }\n  }\n\n  /**\n   * Opens the Order Info Viewer for a specific order using DiscernObjectFactory\n   * @param data Object containing orderId, personId, and encntrId\n   */\n  private async viewOrderAsync(data: any): Promise<void> {\n    try {\n      if (!data.orderId) {\n        throw new Error('orderId is required for VIEWORDER action');\n      }\n\n      const orderInfoViewer = await (window as any).external.DiscernObjectFactory(\"PVVIEWERMPAGE\");\n      await orderInfoViewer.LaunchOrderInfoViewer(data.orderId, 1);\n      \n    } catch (error) {\n      this.mPage.putLog('VIEWORDER failed: ' + error);\n      throw error;\n    }\n  }\n\n  /**\n   * Opens the Appointment Viewer or Appointment History Viewer using DiscernObjectFactory\n   * @param data Object containing schEventId and scheduleId\n   * @param actionType 'APPT_VIEW' or 'APPT_HX_VIEW'\n   */\n  private async viewAppointmentAsync(data: any, actionType: 'APPT_VIEW' | 'APPT_HX_VIEW'): Promise<void> {\n    try {\n      const eventId = parseFloat(data.schEventId);\n      const scheduleId = parseFloat(data.scheduleId);\n      \n      if (!(eventId > 0)) {\n        throw new Error('schEventId is required and must be > 0 for ' + actionType);\n      }\n      \n      const schedulingActions = await (window as any).external.DiscernObjectFactory('PEXSCHEDULINGACTIONS');\n      if (actionType === 'APPT_VIEW') {\n        schedulingActions.ShowView(eventId, scheduleId);\n        this.mPage.putLog('APPT_VIEW: ShowView called for eventId=' + eventId + ', scheduleId=' + scheduleId);\n      } else if (actionType === 'APPT_HX_VIEW') {\n        schedulingActions.ShowHistoryView(eventId, scheduleId);\n        this.mPage.putLog('APPT_HX_VIEW: ShowHistoryView called for eventId=' + eventId + ', scheduleId=' + scheduleId);\n      }\n    } catch (error) {\n      this.mPage.putLog(actionType + ' failed: ' + error);\n      throw error;\n    }\n  }\n\n  /**\n   * Opens the Modal Order Entry Window to modify an existing order using MPAGES_EVENT\n   * @param data Object containing orderId, personId, and encntrId\n   */\n  private async modifyOrderAsync(data: any): Promise<void> {\n    try {\n      if (!data.orderId) {\n        throw new Error('orderId is required for MODIFY_ORDER action');\n      }\n      if (!data.personId) {\n        throw new Error('personId is required for MODIFY_ORDER action');\n      }\n\n      const personId = data.personId;\n      const encntrId = data.encntrId;\n      const orderId = data.orderId;\n      \n      const orderLst = `{MODIFY|${orderId}}`;\n      const customizeFlags = data.enablePowerPlans ? 24 : 0;\n      const tabLst = '{2|127}{3|127}';\n      const defaultDisplay = data.defaultDisplay || 32;\n      const silentSignFlag = data.silentSign ? 1 : 0;\n      \n      const parameters = `${personId}|${encntrId}|${orderLst}|${customizeFlags}|${tabLst}|${defaultDisplay}|${silentSignFlag}`;\n      const mpagesEventCall = `MPAGES_EVENT(\"ORDERS\",\"${parameters}\")`;\n      \n      this.mPage.putLog('MODIFY_ORDER: Executing MPAGES_EVENT with parameters: ' + parameters);\n      \n      const el = document.getElementById('applink');\n      if (el) {\n        // @ts-ignore\n        el.href = 'javascript:' + mpagesEventCall;\n        // @ts-ignore\n        el.click();\n      } else {\n        throw new Error('Element with id \"applink\" not found');\n      }\n      \n      this.mPage.putLog('MODIFY_ORDER: MPAGES_EVENT executed successfully');\n      \n    } catch (error) {\n      this.mPage.putLog('MODIFY_ORDER failed: ' + error);\n      throw error;\n    }\n  }\n} ","import { Injectable } from '@angular/core';\nimport { Observable, of, from } from 'rxjs';\nimport { CustomService } from '@clinicaloffice/clinical-office-mpage-core';\n\nexport interface PatientDocument {\n  id: string;\n  documentName: string;\n  documentType: string;\n  documentDate: Date;\n  documentSize: string;\n  selected: boolean;\n  contentTypeKey: string;\n  contentTypeDisplay: string;\n  contentTypeDescription: string;\n  identifier: string;\n  contentUid: string;\n  mediaType: string;\n  appCtx: string;\n  mediaObjectIdentifier: string;\n  parentEntityName: string;\n  parentEntityId: number;\n}\n\nexport interface PatientInfo {\n  fin: string;\n  name: string;\n  dateOfBirth: Date;\n  documents: PatientDocument[];\n  personId: number;\n  encntrId: number;\n  facility: string;\n  unit: string;\n  encntrType: string;\n  medService: string;\n  regDtTm: Date;\n  arrivalDtTm: Date;\n  dischDtTm: Date;\n  sex: string;\n  mrn: string;\n}\n\nexport interface PatientSearchResult {\n  fin: string;\n  name: string;\n  dateOfBirth: Date;\n  encntrId: number;\n  personId: number;\n  mrn: string;\n  facility: string;\n  unit: string;\n  encntrType: string;\n  medService: string;\n  regDtTm: Date;\n  arrivalDtTm: Date;\n  dischDtTm: Date;\n  sex: string;\n  selected?: boolean;\n}\n\nexport interface ConfigData {\n  // Configuration object structure will be defined based on actual response\n  [key: string]: any;\n}\n\nexport interface DmsMediaInstanceRequest {\n  mediaInstanceId: number;\n}\n\nexport interface DownloadResult {\n  mediaInstanceId: number;\n  documentType: string;\n  filename: string;\n  status: number;\n  fullpath: string;\n  message: string;\n  documentName: string;\n  contentType: string;\n}\n\nexport interface DownloadDocumentsResponse {\n  downloadResults: DownloadResult[];\n}\n\nexport interface DownloadProgress {\n  total: number;\n  completed: number;\n  failed: number;\n  current: DmsMediaInstanceRequest | null;\n  results: DownloadResult[];\n}\n\nexport interface SequentialDownloadResponse {\n  progress: DownloadProgress;\n  isComplete: boolean;\n  allResults: DownloadResult[];\n}\n\nexport interface ExtractRequest {\n  personId: number;\n  encntrId: number;\n  downloadedFiles: DownloadedFile[];\n}\n\nexport interface DownloadedFile {\n  filename: string;\n  fullpath: string;\n  documentName: string;\n  documentType: string;\n  mediaInstanceId: number;\n}\n\nexport interface ExtractResponse {\n  success: boolean;\n  zipFileUrl?: string;\n  zipFileName?: string;\n  message: string;\n  metadataFile?: string;\n  zipCammIdentifier?: string;\n  downloadUrl?: string;\n  fileName?: string;  // For fileTransfer endpoint\n  nodeName?: string;  // For fileTransfer endpoint\n  extractInfo?: {\n    zipFilename?: string;\n    metadataFilename?: string;\n    fileCount?: number;\n    zipCammIdentifier?: string;\n    downloadUrl?: string;\n    fileName?: string;  // For fileTransfer endpoint\n    nodeName?: string;  // For fileTransfer endpoint\n  };\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DocumentExtractService {\n\n  private configData: ConfigData | null = null;\n\n  constructor(private customService: CustomService) { }\n\n  /**\n   * Loads configuration data from the service\n   * @returns Observable of ConfigData\n   */\n  getConfigData(): Observable<ConfigData> {\n    console.log('[DocumentExtractService] getConfigData() - Starting configuration data load');\n    return new Observable<ConfigData>(observer => {\n      this.customService.load(\n        {\n          customScript: {\n            script: [\n              {\n                name: 'chs_document_extract_svc',\n                run: 'pre',\n                id: 'configData',\n                parameters: { \n                  requestType: 'getConfigData', \n                  requestData: {}\n                }\n              }\n            ],\n            clearPatientSource: true\n          }\n        },\n        [{ personId: 0, encntrId: 0 }],\n        () => {\n          try {\n            console.log('[DocumentExtractService] getConfigData() - Service call completed, retrieving data');\n            const raw = this.customService.get('configData');\n            \n            if (!raw) {\n              console.error('[DocumentExtractService] getConfigData() - No configuration data received');\n              observer.error('No configuration data received');\n              return;\n            }\n\n            console.log('[DocumentExtractService] getConfigData() - Configuration data received:', raw);\n            this.configData = raw;\n            observer.next(raw);\n            observer.complete();\n          } catch (error) {\n            console.error('[DocumentExtractService] getConfigData() - Error:', error);\n            observer.error(error);\n          }\n        }\n      );\n    });\n  }\n\n  /**\n   * Searches for patients by FIN\n   * @param fin The patient's FIN (Financial Identification Number)\n   * @returns Observable of PatientSearchResult array\n   */\n  searchPatients(fin: string): Observable<PatientSearchResult[]> {\n    console.log('[DocumentExtractService] searchPatients() - Starting patient search for FIN:', fin);\n    return new Observable<PatientSearchResult[]>(observer => {\n      this.customService.load(\n        {\n          customScript: {\n            script: [\n              {\n                name: 'chs_document_extract_svc',\n                run: 'pre',\n                id: 'patientSearch',\n                parameters: { \n                  requestType: 'searchPatients', \n                  requestData: JSON.stringify({chs_document_extract_svc_request: { fin: fin }})\n                }\n              }\n            ],\n            clearPatientSource: true\n          }\n        },\n        [{ personId: 0, encntrId: 0 }],\n        () => {\n          try {\n            console.log('[DocumentExtractService] searchPatients() - Service call completed, retrieving data');\n            const raw = this.customService.get('patientSearch');\n            \n            if (!raw) {\n              console.error('[DocumentExtractService] searchPatients() - No patient search results received');\n              observer.error('No patient search results received');\n              return;\n            }\n\n            console.log('[DocumentExtractService] searchPatients() - Raw response received:', raw);\n            // Map the raw response to PatientSearchResult array\n            const patients: PatientSearchResult[] = this.mapToPatientSearchResults(raw);\n            console.log('[DocumentExtractService] searchPatients() - Mapped patients:', patients);\n            observer.next(patients);\n            observer.complete();\n          } catch (error) {\n            console.error('[DocumentExtractService] searchPatients() - Error:', error);\n            observer.error(error);\n          }\n        }\n      );\n    });\n  }\n\n  /**\n   * Searches for patient documents by Encounter ID\n   * @param encntrId The patient's Encounter ID\n   * @returns Observable of PatientInfo with documents\n   */\n  getPatientDocuments(encntrId: number): Observable<PatientInfo> {\n    console.log('[DocumentExtractService] getPatientDocuments() - Starting document retrieval for encounter ID:', encntrId);\n    return new Observable<PatientInfo>(observer => {\n      this.customService.load(\n        {\n          customScript: {\n            script: [\n              {\n                name: 'chs_document_extract_svc',\n                run: 'pre',\n                id: 'patientDocuments',\n                parameters: { \n                  requestType: 'getPatientDocuments', \n                  requestData: JSON.stringify({chs_document_extract_svc_request: { encntrId: encntrId }})\n                }\n              }\n            ],\n            clearPatientSource: true\n          }\n        },\n        [{ personId: 0, encntrId: 0 }],\n        () => {\n          try {\n            console.log('[DocumentExtractService] getPatientDocuments() - Service call completed, retrieving data');\n            const raw = this.customService.get('patientDocuments');\n            \n            if (!raw) {\n              console.error('[DocumentExtractService] getPatientDocuments() - No response from document service');\n              observer.error('No response from document service');\n              return;\n            }\n\n            console.log('[DocumentExtractService] getPatientDocuments() - Raw response received:', raw);\n            // Map the raw response to PatientInfo structure\n            const patientInfo: PatientInfo = this.mapToPatientInfo(raw);\n            console.log('[DocumentExtractService] getPatientDocuments() - Mapped patient info:', patientInfo);\n            observer.next(patientInfo);\n            observer.complete();\n          } catch (error) {\n            console.error('[DocumentExtractService] getPatientDocuments() - Error:', error);\n            observer.error(error);\n          }\n        }\n      );\n    });\n  }\n\n  /**\n   * Initiates document download for selected documents\n   * @param personId The patient's person ID\n   * @param encntrId The patient's encounter ID\n   * @param dmsMediaInstanceRequests Array of document media instance requests to download\n   * @returns Observable of download status\n   */\n  downloadDocuments(personId: number, encntrId: number, dmsMediaInstanceRequests: DmsMediaInstanceRequest[]): Observable<DownloadDocumentsResponse> {\n    console.log('[DocumentExtractService] downloadDocuments() - Starting download for:', {\n      personId,\n      encntrId,\n      requestCount: dmsMediaInstanceRequests.length,\n      requests: dmsMediaInstanceRequests\n    });\n    return new Observable<DownloadDocumentsResponse>(observer => {\n      this.customService.load(\n        {\n          customScript: {\n            script: [\n              {\n                name: 'chs_document_extract_svc',\n                run: 'pre',\n                id: 'downloadDocuments',\n                parameters: { \n                  requestType: 'downloadDocuments', \n                  requestData: JSON.stringify({\n                    chs_document_extract_svc_request: {\n                      personId: personId,\n                      encntrId: encntrId,\n                      dmsMediaInstanceIds: dmsMediaInstanceRequests\n                    }\n                  })\n                }\n              }\n            ],\n            clearPatientSource: true\n          }\n        },\n        [{ personId: personId, encntrId: encntrId }],\n        () => {\n          try {\n            console.log('[DocumentExtractService] downloadDocuments() - Service call completed, retrieving data');\n            const raw = this.customService.get('downloadDocuments');\n            \n            if (!raw) {\n              console.error('[DocumentExtractService] downloadDocuments() - No response from download service');\n              observer.error('No response from download service');\n              return;\n            }\n\n            console.log('[DocumentExtractService] downloadDocuments() - Raw response received:', raw);\n            // Parse the response to get download results\n            const downloadResponse: DownloadDocumentsResponse = this.parseDownloadResponse(raw);\n            console.log('[DocumentExtractService] downloadDocuments() - Parsed download response:', downloadResponse);\n            observer.next(downloadResponse);\n            observer.complete();\n          } catch (error) {\n            console.error('[DocumentExtractService] downloadDocuments() - Error:', error);\n            observer.error(error);\n          }\n        }\n      );\n    });\n  }\n\n  /**\n   * Processes a single document download request sequentially.\n   * @param personId The patient's person ID.\n   * @param encntrId The patient's encounter ID.\n   * @param dmsMediaInstanceRequest The single document media instance request to download.\n   * @returns Observable of SequentialDownloadResponse.\n   */\n  downloadSingleDocument(personId: number, encntrId: number, dmsMediaInstanceRequest: DmsMediaInstanceRequest): Observable<SequentialDownloadResponse> {\n    console.log('[DocumentExtractService] downloadSingleDocument() - Starting sequential download for single document:', dmsMediaInstanceRequest);\n    return new Observable<SequentialDownloadResponse>(observer => {\n      this.customService.load(\n        {\n          customScript: {\n            script: [\n              {\n                name: 'chs_document_extract_svc',\n                run: 'pre',\n                id: `downloadSingleDocument_${dmsMediaInstanceRequest.mediaInstanceId}`,\n                parameters: { \n                  requestType: 'downloadSingleDocument', \n                  requestData: JSON.stringify({\n                    chs_document_extract_svc_request: {\n                      personId: personId,\n                      encntrId: encntrId,\n                      dmsMediaInstanceId: dmsMediaInstanceRequest.mediaInstanceId\n                    }\n                  })\n                }\n              }\n            ],\n            clearPatientSource: true\n          }\n        },\n        [{ personId: personId, encntrId: encntrId }],\n        () => {\n          try {\n            console.log('[DocumentExtractService] downloadSingleDocument() - Service call completed, retrieving data');\n            const raw = this.customService.get(`downloadSingleDocument_${dmsMediaInstanceRequest.mediaInstanceId}`);\n            \n            if (!raw) {\n              console.error('[DocumentExtractService] downloadSingleDocument() - No response from download service for single document');\n              observer.error('No response from download service for single document');\n              return;\n            }\n\n            console.log('[DocumentExtractService] downloadSingleDocument() - Raw response received:', raw);\n            const downloadResult: DownloadResult = this.parseDownloadSingleDocumentResponse(raw);\n            console.log('[DocumentExtractService] downloadSingleDocument() - Parsed single document result:', downloadResult);\n\n            const progress: DownloadProgress = {\n              total: 1,\n              completed: 1,\n              failed: 0,\n              current: dmsMediaInstanceRequest,\n              results: [downloadResult]\n            };\n            const isComplete = true;\n            const allResults = [downloadResult];\n\n            observer.next({ progress, isComplete, allResults });\n            observer.complete();\n          } catch (error) {\n            console.error('[DocumentExtractService] downloadSingleDocument() - Error:', error);\n            observer.error(error);\n          }\n        }\n      );\n    });\n  }\n\n  /**\n   * Downloads documents sequentially, one at a time, with progress tracking.\n   * @param personId The patient's person ID.\n   * @param encntrId The patient's encounter ID.\n   * @param dmsMediaInstanceRequests Array of document media instance requests to download.\n   * @returns Observable of SequentialDownloadResponse with progress updates.\n   */\n  downloadDocumentsSequentially(personId: number, encntrId: number, dmsMediaInstanceRequests: DmsMediaInstanceRequest[]): Observable<SequentialDownloadResponse> {\n    console.log('[DocumentExtractService] downloadDocumentsSequentially() - Starting sequential download for:', {\n      personId,\n      encntrId,\n      requestCount: dmsMediaInstanceRequests.length,\n      requests: dmsMediaInstanceRequests\n    });\n\n    return new Observable<SequentialDownloadResponse>(observer => {\n      const total = dmsMediaInstanceRequests.length;\n      let completed = 0;\n      let failed = 0;\n      const allResults: DownloadResult[] = [];\n      let currentIndex = 0;\n\n      const processNext = () => {\n        if (currentIndex >= total) {\n          console.log('[DocumentExtractService] downloadDocumentsSequentially() - All downloads completed');\n          const progress: DownloadProgress = {\n            total,\n            completed,\n            failed,\n            current: null,\n            results: allResults\n          };\n          observer.next({ progress, isComplete: true, allResults });\n          observer.complete();\n          return;\n        }\n\n        const currentRequest = dmsMediaInstanceRequests[currentIndex];\n        console.log('[DocumentExtractService] downloadDocumentsSequentially() - Processing download', currentIndex + 1, 'of', total, ':', currentRequest);\n\n        const progress: DownloadProgress = {\n          total,\n          completed,\n          failed,\n          current: currentRequest,\n          results: allResults\n        };\n        observer.next({ progress, isComplete: false, allResults });\n\n        this.downloadSingleDocument(personId, encntrId, currentRequest).subscribe({\n          next: (response) => {\n            console.log('[DocumentExtractService] downloadDocumentsSequentially() - Single document download completed:', response);\n            const result = response.allResults[0];\n            allResults.push(result);\n            \n            if (result.status === 1) {\n              completed++;\n              console.log('[DocumentExtractService] downloadDocumentsSequentially() - Download successful for mediaInstanceId:', result.mediaInstanceId);\n            } else {\n              failed++;\n              console.log('[DocumentExtractService] downloadDocumentsSequentially() - Download failed for mediaInstanceId:', result.mediaInstanceId, 'Error:', result.message);\n            }\n            \n            currentIndex++;\n            processNext();\n          },\n          error: (error) => {\n            console.error('[DocumentExtractService] downloadDocumentsSequentially() - Error downloading single document:', error);\n            failed++;\n            currentIndex++;\n            processNext();\n          }\n        });\n      };\n\n      processNext();\n    });\n  }\n\n  /**\n   * Creates an extract (metadata file and zip archive) from downloaded files\n   * @param extractRequest The extract request containing person info and downloaded files\n   * @returns Observable of ExtractResponse\n   */\n  createExtract(extractRequest: ExtractRequest): Observable<ExtractResponse> {\n    console.log('[DocumentExtractService] createExtract() - Starting extract creation:', {\n      personId: extractRequest.personId,\n      encntrId: extractRequest.encntrId,\n      fileCount: extractRequest.downloadedFiles.length\n    });\n\n    return new Observable<ExtractResponse>(observer => {\n      this.customService.load(\n        {\n          customScript: {\n            script: [\n              {\n                name: 'chs_document_extract_svc',\n                run: 'pre',\n                id: 'createExtract',\n                parameters: { \n                  requestType: 'createExtract', \n                  requestData: JSON.stringify({\n                    chs_document_extract_svc_request: {\n                      personId: extractRequest.personId,\n                      encntrId: extractRequest.encntrId,\n                      downloadedFiles: extractRequest.downloadedFiles\n                    }\n                  })\n                }\n              }\n            ],\n            clearPatientSource: true\n          }\n        },\n        [{ personId: extractRequest.personId, encntrId: extractRequest.encntrId }],\n        () => {\n          try {\n            console.log('[DocumentExtractService] createExtract() - Service call completed, retrieving data');\n            const raw = this.customService.get('createExtract');\n            \n            if (!raw) {\n              console.error('[DocumentExtractService] createExtract() - No response from extract service');\n              observer.error('No response from extract service');\n              return;\n            }\n\n            console.log('[DocumentExtractService] createExtract() - Raw response received:', raw);\n            const extractResponse: ExtractResponse = this.parseExtractResponse(raw);\n            console.log('[DocumentExtractService] createExtract() - Parsed extract response:', extractResponse);\n            observer.next(extractResponse);\n            observer.complete();\n          } catch (error) {\n            console.error('[DocumentExtractService] createExtract() - Error:', error);\n            observer.error(error);\n          }\n        }\n      );\n    });\n  }\n\n  /**\n   * Maps raw service response to PatientSearchResult array\n   * @param raw Raw response from the service\n   * @returns PatientSearchResult array\n   */\n  private mapToPatientSearchResults(raw: any): PatientSearchResult[] {\n    console.log('[DocumentExtractService] mapToPatientSearchResults() - Starting mapping of raw data:', raw);\n    // Map the qual array from the response to PatientSearchResult objects\n    if (raw.qual && Array.isArray(raw.qual)) {\n      const results = raw.qual.map((patient: any) => ({\n        fin: patient.fin || '',\n        name: patient.nameFullFormatted || '',\n        dateOfBirth: patient.dob ? this.parseDate(patient.dob) : new Date(),\n        encntrId: patient.encntrId || 0,\n        personId: patient.personId || 0,\n        mrn: patient.mrn || '',\n        facility: patient.facility || '',\n        unit: patient.unit || '',\n        encntrType: patient.encntrType || '',\n        medService: patient.medService || '',\n        regDtTm: patient.regDtTm ? new Date(patient.regDtTm) : new Date(),\n        arrivalDtTm: patient.arrivalDtTm ? new Date(patient.arrivalDtTm) : new Date(),\n        dischDtTm: patient.dischDtTm ? new Date(patient.dischDtTm) : new Date(),\n        sex: patient.sex || '',\n        selected: false\n      }));\n      console.log('[DocumentExtractService] mapToPatientSearchResults() - Mapped results:', results);\n      return results;\n    }\n    console.warn('[DocumentExtractService] mapToPatientSearchResults() - No qual array found in raw data');\n    return [];\n  }\n\n  /**\n   * Parses date strings in format \"DD-MMM-YYYY\" to Date object\n   * @param dateStr Date string in format \"DD-MMM-YYYY\"\n   * @returns Date object\n   */\n  private parseDate(dateStr: string): Date {\n    console.log('[DocumentExtractService] parseDate() - Parsing date string:', dateStr);\n    if (!dateStr || dateStr === '0000-00-00T00:00:00.000+00:00') {\n      console.log('[DocumentExtractService] parseDate() - Using default date for invalid date string');\n      return new Date();\n    }\n    \n    // Handle the \"DD-MMM-YYYY\" format from the sample\n    const months: { [key: string]: number } = {\n      'JAN': 0, 'FEB': 1, 'MAR': 2, 'APR': 3, 'MAY': 4, 'JUN': 5,\n      'JUL': 6, 'AUG': 7, 'SEP': 8, 'OCT': 9, 'NOV': 10, 'DEC': 11\n    };\n    \n    const parts = dateStr.split('-');\n    if (parts.length === 3) {\n      const day = parseInt(parts[0]);\n      const month = months[parts[1]];\n      const year = parseInt(parts[2]);\n      \n      if (!isNaN(day) && month !== undefined && !isNaN(year)) {\n        const result = new Date(year, month, day);\n        console.log('[DocumentExtractService] parseDate() - Successfully parsed date:', result);\n        return result;\n      }\n    }\n    \n    // Fallback to standard Date parsing\n    console.log('[DocumentExtractService] parseDate() - Using fallback date parsing');\n    return new Date(dateStr);\n  }\n\n  /**\n   * Maps raw service response to PatientInfo structure\n   * @param raw Raw response from the service\n   * @returns PatientInfo object\n   */\n  private mapToPatientInfo(raw: any): PatientInfo {\n    console.log('[DocumentExtractService] mapToPatientInfo() - Starting mapping of raw data:', raw);\n    // Extract patient information from the first qual entry\n    const patientQual = raw.qual && raw.qual.length > 0 ? raw.qual[0] : {};\n    console.log('[DocumentExtractService] mapToPatientInfo() - Patient qual data:', patientQual);\n    \n    // Map documents from dmsQual array\n    const documents: PatientDocument[] = patientQual.dmsQual ? patientQual.dmsQual.map((doc: any) => ({\n      id: doc.dmsMediaInstanceId?.toString() || '',\n      documentName: doc.name || '',\n      documentType: doc.contentTypeDisplay || '',\n      documentDate: doc.createdDtTm ? new Date(doc.createdDtTm) : new Date(),\n      documentSize: this.formatFileSize(doc.contentSize || 0),\n      selected: false,\n      contentTypeKey: doc.contentTypeKey || '',\n      contentTypeDisplay: doc.contentTypeDisplay || '',\n      contentTypeDescription: doc.contentTypeDescription || '',\n      identifier: doc.identifier || '',\n      contentUid: doc.contentUid || '',\n      mediaType: doc.mediaType || '',\n      appCtx: doc.appCtx || '',\n      mediaObjectIdentifier: doc.mediaObjectIdentifier || '',\n      parentEntityName: doc.parentEntityName || '',\n      parentEntityId: doc.parentEntityId || 0\n    })) : [];\n    \n    console.log('[DocumentExtractService] mapToPatientInfo() - Mapped documents:', documents);\n\n    const result = {\n      fin: patientQual.fin || '',\n      name: patientQual.nameFullFormatted || '',\n      dateOfBirth: patientQual.dob ? this.parseDate(patientQual.dob) : new Date(),\n      documents: documents,\n      personId: patientQual.personId || 0,\n      encntrId: patientQual.encntrId || 0,\n      facility: patientQual.facility || '',\n      unit: patientQual.unit || '',\n      encntrType: patientQual.encntrType || '',\n      medService: patientQual.medService || '',\n      regDtTm: patientQual.regDtTm ? new Date(patientQual.regDtTm) : new Date(),\n      arrivalDtTm: patientQual.arrivalDtTm ? new Date(patientQual.arrivalDtTm) : new Date(),\n      dischDtTm: patientQual.dischDtTm ? new Date(patientQual.dischDtTm) : new Date(),\n      sex: patientQual.sex || '',\n      mrn: patientQual.mrn || ''\n    };\n    \n    console.log('[DocumentExtractService] mapToPatientInfo() - Final mapped result:', result);\n    return result;\n  }\n\n  /**\n   * Formats file size in bytes to human readable format\n   * @param bytes File size in bytes\n   * @returns Formatted file size string\n   */\n  private formatFileSize(bytes: number): string {\n    console.log('[DocumentExtractService] formatFileSize() - Formatting bytes:', bytes);\n    if (bytes === 0) {\n      console.log('[DocumentExtractService] formatFileSize() - Returning 0 Bytes');\n      return '0 Bytes';\n    }\n    \n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    const result = parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n    \n    console.log('[DocumentExtractService] formatFileSize() - Formatted result:', result);\n    return result;\n  }\n\n  /**\n   * Parses the download response from the service\n   * @param raw Raw response from the service\n   * @returns DownloadDocumentsResponse object\n   */\n  private parseDownloadResponse(raw: any): DownloadDocumentsResponse {\n    console.log('[DocumentExtractService] parseDownloadResponse() - Starting parsing of raw response:', raw);\n    if (raw.downloadDocuments_reply && raw.downloadDocuments_reply.downloadResults) {\n      const results = {\n        downloadResults: raw.downloadDocuments_reply.downloadResults.map((result: any) => ({\n          mediaInstanceId: result.mediaInstanceId || 0,\n          documentType: result.documentType || '',\n          filename: result.filename || '',\n          status: result.status || 0,\n          fullpath: result.fullpath || '',\n          message: result.message || '',\n          documentName: result.documentName || '',\n          contentType: result.contentType || ''\n        }))\n      };\n      console.log('[DocumentExtractService] parseDownloadResponse() - Parsed results:', results);\n      return results;\n    }\n    \n    // Return empty response if structure is not as expected\n    console.warn('[DocumentExtractService] parseDownloadResponse() - No downloadDocuments_reply or downloadResults found in raw data');\n    return {\n      downloadResults: []\n    };\n  }\n\n  /**\n   * Parses the response for a single document download request.\n   * @param raw Raw response from the service.\n   * @returns A single DownloadResult.\n   */\n  private parseDownloadSingleDocumentResponse(raw: any): DownloadResult {\n    console.log('[DocumentExtractService] parseDownloadSingleDocumentResponse() - Starting parsing of raw response:', raw);\n    \n    // Check for the new response structure with qual array\n    if (raw.qual && raw.qual.length > 0 && raw.qual[0].dmsQual && raw.qual[0].dmsQual.length > 0) {\n      const dmsItem = raw.qual[0].dmsQual[0];\n      console.log('[DocumentExtractService] parseDownloadSingleDocumentResponse() - Found dmsQual item:', dmsItem);\n      \n      // Check if download was successful based on downloadedInd\n      const isSuccess = dmsItem.downloadedInd === 1;\n      console.log('[DocumentExtractService] parseDownloadSingleDocumentResponse() - Download success status:', isSuccess);\n      \n      // Parse the download response if available\n      let downloadResponse = null;\n      if (dmsItem.downloadResponse) {\n        try {\n          downloadResponse = JSON.parse(dmsItem.downloadResponse);\n          console.log('[DocumentExtractService] parseDownloadSingleDocumentResponse() - Parsed download response:', downloadResponse);\n        } catch (error) {\n          console.warn('[DocumentExtractService] parseDownloadSingleDocumentResponse() - Failed to parse download response:', error);\n        }\n      }\n      \n      const result = {\n        mediaInstanceId: dmsItem.dmsMediaInstanceId || 0,\n        documentType: dmsItem.contentTypeDisplay || '',\n        filename: dmsItem.filename || dmsItem.name || '',\n        status: isSuccess ? 1 : 0,\n        fullpath: downloadResponse?.CAMM_DOWNLOAD_RESPONSE?.FULLPATH || '',\n        message: downloadResponse?.CAMM_DOWNLOAD_RESPONSE?.MESSAGE || (isSuccess ? 'Download successful' : 'Download failed'),\n        documentName: dmsItem.name || '',\n        contentType: dmsItem.contentTypeKey || ''\n      };\n      \n      console.log('[DocumentExtractService] parseDownloadSingleDocumentResponse() - Parsed result:', result);\n      return result;\n    }\n    \n    // Fallback to old response structure\n    if (raw.downloadSingleDocument_reply && raw.downloadSingleDocument_reply.downloadResult) {\n      const result = {\n        mediaInstanceId: raw.downloadSingleDocument_reply.downloadResult.mediaInstanceId || 0,\n        documentType: raw.downloadSingleDocument_reply.downloadResult.documentType || '',\n        filename: raw.downloadSingleDocument_reply.downloadResult.filename || '',\n        status: raw.downloadSingleDocument_reply.downloadResult.status || 0,\n        fullpath: raw.downloadSingleDocument_reply.downloadResult.fullpath || '',\n        message: raw.downloadSingleDocument_reply.downloadResult.message || '',\n        documentName: raw.downloadSingleDocument_reply.downloadResult.documentName || '',\n        contentType: raw.downloadSingleDocument_reply.downloadResult.contentType || ''\n      };\n      console.log('[DocumentExtractService] parseDownloadSingleDocumentResponse() - Parsed fallback result:', result);\n      return result;\n    }\n    \n    console.warn('[DocumentExtractService] parseDownloadSingleDocumentResponse() - No valid response structure found in raw data');\n    return {\n      mediaInstanceId: 0,\n      documentType: '',\n      filename: '',\n      status: 0,\n      fullpath: '',\n      message: 'No response data found',\n      documentName: '',\n      contentType: ''\n    };\n  }\n\n  /**\n   * Parses the extract response from the service\n   * @param raw Raw response from the service\n   * @returns ExtractResponse object\n   */\n  private parseExtractResponse(raw: any): ExtractResponse {\n    console.log('[DocumentExtractService] parseExtractResponse() - Starting parsing of raw response:', raw);\n    \n    // Check for the new response structure with extractInfo and qual\n    if (raw.extractInfo && raw.qual && raw.qual.length > 0) {\n      const extractInfo = raw.extractInfo;\n      const qual = raw.qual[0];\n      const isSuccess = raw.reply && raw.reply.statusData && raw.reply.statusData.status === 'S';\n      \n      const result = {\n        success: isSuccess,\n        zipFileUrl: extractInfo.downloadUrl || '',\n        zipFileName: extractInfo.zipFilename || 'extracted_documents.zip',\n        message: raw.reply?.text || (isSuccess ? 'Extract completed successfully' : 'Extract failed'),\n        metadataFile: extractInfo.metadataFilename || '',\n        zipCammIdentifier: extractInfo.zipCammIdentifier || qual.zipCammIdentifier || '',\n        downloadUrl: extractInfo.downloadUrl || '',\n        fileName: extractInfo.fileName || '', // Added for fileTransfer endpoint\n        nodeName: extractInfo.nodeName || '', // Added for fileTransfer endpoint\n        extractInfo: {\n          zipFilename: extractInfo.zipFilename || 'extracted_documents.zip',\n          metadataFilename: extractInfo.metadataFilename || '',\n          fileCount: extractInfo.fileCount || 0,\n          zipCammIdentifier: extractInfo.zipCammIdentifier || qual.zipCammIdentifier || '',\n          downloadUrl: extractInfo.downloadUrl || '',\n          fileName: extractInfo.fileName || '', // Added for fileTransfer endpoint\n          nodeName: extractInfo.nodeName || '' // Added for fileTransfer endpoint\n        }\n      };\n      console.log('[DocumentExtractService] parseExtractResponse() - Parsed extract result:', result);\n      return result;\n    }\n    \n    // Check for the new response structure with extract information\n    if (raw.createExtract_reply) {\n      const reply = raw.createExtract_reply;\n      const result = {\n        success: reply.success === true || reply.success === 1,\n        zipFileUrl: reply.zipFileUrl || '',\n        zipFileName: reply.zipFileName || 'extracted_documents.zip',\n        message: reply.message || 'Extract completed',\n        metadataFile: reply.metadataFile || '',\n        zipCammIdentifier: reply.zipCammIdentifier || '',\n        downloadUrl: reply.downloadUrl || '',\n        fileName: reply.fileName || '', // Added for fileTransfer endpoint\n        nodeName: reply.nodeName || '', // Added for fileTransfer endpoint\n        extractInfo: {\n          zipFilename: reply.zipFileName || 'extracted_documents.zip',\n          metadataFilename: reply.metadataFile || '',\n          fileCount: reply.fileCount || 0,\n          zipCammIdentifier: reply.zipCammIdentifier || '',\n          downloadUrl: reply.downloadUrl || '',\n          fileName: reply.fileName || '', // Added for fileTransfer endpoint\n          nodeName: reply.nodeName || '' // Added for fileTransfer endpoint\n        }\n      };\n      console.log('[DocumentExtractService] parseExtractResponse() - Parsed extract result:', result);\n      return result;\n    }\n    \n    // Fallback to status-based response\n    if (raw.reply && raw.reply.statusData) {\n      const isSuccess = raw.reply.statusData.status === 'S';\n      const result = {\n        success: isSuccess,\n        zipFileUrl: raw.zipFileUrl || '',\n        zipFileName: raw.zipFileName || 'extracted_documents.zip',\n        message: raw.reply.text || (isSuccess ? 'Extract completed successfully' : 'Extract failed'),\n        metadataFile: raw.metadataFile || '',\n        zipCammIdentifier: raw.zipCammIdentifier || '',\n        downloadUrl: raw.downloadUrl || '',\n        fileName: raw.fileName || '', // Added for fileTransfer endpoint\n        nodeName: raw.nodeName || '', // Added for fileTransfer endpoint\n        extractInfo: {\n          zipFilename: raw.zipFileName || 'extracted_documents.zip',\n          metadataFilename: raw.metadataFile || '',\n          fileCount: raw.fileCount || 0,\n          zipCammIdentifier: raw.zipCammIdentifier || '',\n          downloadUrl: raw.downloadUrl || '',\n          fileName: raw.fileName || '', // Added for fileTransfer endpoint\n          nodeName: raw.nodeName || '' // Added for fileTransfer endpoint\n        }\n      };\n      console.log('[DocumentExtractService] parseExtractResponse() - Parsed fallback result:', result);\n      return result;\n    }\n    \n    console.warn('[DocumentExtractService] parseExtractResponse() - No valid response structure found in raw data');\n    return {\n      success: false,\n      message: 'No response data found',\n      zipFileName: 'extracted_documents.zip'\n    };\n  }\n\n  /**\n   * Gets the loaded configuration data\n   * @returns ConfigData or null if not loaded\n   */\n  getLoadedConfigData(): ConfigData | null {\n    return this.configData;\n  }\n\n  /**\n   * Gets system credentials for basic authorization\n   * @returns Observable of credentials object\n   */\n  getSystemCredentials(): Observable<{username: string, password: string}> {\n    console.log('[DocumentExtractService] getSystemCredentials() - Getting system credentials');\n    \n    return new Observable<{username: string, password: string}>(observer => {\n      this.customService.load(\n        {\n          customScript: {\n            script: [\n              {\n                name: 'chs_document_extract_svc',\n                run: 'pre',\n                id: 'systemCredentials',\n                parameters: { \n                  requestType: 'getSystemCredentials', \n                  requestData: {}\n                }\n              }\n            ],\n            clearPatientSource: true\n          }\n        },\n        [{ personId: 0, encntrId: 0 }],\n        () => {\n          try {\n            console.log('[DocumentExtractService] getSystemCredentials() - Service call completed');\n            const raw = this.customService.get('systemCredentials');\n            \n            if (!raw) {\n              console.error('[DocumentExtractService] getSystemCredentials() - No credentials data received');\n              observer.error('No credentials data received');\n              return;\n            }\n\n            // Parse the credentials from the response\n            let credentials = {\n              username: '',\n              password: ''\n            };\n            \n            // Check for the systemCredentials_reply structure\n            if (raw.systemCredentials_reply) {\n              credentials = {\n                username: raw.systemCredentials_reply.username || '',\n                password: raw.systemCredentials_reply.password || ''\n              };\n            } else if (raw.username && raw.password) {\n              // Direct response structure\n              credentials = {\n                username: raw.username,\n                password: raw.password\n              };\n            } else {\n              console.error('[DocumentExtractService] getSystemCredentials() - No valid credentials structure found in response:', raw);\n              observer.error('No valid credentials structure found in response');\n              return;\n            }\n            \n            console.log('[DocumentExtractService] getSystemCredentials() - Credentials received:', credentials);\n            observer.next(credentials);\n            observer.complete();\n          } catch (error) {\n            console.error('[DocumentExtractService] getSystemCredentials() - Error:', error);\n            observer.error(error);\n          }\n        }\n      );\n    });\n  }\n\n  /**\n   * Downloads the extract file using the fileTransfer/retrieveFile endpoint\n   * Now uses MPAGES_SVC_AUTH instead of basic credentials and dynamic URL construction\n   * @param fileName The name of the file to retrieve\n   * @param nodeName The node name where the file is stored\n   * @returns Observable of the file blob\n   */\n  downloadExtractFile(fileName: string, nodeName: string): Observable<Blob> {\n    console.log('[DocumentExtractService] downloadExtractFile() - Starting file download with MPAGES_SVC_AUTH:', { fileName, nodeName });\n    \n    return new Observable<Blob>(observer => {\n      // Construct URL dynamically based on current host instead of hardcoded URL\n      const currentHost = window.location.host;\n      const url = `${window.location.protocol}//${currentHost}/mpages/fileTransfer/retrieveFile`;\n      \n      console.log('[DocumentExtractService] downloadExtractFile() - Using URL:', url);\n      \n      // Create FormData with the required parts\n      const formData = new FormData();\n      formData.append('fileName', fileName);\n      formData.append('nodeName', nodeName);\n      \n      // Create XMLHttpRequest for the POST request\n      const xhr = new XMLHttpRequest();\n      xhr.open('POST', url);\n      \n      // Set response type to blob for file download\n      xhr.responseType = 'blob';\n      \n      // Apply MPAGES_SVC_AUTH if available and in Edge context\n      const setupAuth = async () => {\n        try {\n          if ((window as any).MPAGES_SVC_AUTH) {\n            console.log('[DocumentExtractService] downloadExtractFile() - Applying MPAGES_SVC_AUTH');\n            await (window as any).MPAGES_SVC_AUTH(xhr);\n          } else {\n            console.log('[DocumentExtractService] downloadExtractFile() - MPAGES_SVC_AUTH not available, using fallback');\n            // Fallback to basic credentials if MPAGES_SVC_AUTH is not available\n            try {\n              const credentials = await this.getSystemCredentials().toPromise();\n              if (credentials) {\n                const authString = `${credentials.username}:${credentials.password}`;\n                const credentials_b64 = btoa(authString);\n                xhr.setRequestHeader('Authorization', `Basic ${credentials_b64}`);\n              } else {\n                console.warn('[DocumentExtractService] downloadExtractFile() - No credentials received');\n              }\n            } catch (credError) {\n              console.warn('[DocumentExtractService] downloadExtractFile() - Could not get basic credentials:', credError);\n            }\n          }\n        } catch (authError) {\n          console.warn('[DocumentExtractService] downloadExtractFile() - Authentication setup failed:', authError);\n        }\n        \n        // Set up response handlers\n        xhr.onload = () => {\n          if (xhr.status === 200) {\n            console.log('[DocumentExtractService] downloadExtractFile() - Download successful');\n            observer.next(xhr.response);\n            observer.complete();\n          } else {\n            console.error('[DocumentExtractService] downloadExtractFile() - Download failed with status:', xhr.status);\n            observer.error(new Error(`Download failed with status: ${xhr.status}`));\n          }\n        };\n        \n        xhr.onerror = () => {\n          console.error('[DocumentExtractService] downloadExtractFile() - Network error during download');\n          observer.error(new Error('Network error during download'));\n        };\n        \n        // Send the FormData\n        xhr.send(formData);\n      };\n      \n      setupAuth().catch(error => {\n        console.error('[DocumentExtractService] downloadExtractFile() - Setup error:', error);\n        observer.error(error);\n      });\n    });\n  }\n} ","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-nested-object-viewer',\n  templateUrl: './nested-object-viewer.component.html',\n  styleUrls: ['./nested-object-viewer.component.scss']\n})\nexport class NestedObjectViewerComponent {\n  @Input() data: any = null;\n  @Input() path: string = '';\n  @Input() expandedSections: Set<string> = new Set();\n  @Input() onTogglePath: (path: string) => void = () => {};\n\n  Array = Array;\n  JSON = JSON;\n\n  /**\n   * Gets the type of a value for display purposes\n   */\n  getValueType(value: any): string {\n    if (value === null) return 'null';\n    if (value === undefined) return 'undefined';\n    if (Array.isArray(value)) return 'array';\n    if (typeof value === 'object') return 'object';\n    return typeof value;\n  }\n\n  /**\n   * Checks if a value is expandable (object or array)\n   */\n  isExpandable(value: any): boolean {\n    return value !== null && \n           value !== undefined && \n           (typeof value === 'object' || Array.isArray(value));\n  }\n\n  /**\n   * Gets the display value for a primitive type\n   */\n  getDisplayValue(value: any): string {\n    if (value === null) return 'null';\n    if (value === undefined) return 'undefined';\n    if (typeof value === 'string') return `\"${value}\"`;\n    if (typeof value === 'boolean') return value.toString();\n    if (typeof value === 'number') return value.toString();\n    return JSON.stringify(value);\n  }\n\n  /**\n   * Gets the object keys for iteration\n   */\n  getObjectKeys(obj: any): string[] {\n    if (!obj || typeof obj !== 'object') return [];\n    return Object.keys(obj);\n  }\n\n  /**\n   * Gets the array length for display\n   */\n  getArrayLength(arr: any[]): number {\n    return Array.isArray(arr) ? arr.length : 0;\n  }\n\n  /**\n   * Checks if a value is an object (not array)\n   */\n  isObject(value: any): boolean {\n    return value !== null && typeof value === 'object' && !Array.isArray(value);\n  }\n\n  /**\n   * Checks if a value is an array\n   */\n  isArray(value: any): boolean {\n    return Array.isArray(value);\n  }\n\n  /**\n   * Formats a key for display\n   */\n  formatKey(key: string): string {\n    return key.replace(/([A-Z])/g, ' $1')\n              .replace(/^./, str => str.toUpperCase())\n              .trim();\n  }\n\n  /**\n   * Gets the full path for a nested key\n   */\n  getFullPath(key: string): string {\n    return this.path ? `${this.path}.${key}` : key;\n  }\n\n  /**\n   * Checks if a path is expanded\n   */\n  isPathExpanded(path: string): boolean {\n    return this.expandedSections.has(path);\n  }\n\n  /**\n   * Toggles a path's expanded state\n   */\n  togglePath(path: string): void {\n    this.onTogglePath(path);\n  }\n} ","<div class=\"nested-object-viewer\">\n  <div \n    *ngFor=\"let key of getObjectKeys(data)\"\n    class=\"nested-item\"\n  >\n    <!-- Section Header -->\n    <div \n      class=\"section-header\"\n      [class.expanded]=\"isPathExpanded(getFullPath(key))\"\n      (click)=\"togglePath(getFullPath(key))\"\n    >\n      <div class=\"section-info\">\n        <span class=\"expand-icon\">{{ isPathExpanded(getFullPath(key)) ? '▼' : '▶' }}</span>\n        <span class=\"section-key\">{{ formatKey(key) }}</span>\n        <span class=\"section-type\">({{ getValueType(data[key]) }})</span>\n        <span class=\"section-count\" *ngIf=\"isArray(data[key])\">\n          [{{ getArrayLength(data[key]) }} items]\n        </span>\n        <span class=\"section-count\" *ngIf=\"isObject(data[key])\">\n          [{{ getObjectKeys(data[key]).length }} keys]\n        </span>\n      </div>\n    </div>\n\n    <!-- Section Content -->\n    <div \n      class=\"section-content\"\n      *ngIf=\"isPathExpanded(getFullPath(key))\"\n    >\n      <div class=\"content-wrapper\">\n        <!-- Object Content -->\n        <div \n          *ngIf=\"isObject(data[key])\"\n          class=\"object-content\"\n        >\n          <div \n            *ngFor=\"let subKey of getObjectKeys(data[key])\"\n            class=\"sub-item\"\n          >\n            <div class=\"sub-key\">{{ subKey }}:</div>\n            <div class=\"sub-value\">\n              <span \n                *ngIf=\"!isExpandable(data[key][subKey])\"\n                class=\"primitive-value\"\n              >\n                {{ getDisplayValue(data[key][subKey]) }}\n              </span>\n              <span \n                *ngIf=\"isExpandable(data[key][subKey])\"\n                class=\"expandable-value\"\n              >\n                {{ getValueType(data[key][subKey]) }}\n                <span *ngIf=\"isArray(data[key][subKey])\">\n                  [{{ getArrayLength(data[key][subKey]) }}]\n                </span>\n                <span *ngIf=\"isObject(data[key][subKey])\">\n                  [{{ getObjectKeys(data[key][subKey]).length }}]\n                </span>\n              </span>\n            </div>\n          </div>\n        </div>\n\n        <!-- Array Content -->\n        <div \n          *ngIf=\"isArray(data[key])\"\n          class=\"array-content\"\n        >\n          <div \n            *ngFor=\"let item of data[key]; let i = index\"\n            class=\"array-item\"\n          >\n            <div class=\"array-index\">[{{ i }}]:</div>\n            <div class=\"array-value\">\n              <span \n                *ngIf=\"!isExpandable(item)\"\n                class=\"primitive-value\"\n              >\n                {{ getDisplayValue(item) }}\n              </span>\n              <span \n                *ngIf=\"isExpandable(item)\"\n                class=\"expandable-value\"\n              >\n                {{ getValueType(item) }}\n                <span *ngIf=\"isArray(item)\">\n                  [{{ getArrayLength(item) }}]\n                </span>\n                <span *ngIf=\"isObject(item)\">\n                  [{{ getObjectKeys(item).length }}]\n                </span>\n              </span>\n            </div>\n          </div>\n        </div>\n\n        <!-- Primitive Content -->\n        <div \n          *ngIf=\"!isExpandable(data[key])\"\n          class=\"primitive-content\"\n        >\n          <span class=\"primitive-value\">\n            {{ getDisplayValue(data[key]) }}\n          </span>\n        </div>\n\n        <!-- Recursive Nested Objects -->\n        <div \n          *ngIf=\"isExpandable(data[key])\"\n          class=\"nested-content\"\n        >\n          <app-nested-object-viewer\n            [data]=\"data[key]\"\n            [path]=\"getFullPath(key)\"\n            [expandedSections]=\"expandedSections\"\n            [onTogglePath]=\"onTogglePath\"\n          ></app-nested-object-viewer>\n        </div>\n      </div>\n    </div>\n  </div>\n</div> ","import { Component, OnInit, Input } from '@angular/core';\nimport { ConfigData } from '../services/document-extract.service';\n\n@Component({\n  selector: 'app-system-configuration',\n  templateUrl: './system-configuration.component.html',\n  styleUrls: ['./system-configuration.component.scss']\n})\nexport class SystemConfigurationComponent implements OnInit {\n  @Input() configData: ConfigData | null = null;\n  \n  loading = false;\n  error: string | null = null;\n  expandedSections: Set<string> = new Set();\n  Array = Array; // Make Array available in template\n  JSON = JSON; // Make JSON available in template\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  /**\n   * Toggles the expanded state of a section\n   * @param sectionKey The key of the section to toggle\n   */\n  toggleSection(sectionKey: string): void {\n    this.togglePath(sectionKey);\n  }\n\n  /**\n   * Checks if a section is expanded\n   * @param sectionKey The key of the section to check\n   * @returns True if the section is expanded\n   */\n  isSectionExpanded(sectionKey: string): boolean {\n    return this.isPathExpanded(sectionKey);\n  }\n\n  /**\n   * Gets the type of a value for display purposes\n   * @param value The value to check\n   * @returns The type string\n   */\n  getValueType(value: any): string {\n    if (value === null) return 'null';\n    if (value === undefined) return 'undefined';\n    if (Array.isArray(value)) return 'array';\n    if (typeof value === 'object') return 'object';\n    return typeof value;\n  }\n\n  /**\n   * Checks if a value is expandable (object or array)\n   * @param value The value to check\n   * @returns True if the value is expandable\n   */\n  isExpandable(value: any): boolean {\n    return value !== null && \n           value !== undefined && \n           (typeof value === 'object' || Array.isArray(value));\n  }\n\n  /**\n   * Gets the display value for a primitive type\n   * @param value The value to format\n   * @returns Formatted string\n   */\n  getDisplayValue(value: any): string {\n    if (value === null) return 'null';\n    if (value === undefined) return 'undefined';\n    if (typeof value === 'string') return `\"${value}\"`;\n    if (typeof value === 'boolean') return value.toString();\n    if (typeof value === 'number') return value.toString();\n    return JSON.stringify(value);\n  }\n\n  /**\n   * Gets the object keys for iteration\n   * @param obj The object to get keys from\n   * @returns Array of keys\n   */\n  getObjectKeys(obj: any): string[] {\n    if (!obj || typeof obj !== 'object') return [];\n    return Object.keys(obj);\n  }\n\n  /**\n   * Gets the array length for display\n   * @param arr The array to check\n   * @returns The length of the array\n   */\n  getArrayLength(arr: any[]): number {\n    return Array.isArray(arr) ? arr.length : 0;\n  }\n\n  /**\n   * Formats a key for display\n   * @param key The key to format\n   * @returns Formatted key string\n   */\n  formatKey(key: string): string {\n    return key.replace(/([A-Z])/g, ' $1')\n              .replace(/^./, str => str.toUpperCase())\n              .trim();\n  }\n\n  /**\n   * Checks if a value is an object (not array)\n   * @param value The value to check\n   * @returns True if the value is an object\n   */\n  isObject(value: any): boolean {\n    return value !== null && typeof value === 'object' && !Array.isArray(value);\n  }\n\n  /**\n   * Checks if a value is an array\n   * @param value The value to check\n   * @returns True if the value is an array\n   */\n  isArray(value: any): boolean {\n    return Array.isArray(value);\n  }\n\n  /**\n   * Expands all sections\n   */\n  expandAll(): void {\n    if (this.configData) {\n      this.expandedSections.clear();\n      this.expandAllRecursive(this.configData, '');\n    }\n  }\n\n  /**\n   * Recursively expands all nested objects and arrays\n   * @param obj The object to expand\n   * @param path The current path for generating unique keys\n   */\n  expandAllRecursive(obj: any, path: string): void {\n    if (!obj || typeof obj !== 'object') return;\n    \n    const keys = this.getObjectKeys(obj);\n    keys.forEach(key => {\n      const fullPath = path ? `${path}.${key}` : key;\n      this.expandedSections.add(fullPath);\n      \n      // Recursively expand nested objects and arrays\n      if (this.isExpandable(obj[key])) {\n        this.expandAllRecursive(obj[key], fullPath);\n      }\n    });\n  }\n\n  /**\n   * Gets a nested value by path\n   * @param obj The root object\n   * @param path The dot-separated path\n   * @returns The value at the path\n   */\n  getValueByPath(obj: any, path: string): any {\n    if (!path) return obj;\n    return path.split('.').reduce((current, key) => current?.[key], obj);\n  }\n\n  /**\n   * Checks if a path is expanded\n   * @param path The path to check\n   * @returns True if the path is expanded\n   */\n  isPathExpanded(path: string): boolean {\n    return this.expandedSections.has(path);\n  }\n\n  /**\n   * Toggles a path's expanded state\n   * @param path The path to toggle\n   */\n  togglePath(path: string): void {\n    if (this.expandedSections.has(path)) {\n      this.expandedSections.delete(path);\n    } else {\n      this.expandedSections.add(path);\n    }\n  }\n} ","<div class=\"system-configuration-container\">\n  <div class=\"config-header\">\n    <h3>System Configuration</h3>\n    <div class=\"config-status\">\n      <span class=\"status-indicator\" [class.loaded]=\"configData\"></span>\n      <span class=\"status-text\">{{ configData ? 'Configuration Loaded' : 'No Configuration' }}</span>\n    </div>\n  </div>\n\n  <div class=\"config-content\" *ngIf=\"configData\">\n    <div class=\"config-overview\">\n      <div class=\"overview-stats\">\n        <div class=\"stat-item\">\n          <span class=\"stat-label\">Configuration Size:</span>\n          <span class=\"stat-value\">{{ JSON.stringify(configData).length }} characters</span>\n        </div>\n        <div class=\"stat-item\">\n          <span class=\"stat-label\">Top Level Keys:</span>\n          <span class=\"stat-value\">{{ getObjectKeys(configData).length }}</span>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"json-viewer\">\n      <div class=\"viewer-header\">\n        <h4>Configuration Structure</h4>\n        <div class=\"viewer-controls\">\n          <button \n            class=\"btn btn-outline\"\n            (click)=\"expandedSections.clear()\"\n          >\n            Collapse All\n          </button>\n          <button \n            class=\"btn btn-outline\"\n            (click)=\"expandAll()\"\n          >\n            Expand All\n          </button>\n        </div>\n      </div>\n\n            <div class=\"json-content\">\n        <app-nested-object-viewer\n          [data]=\"configData\"\n          [path]=\"''\"\n          [expandedSections]=\"expandedSections\"\n          [onTogglePath]=\"togglePath.bind(this)\"\n        ></app-nested-object-viewer>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"no-config\" *ngIf=\"!configData\">\n    <div class=\"no-config-content\">\n      <div class=\"no-config-icon\">⚙️</div>\n      <h4>No Configuration Available</h4>\n      <p>Configuration data will appear here once loaded from the service.</p>\n    </div>\n  </div>\n</div> ","import { buildVersion, packageVersion, gitBranch } from '../app/version';\n\nexport const environment = {\n    appVersion: buildVersion,\n    packageVersion: packageVersion,\n    gitBranch: gitBranch,\n    production: false\n  };\n  ","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","// Auto-generated build version file\n// Generated on: 2025-07-12T20:50:34.880Z\nexport const buildVersion = 'v0.0.94-download-updates';\nexport const packageVersion = '0.0.94';\nexport const gitBranch = 'download-updates';\n"],"names":["RouterModule","routes","AppRoutingModule","_","_2","_3","forRoot","useHash","imports","i1","exports","DocumentTrackingComponent","i0","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","AppComponent","constructor","activatedRoute","mPage","documentService","loading","configLoaded","configData","showBackToTop","patientInfo","ngOnInit","queryParams","subscribe","params","personId","parseInt","encntrId","prsnlId","setTimeout","e","setMaxInstances","waitForServiceReady","setupBackToTop","_this","_asyncToGenerator","serviceReady","Promise","resolve","console","log","loadConfiguration","getConfigData","next","error","window","addEventListener","pageYOffset","scrollToTop","scrollTo","top","behavior","onPatientSelected","onDownloadRequest","downloadData","documentTrackingComponent","handleDownloadRequest","ɵɵdirectiveInject","ActivatedRoute","i2","mPageService","i3","DocumentExtractService","selectors","viewQuery","AppComponent_Query","rf","ctx","ɵɵtemplate","AppComponent_div_5_Template","ɵɵlistener","AppComponent_Template_app_patient_selection_patientSelected_7_listener","$event","AppComponent_Template_app_document_list_downloadRequest_8_listener","AppComponent_Template_app_document_tracking_downloadRequest_9_listener","AppComponent_Template_div_click_11_listener","ɵɵadvance","ɵɵproperty","ɵɵclassProp","documents","ɵɵpureFunction0","_c0","ErrorHandler","APP_INITIALIZER","BrowserModule","BrowserAnimationsModule","FormsModule","ReactiveFormsModule","ClinicalOfficeMpageModule","MaterialModule","ErrorHandlerService","ConfigService","MatLuxonDateModule","LuxonDateAdapter","DateAdapter","MAT_DATE_FORMATS","MAT_DATE_LOCALE","ComponentVersionComponent","PatientSelectionComponent","DocumentListComponent","SystemConfigurationComponent","NestedObjectViewerComponent","ExtractDownloadComponent","NZ_I18N","en_US","registerLocaleData","en","HttpClientModule","configFactory","configService","loadConfig","CUSTOM_DATE_FORMATS","parse","dateInput","display","dateTimeLabel","monthYearLabel","dateA11yLabel","monthYearA11yLabel","AppModule","bootstrap","provide","useFactory","deps","multi","useClass","useValue","declarations","environment","currentApplicationVersion","appVersion","packageVersion","gitBranch","decls","vars","template","ComponentVersionComponent_Template","ɵɵtextInterpolate","EventEmitter","DocumentListComponent_div_4_Template_button_click_1_listener","ɵɵrestoreView","_r6","ctx_r5","ɵɵnextContext","ɵɵresetView","selectAll","DocumentListComponent_div_4_Template_button_click_3_listener","ctx_r7","deselectAll","DocumentListComponent_div_4_Template_button_click_5_listener","ctx_r8","downloadSelected","ctx_r0","allSelected","selectedDocuments","length","ɵɵtextInterpolate1","DocumentListComponent_div_7_tr_19_Template_tr_click_0_listener","restoredCtx","_r12","document_r10","$implicit","ctx_r11","toggleDocumentSelection","DocumentListComponent_div_7_tr_19_Template_input_click_2_listener","stopPropagation","DocumentListComponent_div_7_tr_19_Template_input_change_2_listener","ctx_r14","selected","documentName","contentTypeDisplay","ɵɵpipeBind2","documentDate","documentSize","mediaType","appCtx","DocumentListComponent_div_7_Template_input_change_5_listener","_r16","ctx_r15","DocumentListComponent_div_7_tr_19_Template","ctx_r3","someSelected","ctx_r4","documentSelectionChange","downloadRequest","document","index","findIndex","doc","id","splice","push","emit","forEach","dmsMediaInstanceRequests","map","mediaInstanceId","warn","inputs","outputs","consts","DocumentListComponent_Template","DocumentListComponent_div_4_Template","DocumentListComponent_div_5_Template","DocumentListComponent_div_6_Template","DocumentListComponent_div_7_Template","DocumentListComponent_div_8_Template","getCurrentDownloadStatus","ɵɵstyleProp","getDownloadProgress","item_r7","documentType","progress","DocumentTrackingComponent_div_5_div_4_div_3_Template","DocumentTrackingComponent_div_5_div_4_div_6_Template","DocumentTrackingComponent_div_5_div_4_div_9_Template","ɵɵclassMap","ctx_r6","getStatusClass","status","documentId","getStatusText","DocumentTrackingComponent_div_5_div_4_Template","ctx_r1","downloadQueue","item_r15","filename","DocumentTrackingComponent_div_6_div_7_div_3_Template","DocumentTrackingComponent_div_6_div_7_div_6_Template","DocumentTrackingComponent_div_6_div_7_div_7_Template","DocumentTrackingComponent_div_6_Template_button_click_4_listener","_r23","ctx_r22","clearCompleted","DocumentTrackingComponent_div_6_div_7_Template","ctx_r2","completedDownloads","item_r25","DocumentTrackingComponent_div_7_div_7_div_3_Template","DocumentTrackingComponent_div_7_div_7_div_6_Template","DocumentTrackingComponent_div_7_div_7_div_9_Template","DocumentTrackingComponent_div_7_div_7_Template_button_click_10_listener","_r33","ctx_r32","retryDownload","ctx_r24","DocumentTrackingComponent_div_7_Template_button_click_4_listener","_r35","ctx_r34","clearFailed","DocumentTrackingComponent_div_7_div_7_Template","failedDownloads","DocumentTrackingComponent_div_8_Template_app_extract_download_extractComplete_1_listener","_r37","ctx_r36","handleExtractComplete","currentPatient","downloadedFiles","isDownloading","showExtractComponent","startDownload","clearDownloadState","requestCount","requests","request","toString","downloadDocumentsSequentially","response","handleSequentialDownloadResponse","handleDownloadError","isComplete","allResults","current","queueItem","find","item","result","moveToCompleted","fullpath","downloadedFile","existingFile","file","message","moveToFailed","total","completed","failed","successRate","toFixed","downloadedFilesCount","extractResponse","handleDownloadResponse","downloadResults","existingItem","retryRequest","totalItems","completedItems","filter","failedItems","Math","round","downloadingItems","pendingItems","downloadingItem","DocumentTrackingComponent_Template","DocumentTrackingComponent_div_4_Template","DocumentTrackingComponent_div_5_Template","DocumentTrackingComponent_div_6_Template","DocumentTrackingComponent_div_7_Template","DocumentTrackingComponent_div_8_Template","DocumentTrackingComponent_div_9_Template","ExtractDownloadComponent_div_6_span_2_Template","ExtractDownloadComponent_div_6_span_3_Template","isMPageAuthAvailable","extractProgress","ctx_r13","extractResult","metadataFile","extractInfo","fileCount","ExtractDownloadComponent_div_19_div_6_div_5_Template","ExtractDownloadComponent_div_19_div_6_div_6_Template","ExtractDownloadComponent_div_19_div_6_div_7_Template","zipFileName","ExtractDownloadComponent_div_19_button_8_Template_button_click_0_listener","_r17","ctx_r16","downloadWithMPagesAuth","ExtractDownloadComponent_div_19_div_6_Template","ExtractDownloadComponent_div_19_button_8_Template","ExtractDownloadComponent_div_19_Template_button_click_9_listener","_r19","ctx_r18","downloadWithUrlCredentials","downloadUrl","getDownloadButtonText","file_r21","ExtractDownloadComponent_div_20_div_4_Template","trackByFilename","extractComplete","isExtracting","extractStatus","startExtract","extractRequest","createExtract","handleExtractResponse","handleExtractError","success","downloadZipFile","zipFileUrl","downloadWithAuthentication","downloadWithFileTransfer","fallbackError","alert","_this2","xhr","XMLHttpRequest","open","responseType","authPromise","MPAGES_SVC_AUTH","downloadPromise","reject","onload","blob","toLowerCase","endsWith","size","type","url","URL","createObjectURL","link","createElement","href","download","saveWithFileSystemAPI","then","catch","body","appendChild","click","removeChild","revokeObjectURL","Error","onerror","send","suggestedName","handle","showSaveFilePicker","types","description","accept","writable","createWritable","write","close","name","getSystemCredentials","credentials","username","protocol","host","pathname","search","urlWithCredentials","password","downloadFilename","style","_this3","processedUrl","processUrlForMixedContent","g_ExtractDownloadXMLHttpRequestObj","Blob","getResponseHeader","downloadBlob","isHttpsPage","location","isHttpUrl","startsWith","replace","downloadWithUrl","getExtractButtonText","getExtractStatusText","getExtractStatusClass","isExtractButtonDisabled","shouldShowDownloadButton","fileName","nodeName","downloadExtractFile","shouldShowFileTransferButton","ExtractDownloadComponent_Template","ExtractDownloadComponent_div_6_Template","ExtractDownloadComponent_span_9_Template","ExtractDownloadComponent_span_10_Template","ExtractDownloadComponent_span_11_Template","ExtractDownloadComponent_span_12_Template","ExtractDownloadComponent_div_15_Template","ExtractDownloadComponent_Template_button_click_17_listener","ExtractDownloadComponent_div_19_Template","ExtractDownloadComponent_div_20_Template","ExtractDownloadComponent_div_21_Template","Validators","PatientSelectionComponent_div_10_span_1_Template","PatientSelectionComponent_div_10_span_2_Template","tmp_0_0","patientForm","get","errors","tmp_1_0","errorMessage","patient_r10","dischDtTm","PatientSelectionComponent_div_18_div_4_Template_div_click_0_listener","_r14","selectPatient","PatientSelectionComponent_div_18_div_4_span_30_Template","fin","mrn","dateOfBirth","sex","facility","unit","encntrType","medService","regDtTm","arrivalDtTm","getTime","PatientSelectionComponent_div_18_div_4_Template","patientSearchResults","PatientSelectionComponent_div_19_Template_button_click_5_listener","_r18","ctx_r17","openChart","PatientSelectionComponent_div_19_Template_button_click_9_listener","ctx_r19","openMultimediaManager","PatientSelectionComponent_div_19_div_72_Template","PatientSelectionComponent_div_19_div_78_Template","ɵɵtextInterpolate2","fb","cernerActionService","patientSelected","showPatientSelection","group","required","minLength","onSubmit","valid","value","searchPatients","patients","patient","getPatientDocuments","resetForm","reset","FormBuilder","CernerActionService","PatientSelectionComponent_Template","PatientSelectionComponent_div_4_Template","PatientSelectionComponent_Template_form_ngSubmit_5_listener","PatientSelectionComponent_div_10_Template","PatientSelectionComponent_span_13_Template","PatientSelectionComponent_span_14_Template","PatientSelectionComponent_Template_button_click_15_listener","PatientSelectionComponent_div_17_Template","PatientSelectionComponent_div_18_Template","PatientSelectionComponent_div_19_Template","tmp_3_0","invalid","touched","tmp_5_0","el","getElementById","undefined","CernerAction","action","data","orderId","viewOrderAsync","putLog","viewAppointmentAsync","modifyOrderAsync","orderInfoViewer","external","DiscernObjectFactory","LaunchOrderInfoViewer","actionType","eventId","parseFloat","schEventId","scheduleId","schedulingActions","ShowView","ShowHistoryView","_this4","orderLst","customizeFlags","enablePowerPlans","tabLst","defaultDisplay","silentSignFlag","silentSign","parameters","mpagesEventCall","ɵɵinject","factory","ɵfac","providedIn","Observable","customService","observer","load","customScript","script","run","requestType","requestData","clearPatientSource","raw","complete","JSON","stringify","chs_document_extract_svc_request","mapToPatientSearchResults","mapToPatientInfo","downloadDocuments","dmsMediaInstanceIds","downloadResponse","parseDownloadResponse","downloadSingleDocument","dmsMediaInstanceRequest","dmsMediaInstanceId","downloadResult","parseDownloadSingleDocumentResponse","results","currentIndex","processNext","currentRequest","parseExtractResponse","qual","Array","isArray","nameFullFormatted","dob","parseDate","Date","dateStr","months","parts","split","day","month","year","isNaN","patientQual","dmsQual","createdDtTm","formatFileSize","contentSize","contentTypeKey","contentTypeDescription","identifier","contentUid","mediaObjectIdentifier","parentEntityName","parentEntityId","bytes","k","sizes","i","floor","pow","downloadDocuments_reply","contentType","dmsItem","isSuccess","downloadedInd","CAMM_DOWNLOAD_RESPONSE","FULLPATH","MESSAGE","downloadSingleDocument_reply","reply","statusData","zipFilename","text","metadataFilename","zipCammIdentifier","createExtract_reply","getLoadedConfigData","systemCredentials_reply","currentHost","formData","FormData","append","setupAuth","_ref","toPromise","authString","credentials_b64","btoa","setRequestHeader","credError","authError","apply","arguments","CustomService","getArrayLength","key_r1","getObjectKeys","getDisplayValue","subKey_r12","NestedObjectViewerComponent_div_1_div_11_div_2_div_1_span_5_span_2_Template","NestedObjectViewerComponent_div_1_div_11_div_2_div_1_span_5_span_3_Template","getValueType","isObject","NestedObjectViewerComponent_div_1_div_11_div_2_div_1_span_4_Template","NestedObjectViewerComponent_div_1_div_11_div_2_div_1_span_5_Template","isExpandable","NestedObjectViewerComponent_div_1_div_11_div_2_div_1_Template","ctx_r30","item_r28","ctx_r33","NestedObjectViewerComponent_div_1_div_11_div_3_div_1_span_5_span_2_Template","NestedObjectViewerComponent_div_1_div_11_div_3_div_1_span_5_span_3_Template","ctx_r31","NestedObjectViewerComponent_div_1_div_11_div_3_div_1_span_4_Template","NestedObjectViewerComponent_div_1_div_11_div_3_div_1_span_5_Template","i_r29","ctx_r27","NestedObjectViewerComponent_div_1_div_11_div_3_div_1_Template","ctx_r9","ctx_r10","getFullPath","expandedSections","onTogglePath","NestedObjectViewerComponent_div_1_div_11_div_2_Template","NestedObjectViewerComponent_div_1_div_11_div_3_Template","NestedObjectViewerComponent_div_1_div_11_div_4_Template","NestedObjectViewerComponent_div_1_div_11_div_5_Template","NestedObjectViewerComponent_div_1_Template_div_click_1_listener","_r43","ctx_r42","togglePath","NestedObjectViewerComponent_div_1_span_9_Template","NestedObjectViewerComponent_div_1_span_10_Template","NestedObjectViewerComponent_div_1_div_11_Template","isPathExpanded","formatKey","path","Set","obj","Object","keys","arr","key","str","toUpperCase","trim","has","NestedObjectViewerComponent_Template","NestedObjectViewerComponent_div_1_Template","styles","SystemConfigurationComponent_div_8_Template_button_click_18_listener","_r3","clear","SystemConfigurationComponent_div_8_Template_button_click_20_listener","expandAll","bind","toggleSection","sectionKey","isSectionExpanded","expandAllRecursive","fullPath","add","getValueByPath","reduce","delete","SystemConfigurationComponent_Template","SystemConfigurationComponent_div_8_Template","SystemConfigurationComponent_div_9_Template","buildVersion","production","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","err"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}